[
    {
        "id": "e201e2d1a09b1eed",
        "type": "tab",
        "label": "MQTT Contoller",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "471ac2a8a5e8653b",
        "type": "tab",
        "label": "Rule Engine",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "1d6a28c3c2b677b5",
        "type": "tab",
        "label": "Device Management",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "de4cf0a89bfc7b01",
        "type": "tab",
        "label": "Dashboard (User Management)",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "cfdddf09d7102807",
        "type": "tab",
        "label": "Schedule Management",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "5136785d38f71e48",
        "type": "tab",
        "label": "ReST API (Deprecated)",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "6247d9d13f3d1415",
        "type": "tab",
        "label": "TestCases",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "9aea9324d5ac451d",
        "type": "group",
        "z": "e201e2d1a09b1eed",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "66fe01abf6fe7266",
            "9452a8a32bbc6bc3",
            "aad6ef1bb2073790",
            "e02a03ae88bd28b5",
            "5b4aa7bf2c540460",
            "dd6a4ab68140c995",
            "3c8220faa4d80124",
            "3536b83ee3937a04"
        ],
        "x": 14,
        "y": 2299,
        "w": 972,
        "h": 202
    },
    {
        "id": "ffff053900bb63ca",
        "type": "group",
        "z": "e201e2d1a09b1eed",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "9619a5cf30052fea",
            "aa6596d2526e659b",
            "3e07cc69cbb8ea96",
            "f0a2fec2ef68ac63",
            "ddfba6492c27e12b",
            "354271f841ef0663"
        ],
        "x": 14,
        "y": 2739,
        "w": 972,
        "h": 122
    },
    {
        "id": "6bc1d82a48ceadb0",
        "type": "group",
        "z": "e201e2d1a09b1eed",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "bd0a924ca05b5d11",
            "84a7c674586bc7dd",
            "bd52e6c83bc0d652",
            "9b44092adc823348",
            "effafe1b29e91ed8",
            "64ae96c2314cc417",
            "c0b2b2c48ff0c65b",
            "0d81cc62a3607b9f"
        ],
        "x": 14,
        "y": 2519,
        "w": 972,
        "h": 202
    },
    {
        "id": "ed8b5377f33374f1",
        "type": "group",
        "z": "5136785d38f71e48",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "4ef2f9d461607592",
            "bf0497842136d6fe",
            "a1cef4fb8a5fcb51",
            "c6e8c4cb3188a32b",
            "d42d5b33466f8589",
            "b3a51c03435b44e1",
            "69fd65e799173d30"
        ],
        "x": 14,
        "y": 19,
        "w": 992,
        "h": 202
    },
    {
        "id": "7457db638135fbdb",
        "type": "group",
        "z": "5136785d38f71e48",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "06aa5ee664b7d487",
            "81050b48ca38a079",
            "70a3925943c1bb85",
            "53021f46cb83d817",
            "d8f75eb592a51fa4",
            "edcb6c70dd6d14e2"
        ],
        "x": 14,
        "y": 239,
        "w": 1232,
        "h": 122
    },
    {
        "id": "617bb68c7b2284cf",
        "type": "group",
        "z": "5136785d38f71e48",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "9a663ef956e5fb19",
            "469e6ab343dfda6b",
            "e0c5e577413cb530",
            "a6b218af98a297d3",
            "9090baec9ebee909",
            "d9d9b248f540098f",
            "7859c36ac49760a1",
            "55491d7a1871f5b9",
            "4a0c36d98b93a985",
            "29544c1af11d03dc"
        ],
        "x": 14,
        "y": 379,
        "w": 1252,
        "h": 242
    },
    {
        "id": "778ff3b8764df908",
        "type": "group",
        "z": "5136785d38f71e48",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "6112add4d31eafc5",
            "baee9952c2ae31be",
            "2337f5a514cb602a",
            "fbbee3f451f3badc",
            "281376abb8f58d6c",
            "4d176f4e358ad420",
            "a4aee1972fe7f78f",
            "7df444c1898f40eb",
            "f21752adbe6c1f1c",
            "29528837a21f678f",
            "0f4cc6ac5817a644",
            "388d2936128df466"
        ],
        "x": 14,
        "y": 639,
        "w": 1232,
        "h": 302
    },
    {
        "id": "08368f4a4f432e34",
        "type": "group",
        "z": "5136785d38f71e48",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "a9141c1706a40ab5",
            "61340a460ebd6e30",
            "2dc06f1c3dd37890",
            "85d62b126d5ac07b",
            "188ef26fe77e73f6",
            "5d8ab9d77ee88813",
            "0415dcf149cfef6d",
            "babe1176b387d4c1",
            "e1a08731fe7dc59f",
            "4d46bbc216bdc43a",
            "a7901b4b61099963",
            "7a1158daf4dae513"
        ],
        "x": 14,
        "y": 959,
        "w": 1232,
        "h": 302
    },
    {
        "id": "2dac822f9fa8fa31",
        "type": "group",
        "z": "e201e2d1a09b1eed",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "684980074095d89a",
            "07f68243e1d1abb9",
            "8d82db435247b0de",
            "bbf8fda66520b4fb",
            "3bfda25f5858bb7c",
            "c58f1a558f26bfe6"
        ],
        "x": 14,
        "y": 339,
        "w": 832,
        "h": 142
    },
    {
        "id": "c5351c5c421b358c",
        "type": "group",
        "z": "6247d9d13f3d1415",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "5e14e9da9dbc6d0a",
            "a8950ea79b50ebd1",
            "247061156250feef"
        ],
        "x": 34,
        "y": 19,
        "w": 332,
        "h": 122
    },
    {
        "id": "4b08a40382bbc675",
        "type": "group",
        "z": "e201e2d1a09b1eed",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "20f4f41054ab6fbb",
            "4b225b27884db1e4",
            "7ce853131aab1b80"
        ],
        "x": 14,
        "y": 499,
        "w": 402,
        "h": 122
    },
    {
        "id": "a11b1041e59fd5f1",
        "type": "group",
        "z": "471ac2a8a5e8653b",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "f9586b52cca5f0f0",
            "e40e1caab814659f",
            "d6338e3b7e3eef29",
            "a6d7fe9d63dd96a7",
            "ad2439c14b8bd202",
            "867e840cf38e4f21"
        ],
        "x": 1314,
        "y": 19,
        "w": 952,
        "h": 122
    },
    {
        "id": "2ae0cb5db9c8444c",
        "type": "group",
        "z": "471ac2a8a5e8653b",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "e31d80334afaacd7",
            "a224124e9cd754de",
            "a66c1505f81782a9",
            "ccb1252d70b920ea",
            "9873334e229c9642",
            "a32a8f7480637f10",
            "9db4188f93f88743",
            "210576e9a6ad8c2f"
        ],
        "x": 1314,
        "y": 159,
        "w": 972,
        "h": 202
    },
    {
        "id": "47469a4b8eaa1d6e",
        "type": "group",
        "z": "471ac2a8a5e8653b",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "d758d718739eae98",
            "39fa090204e62cf5",
            "a3bb54a6c0acd2bd",
            "0ba3c69102cd4eba",
            "74e3ad1c18600c78",
            "2f05d2592534c922",
            "f576402fd03b60e9",
            "370a61d88bdfc0c7"
        ],
        "x": 1314,
        "y": 379,
        "w": 952,
        "h": 202
    },
    {
        "id": "dd5bd293402b6632",
        "type": "group",
        "z": "1d6a28c3c2b677b5",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "6dcf2f1e68129393",
            "548e32c979c8746b",
            "683726f9b811e7ba",
            "837aa64d37cd15ac",
            "5656d3bc8f820a96",
            "c7ef3c6652780e66",
            "caae02f4db574a13",
            "13f884a120958926"
        ],
        "x": 14,
        "y": 19,
        "w": 1092,
        "h": 202
    },
    {
        "id": "47625275f7240e2a",
        "type": "group",
        "z": "6247d9d13f3d1415",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "ed6c73a2793ca5a9",
            "84d20db841946262",
            "3ea44f65a91ee26c"
        ],
        "x": 34,
        "y": 159,
        "w": 392,
        "h": 122
    },
    {
        "id": "2e8c563c95931cf4",
        "type": "group",
        "z": "6247d9d13f3d1415",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "d9b0e5a3250a2956",
            "a7474bdc7022a0a6",
            "556876be6c6ceeff"
        ],
        "x": 34,
        "y": 299,
        "w": 372,
        "h": 122
    },
    {
        "id": "e4ec5a08b48d755b",
        "type": "group",
        "z": "6247d9d13f3d1415",
        "name": "",
        "style": {
            "label": true
        },
        "nodes": [
            "2445293428e63a7d",
            "091eee3ad29c7346",
            "0d5b1751af6329c2"
        ],
        "x": 514,
        "y": 19,
        "w": 312,
        "h": 122
    },
    {
        "id": "37e07ac837df916b",
        "type": "group",
        "z": "6247d9d13f3d1415",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "38c5aa798e539ecd",
            "9eddf0e384471a2d",
            "d31aab6cc8c7ec1c"
        ],
        "x": 514,
        "y": 159,
        "w": 372,
        "h": 122
    },
    {
        "id": "ac8de8dddde18929",
        "type": "group",
        "z": "6247d9d13f3d1415",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "d2657c82c2750414",
            "4769f71730b7e6f7",
            "2a4d9107a01bafb6"
        ],
        "x": 514,
        "y": 299,
        "w": 352,
        "h": 122
    },
    {
        "id": "93563550e5e5b8d9",
        "type": "group",
        "z": "471ac2a8a5e8653b",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "52b058fd5cb5b506",
            "ac06a2cc3f547450",
            "dce3be978a1f0dc6",
            "eccdd3341675c67f",
            "2eeb2c101f1b230b"
        ],
        "x": 14,
        "y": 839,
        "w": 898,
        "h": 548
    },
    {
        "id": "9ea8eb5fbd9fba9b",
        "type": "group",
        "z": "5136785d38f71e48",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "30c14daec4a1f749",
            "77e67a3f4cfd0f70",
            "b235197fa65b1d61",
            "cb62d5174fdbc2dc"
        ],
        "x": 14,
        "y": 1439,
        "w": 672,
        "h": 142
    },
    {
        "id": "a429ddf13a770b14",
        "type": "group",
        "z": "5136785d38f71e48",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "f43917740733c55e",
            "e4740575f27080e7",
            "0ed1c226b2a3efec",
            "d3c7fdd2bdc2106c"
        ],
        "x": 14,
        "y": 1279,
        "w": 612,
        "h": 142
    },
    {
        "id": "f2145b5e6ee8c3d0",
        "type": "group",
        "z": "471ac2a8a5e8653b",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "59914edffebb6f14",
            "8ce6dd09f395eb1a",
            "a9338e9508446387",
            "a628278c91f48f09",
            "e5a56f43ee52fc15",
            "86e4d607c3185bb9",
            "0409ed639d712c6c"
        ],
        "x": 14,
        "y": 379,
        "w": 1218,
        "h": 442
    },
    {
        "id": "827443b04cb37fc9",
        "type": "group",
        "z": "471ac2a8a5e8653b",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "d26c7431209e10a7",
            "6a9beada022e3022",
            "380f591b24656790",
            "5a1fee37aaaa0e70",
            "b172ae4261416e78"
        ],
        "x": 14,
        "y": 19,
        "w": 858,
        "h": 348
    },
    {
        "id": "20d6d2a97d7b9fa9",
        "type": "group",
        "z": "e201e2d1a09b1eed",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "f2d1b4ad256117db",
            "0fd8624766b2dc3b",
            "4a5ac88d5cf67f84",
            "5d6dc5b2b03096cd",
            "28196b10195ca582"
        ],
        "x": 14,
        "y": 19,
        "w": 1018,
        "h": 308
    },
    {
        "id": "78810c964d16f3b6",
        "type": "group",
        "z": "1d6a28c3c2b677b5",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "343fc966dcf2740b",
            "869efd42aae3079a",
            "b1a94f49e2c4f63b",
            "cf7c5fb09faeaaaa",
            "3ce598360cdb14a1"
        ],
        "x": 1134,
        "y": 19,
        "w": 732,
        "h": 142
    },
    {
        "id": "39d56ac3bdfcb912",
        "type": "group",
        "z": "1d6a28c3c2b677b5",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "9007b4d286d5cc08",
            "95730b6fc66fb065",
            "59e6782306d73259",
            "42080da9808971e0",
            "f45d589dd0982571"
        ],
        "x": 14,
        "y": 239,
        "w": 1038,
        "h": 348
    },
    {
        "id": "707def8204711e94",
        "type": "group",
        "z": "de4cf0a89bfc7b01",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "e4aaa6bd29ea318e",
            "496ee6e2867044a2",
            "4c6db570c360190d",
            "41fd5d2f442075b7",
            "6158adba59b15584",
            "563a4537d95742d1",
            "5cf26914d910f5d5"
        ],
        "x": 14,
        "y": 19,
        "w": 372,
        "h": 342
    },
    {
        "id": "7afd9131bb01f472",
        "type": "group",
        "z": "de4cf0a89bfc7b01",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "65d65853a43abedb",
            "52d707234a0ef984",
            "f855d8dc8cbdec90",
            "7048e413a3b7452c",
            "7d979c489cd8f986"
        ],
        "x": 414,
        "y": 19,
        "w": 312,
        "h": 262
    },
    {
        "id": "125992f372147313",
        "type": "group",
        "z": "de4cf0a89bfc7b01",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "7ddbb441f79cf458",
            "980db0748f8a9189",
            "1a92952a16c291c7",
            "13bd3501b247cb8a",
            "f1b91460db574379",
            "0881e86bb8f247dc",
            "9cda233f1f5c5cee",
            "fc6f0656d97eaf7b"
        ],
        "x": 754,
        "y": 19,
        "w": 332,
        "h": 382
    },
    {
        "id": "2a453a7e3ac8b7d5",
        "type": "group",
        "z": "cfdddf09d7102807",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "3bd254d2b6aa1289",
            "7890e0bbca4fb21c",
            "d7e12f357b37ad4a",
            "91c825ea46b2a62d",
            "26c6221db2264c7e"
        ],
        "x": 14,
        "y": 19,
        "w": 978,
        "h": 288
    },
    {
        "id": "93bbf3532a16dd26",
        "type": "group",
        "z": "1d6a28c3c2b677b5",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "d32cb6e3d0f4368b",
            "e44abfc1c2e2ec0a",
            "e4c31b976d4277fb",
            "54cb067b38be771e",
            "863e490f3b70d122"
        ],
        "x": 14,
        "y": 619,
        "w": 772,
        "h": 142
    },
    {
        "id": "2f09dd3159695cd2",
        "type": "group",
        "z": "6247d9d13f3d1415",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "47845954465f4599",
            "b0a4393da5e855b7",
            "2a16b548da7aa63e",
            "2ad7a4106513b10c",
            "0d68f82b9254cd4a"
        ],
        "x": 34,
        "y": 439,
        "w": 652,
        "h": 122
    },
    {
        "id": "836b236884538e1e",
        "type": "group",
        "z": "6247d9d13f3d1415",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "b1737a348329c768",
            "6b5a38a871a45254",
            "38b373e128509916",
            "d91e3aa3f2331d75",
            "075beec50ea49c1f"
        ],
        "x": 34,
        "y": 579,
        "w": 652,
        "h": 122
    },
    {
        "id": "dc25248d8126293c",
        "type": "group",
        "z": "6247d9d13f3d1415",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "ae72da33cce2364f",
            "fd631fb9895f012a",
            "92660a09deb2b171",
            "b538d59b36fc6b28",
            "35a0818c8e8895c8"
        ],
        "x": 34,
        "y": 719,
        "w": 652,
        "h": 122
    },
    {
        "id": "dce3be978a1f0dc6",
        "type": "group",
        "z": "471ac2a8a5e8653b",
        "g": "93563550e5e5b8d9",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "0627c62aedfa7aba",
            "734ed70c0979e82a",
            "aa4e5a562cf0ea1d"
        ],
        "x": 394,
        "y": 899,
        "w": 352,
        "h": 122
    },
    {
        "id": "eccdd3341675c67f",
        "type": "group",
        "z": "471ac2a8a5e8653b",
        "g": "93563550e5e5b8d9",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "541a182f719b1b1a",
            "081805a62242bda3",
            "9574a7e12874334c"
        ],
        "x": 394,
        "y": 1039,
        "w": 352,
        "h": 122
    },
    {
        "id": "2eeb2c101f1b230b",
        "type": "group",
        "z": "471ac2a8a5e8653b",
        "g": "93563550e5e5b8d9",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "d65bb5b65d13d763",
            "1c9409a84653f09a",
            "f53906daa33a245d",
            "d00ae14703c5d95b",
            "87dbd4b1f03a57b0"
        ],
        "x": 394,
        "y": 1179,
        "w": 492,
        "h": 182
    },
    {
        "id": "86e4d607c3185bb9",
        "type": "group",
        "z": "471ac2a8a5e8653b",
        "g": "f2145b5e6ee8c3d0",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "8bf7bbaee89bf1bf",
            "bf4cf524805778f7",
            "a65d4ec274dcc92b"
        ],
        "x": 274,
        "y": 439,
        "w": 352,
        "h": 122
    },
    {
        "id": "0409ed639d712c6c",
        "type": "group",
        "z": "471ac2a8a5e8653b",
        "g": "f2145b5e6ee8c3d0",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "66e4dfb402d103d6",
            "d842c07a96394264",
            "367fe98274ddc310",
            "40dba8a6c8657ada",
            "7224aa31cde2404b",
            "64c53d1b11cf7d48"
        ],
        "x": 594,
        "y": 579,
        "w": 612,
        "h": 162
    },
    {
        "id": "5a1fee37aaaa0e70",
        "type": "group",
        "z": "471ac2a8a5e8653b",
        "g": "827443b04cb37fc9",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "03dbfc58492a3571",
            "febc1d17fe23f57e",
            "cc7b98ab4898a4fc"
        ],
        "x": 254,
        "y": 79,
        "w": 352,
        "h": 122
    },
    {
        "id": "b172ae4261416e78",
        "type": "group",
        "z": "471ac2a8a5e8653b",
        "g": "827443b04cb37fc9",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "4375a052d4bc7f87",
            "a4c478c62c932d4c",
            "95f7cf496a98ebfa",
            "a295b2a6bd4c6133"
        ],
        "x": 254,
        "y": 219,
        "w": 592,
        "h": 122
    },
    {
        "id": "5d6dc5b2b03096cd",
        "type": "group",
        "z": "e201e2d1a09b1eed",
        "g": "20d6d2a97d7b9fa9",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "bdc10140ffe8560d",
            "b6087fa03967b97d",
            "51ac77f1ebf7ae2d",
            "4d892246ad35ef09"
        ],
        "x": 434,
        "y": 79,
        "w": 572,
        "h": 122
    },
    {
        "id": "28196b10195ca582",
        "type": "group",
        "z": "e201e2d1a09b1eed",
        "g": "20d6d2a97d7b9fa9",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "7a7161d47e31ef97",
            "400a9ac35151a339"
        ],
        "x": 434,
        "y": 219,
        "w": 272,
        "h": 82
    },
    {
        "id": "42080da9808971e0",
        "type": "group",
        "z": "1d6a28c3c2b677b5",
        "g": "39d56ac3bdfcb912",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "fb9f5e0234f29769",
            "b77a5593eddb7e33",
            "7fc8e7a46b665229"
        ],
        "x": 474,
        "y": 299,
        "w": 392,
        "h": 122
    },
    {
        "id": "f45d589dd0982571",
        "type": "group",
        "z": "1d6a28c3c2b677b5",
        "g": "39d56ac3bdfcb912",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "4b24a488d40bee10",
            "ea30452d1007877b",
            "92f4f5ff4c1aa6ff",
            "a3658b821c559c70"
        ],
        "x": 474,
        "y": 439,
        "w": 552,
        "h": 122
    },
    {
        "id": "91c825ea46b2a62d",
        "type": "group",
        "z": "cfdddf09d7102807",
        "g": "2a453a7e3ac8b7d5",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "ef4312c31a094311",
            "c79ce7257e70319f",
            "03b0e0d04d47db70"
        ],
        "x": 274,
        "y": 159,
        "w": 352,
        "h": 122
    },
    {
        "id": "26c6221db2264c7e",
        "type": "group",
        "z": "cfdddf09d7102807",
        "g": "2a453a7e3ac8b7d5",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "aebb19a76eb11b08",
            "929aa2379c7299fd",
            "4c2abee3bd26a5b8"
        ],
        "x": 654,
        "y": 159,
        "w": 312,
        "h": 122
    },
    {
        "id": "f2f86710f80408e7",
        "type": "mqtt-broker",
        "name": "",
        "broker": "localhost",
        "port": "1883",
        "clientid": "node-red",
        "autoConnect": false,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "1654a6d7a221376c",
        "type": "MySQLdatabase",
        "name": "",
        "host": "127.0.0.1",
        "port": "3306",
        "db": "tSeriesDB",
        "tz": "",
        "charset": "UTF8"
    },
    {
        "id": "a2a345f1c4a3679a",
        "type": "tls-config",
        "name": "",
        "cert": "/etc/letsencrypt/live/petificationblue.ddns.net/cert.pem",
        "key": "/etc/letsencrypt/live/petificationblue.ddns.net/privkey.pem",
        "ca": "/etc/letsencrypt/live/petificationblue.ddns.net/chain.pem",
        "certname": "",
        "keyname": "",
        "caname": "",
        "servername": "",
        "verifyservercert": false,
        "alpnprotocol": ""
    },
    {
        "id": "bdc10140ffe8560d",
        "type": "debug",
        "z": "e201e2d1a09b1eed",
        "g": "5d6dc5b2b03096cd",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 160,
        "wires": []
    },
    {
        "id": "b6087fa03967b97d",
        "type": "function",
        "z": "e201e2d1a09b1eed",
        "g": "5d6dc5b2b03096cd",
        "name": "MakeSQLQuery",
        "func": "// Create query\nmsg.topic = \"INSERT INTO thingsData (topic, payload, timestamp, deleted)\" +\n            \"VALUES ('\" + msg.mqtt.topic + \"','\" + msg.mqtt.payload + \"','\" + msg.mqtt.timestamp + \"', 0);\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 160,
        "wires": [
            [
                "51ac77f1ebf7ae2d"
            ]
        ]
    },
    {
        "id": "f2d1b4ad256117db",
        "type": "comment",
        "z": "e201e2d1a09b1eed",
        "g": "20d6d2a97d7b9fa9",
        "name": "MQTT MSG Gate",
        "info": "",
        "x": 120,
        "y": 60,
        "wires": []
    },
    {
        "id": "51ac77f1ebf7ae2d",
        "type": "mysql",
        "z": "e201e2d1a09b1eed",
        "g": "5d6dc5b2b03096cd",
        "mydb": "1654a6d7a221376c",
        "name": "",
        "x": 720,
        "y": 160,
        "wires": [
            [
                "bdc10140ffe8560d"
            ]
        ]
    },
    {
        "id": "66fe01abf6fe7266",
        "type": "http in",
        "z": "e201e2d1a09b1eed",
        "g": "9aea9324d5ac451d",
        "name": "",
        "url": "/rules/enable/id/:id",
        "method": "patch",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 2380,
        "wires": [
            [
                "aad6ef1bb2073790"
            ]
        ]
    },
    {
        "id": "9452a8a32bbc6bc3",
        "type": "http in",
        "z": "e201e2d1a09b1eed",
        "g": "9aea9324d5ac451d",
        "name": "",
        "url": "/rules/disable/id/:id",
        "method": "patch",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 2460,
        "wires": [
            [
                "e02a03ae88bd28b5"
            ]
        ]
    },
    {
        "id": "aad6ef1bb2073790",
        "type": "function",
        "z": "e201e2d1a09b1eed",
        "g": "9aea9324d5ac451d",
        "name": "CreateQuery",
        "func": "// Create query for enabling\n\nmsg.action = \"enable\";\n\nmsg.topic =\n    \"UPDATE rulesData\" +\n    \" SET active=1\" +\n    \" WHERE\" +\n    \" id=\" + msg.req.params.id + \";\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 2380,
        "wires": [
            [
                "5b4aa7bf2c540460"
            ]
        ]
    },
    {
        "id": "e02a03ae88bd28b5",
        "type": "function",
        "z": "e201e2d1a09b1eed",
        "g": "9aea9324d5ac451d",
        "name": "CreateQuery",
        "func": "// Create query for disabling\n\nmsg.action = \"disable\";\n\nmsg.topic =\n    \"UPDATE rulesData\" +\n    \" SET active=0\" +\n    \" WHERE\" +\n    \" id=\" + msg.req.params.id + \";\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 2460,
        "wires": [
            [
                "5b4aa7bf2c540460"
            ]
        ]
    },
    {
        "id": "5b4aa7bf2c540460",
        "type": "mysql",
        "z": "e201e2d1a09b1eed",
        "g": "9aea9324d5ac451d",
        "mydb": "1654a6d7a221376c",
        "name": "",
        "x": 540,
        "y": 2420,
        "wires": [
            [
                "dd6a4ab68140c995"
            ]
        ]
    },
    {
        "id": "dd6a4ab68140c995",
        "type": "function",
        "z": "e201e2d1a09b1eed",
        "g": "9aea9324d5ac451d",
        "name": "PrepareResponse",
        "func": "// Prepare response\n\nmsg.payload = {\n    \"status\": msg.action + \" success\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 2420,
        "wires": [
            [
                "3c8220faa4d80124"
            ]
        ]
    },
    {
        "id": "3c8220faa4d80124",
        "type": "http response",
        "z": "e201e2d1a09b1eed",
        "g": "9aea9324d5ac451d",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 910,
        "y": 2420,
        "wires": []
    },
    {
        "id": "3536b83ee3937a04",
        "type": "comment",
        "z": "e201e2d1a09b1eed",
        "g": "9aea9324d5ac451d",
        "name": "Enable/Disable Rule by ID",
        "info": "",
        "x": 150,
        "y": 2340,
        "wires": []
    },
    {
        "id": "bd0a924ca05b5d11",
        "type": "http in",
        "z": "e201e2d1a09b1eed",
        "g": "6bc1d82a48ceadb0",
        "name": "",
        "url": "/rules/enable/all",
        "method": "patch",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 2600,
        "wires": [
            [
                "bd52e6c83bc0d652"
            ]
        ]
    },
    {
        "id": "84a7c674586bc7dd",
        "type": "http in",
        "z": "e201e2d1a09b1eed",
        "g": "6bc1d82a48ceadb0",
        "name": "",
        "url": "/rules/disable/all",
        "method": "patch",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 2680,
        "wires": [
            [
                "9b44092adc823348"
            ]
        ]
    },
    {
        "id": "bd52e6c83bc0d652",
        "type": "function",
        "z": "e201e2d1a09b1eed",
        "g": "6bc1d82a48ceadb0",
        "name": "CreateQuery",
        "func": "// Create query for enabling all\n\nmsg.action = \"enable all\";\nmsg.topic = \"UPDATE rulesData SET active=1;\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 2600,
        "wires": [
            [
                "effafe1b29e91ed8"
            ]
        ]
    },
    {
        "id": "9b44092adc823348",
        "type": "function",
        "z": "e201e2d1a09b1eed",
        "g": "6bc1d82a48ceadb0",
        "name": "CreateQuery",
        "func": "// Create query for disabling all\n\nmsg.action = \"disable all\";\nmsg.topic = \"UPDATE rulesData SET active=0;\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 2680,
        "wires": [
            [
                "effafe1b29e91ed8"
            ]
        ]
    },
    {
        "id": "effafe1b29e91ed8",
        "type": "mysql",
        "z": "e201e2d1a09b1eed",
        "g": "6bc1d82a48ceadb0",
        "mydb": "1654a6d7a221376c",
        "name": "",
        "x": 540,
        "y": 2640,
        "wires": [
            [
                "64ae96c2314cc417"
            ]
        ]
    },
    {
        "id": "64ae96c2314cc417",
        "type": "function",
        "z": "e201e2d1a09b1eed",
        "g": "6bc1d82a48ceadb0",
        "name": "PrepareResponse",
        "func": "// Prepare response\n\nmsg.payload = {\n    \"status\": msg.action + \" success\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 2640,
        "wires": [
            [
                "c0b2b2c48ff0c65b"
            ]
        ]
    },
    {
        "id": "c0b2b2c48ff0c65b",
        "type": "http response",
        "z": "e201e2d1a09b1eed",
        "g": "6bc1d82a48ceadb0",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 910,
        "y": 2640,
        "wires": []
    },
    {
        "id": "9619a5cf30052fea",
        "type": "http in",
        "z": "e201e2d1a09b1eed",
        "g": "ffff053900bb63ca",
        "name": "",
        "url": "/rules/:rulename",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 2820,
        "wires": [
            [
                "aa6596d2526e659b"
            ]
        ]
    },
    {
        "id": "0d81cc62a3607b9f",
        "type": "comment",
        "z": "e201e2d1a09b1eed",
        "g": "6bc1d82a48ceadb0",
        "name": "Enable/Disable All Rules",
        "info": "",
        "x": 150,
        "y": 2560,
        "wires": []
    },
    {
        "id": "aa6596d2526e659b",
        "type": "function",
        "z": "e201e2d1a09b1eed",
        "g": "ffff053900bb63ca",
        "name": "CreateQuery",
        "func": "// Create query\nvar ruleName = msg.req.params.rulename;\nvar topicPattern = msg.req.body.topicPattern;\nvar payloadPattern = msg.req.body.payloadPattern;\nvar method = msg.req.body.method;\nvar webHook = msg.req.body.webHook;\n\nmsg.topic =\n\"INSERT INTO rulesData (ruleName, topicPAttern, payloadPattern, method, webHook)\" +\n\" VALUES ('\" + ruleName + \"', '\" + topicPattern + \"', '\" + payloadPattern + \"', '\" + method + \"', '\" + webHook + \"');\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 2820,
        "wires": [
            [
                "3e07cc69cbb8ea96"
            ]
        ]
    },
    {
        "id": "3e07cc69cbb8ea96",
        "type": "mysql",
        "z": "e201e2d1a09b1eed",
        "g": "ffff053900bb63ca",
        "mydb": "1654a6d7a221376c",
        "name": "",
        "x": 540,
        "y": 2820,
        "wires": [
            [
                "f0a2fec2ef68ac63"
            ]
        ]
    },
    {
        "id": "f0a2fec2ef68ac63",
        "type": "function",
        "z": "e201e2d1a09b1eed",
        "g": "ffff053900bb63ca",
        "name": "PrepareResponse",
        "func": "// Prepare response\n\nif(msg.payload.affectedRows !== 0) {\n    msg.payload = {\n        \"status\": \"rule added\",\n        \"ruleName\": msg.req.params.rulename,\n        \"ruleId\": msg.payload.insertId\n    };\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 2820,
        "wires": [
            [
                "ddfba6492c27e12b"
            ]
        ]
    },
    {
        "id": "ddfba6492c27e12b",
        "type": "http response",
        "z": "e201e2d1a09b1eed",
        "g": "ffff053900bb63ca",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 910,
        "y": 2820,
        "wires": []
    },
    {
        "id": "354271f841ef0663",
        "type": "comment",
        "z": "e201e2d1a09b1eed",
        "g": "ffff053900bb63ca",
        "name": "Create Rule",
        "info": "",
        "x": 110,
        "y": 2780,
        "wires": []
    },
    {
        "id": "0fd8624766b2dc3b",
        "type": "mqtt in",
        "z": "e201e2d1a09b1eed",
        "g": "20d6d2a97d7b9fa9",
        "name": "ListenEverything",
        "topic": "#",
        "qos": "1",
        "datatype": "auto",
        "broker": "f2f86710f80408e7",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 120,
        "y": 200,
        "wires": [
            [
                "4a5ac88d5cf67f84"
            ]
        ]
    },
    {
        "id": "684980074095d89a",
        "type": "http in",
        "z": "e201e2d1a09b1eed",
        "g": "2dac822f9fa8fa31",
        "name": "",
        "url": "/pub/:topic/:payload",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 440,
        "wires": [
            [
                "8d82db435247b0de"
            ]
        ]
    },
    {
        "id": "07f68243e1d1abb9",
        "type": "mqtt out",
        "z": "e201e2d1a09b1eed",
        "g": "2dac822f9fa8fa31",
        "name": "MQTT",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "f2f86710f80408e7",
        "x": 550,
        "y": 380,
        "wires": []
    },
    {
        "id": "8d82db435247b0de",
        "type": "function",
        "z": "e201e2d1a09b1eed",
        "g": "2dac822f9fa8fa31",
        "name": "CreateMessage",
        "func": "msg.topic = msg.req.params.topic.toString();\nmsg.payload = msg.req.params.payload.toString();\nmsg.qos = 2;\nmsg.retain = false;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 440,
        "wires": [
            [
                "bbf8fda66520b4fb",
                "07f68243e1d1abb9"
            ]
        ]
    },
    {
        "id": "bbf8fda66520b4fb",
        "type": "function",
        "z": "e201e2d1a09b1eed",
        "g": "2dac822f9fa8fa31",
        "name": "CreateResponse",
        "func": "msg.payload = {\n    success: true,\n    message:\"published: \" +\n            msg.req.params.topic + \n            \"/\" + \n            msg.req.params.payload\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 440,
        "wires": [
            [
                "3bfda25f5858bb7c"
            ]
        ]
    },
    {
        "id": "3bfda25f5858bb7c",
        "type": "http response",
        "z": "e201e2d1a09b1eed",
        "g": "2dac822f9fa8fa31",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 770,
        "y": 440,
        "wires": []
    },
    {
        "id": "c58f1a558f26bfe6",
        "type": "comment",
        "z": "e201e2d1a09b1eed",
        "g": "2dac822f9fa8fa31",
        "name": "Publish by REST/POST",
        "info": "",
        "x": 140,
        "y": 380,
        "wires": []
    },
    {
        "id": "20f4f41054ab6fbb",
        "type": "inject",
        "z": "e201e2d1a09b1eed",
        "g": "4b08a40382bbc675",
        "name": "Dynamic Connection",
        "props": [
            {
                "p": "action",
                "v": "connect",
                "vt": "str"
            },
            {
                "p": "broker",
                "v": "{\"broker\":\"localhost\",\"port\":\"1883\",\"clientid\":\"node-red-dyn\",\"force\":true}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 160,
        "y": 580,
        "wires": [
            [
                "4b225b27884db1e4"
            ]
        ]
    },
    {
        "id": "4b225b27884db1e4",
        "type": "mqtt out",
        "z": "e201e2d1a09b1eed",
        "g": "4b08a40382bbc675",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "f2f86710f80408e7",
        "x": 340,
        "y": 580,
        "wires": []
    },
    {
        "id": "7ce853131aab1b80",
        "type": "comment",
        "z": "e201e2d1a09b1eed",
        "g": "4b08a40382bbc675",
        "name": "Connection Configuration",
        "info": "",
        "x": 150,
        "y": 540,
        "wires": []
    },
    {
        "id": "4a5ac88d5cf67f84",
        "type": "function",
        "z": "e201e2d1a09b1eed",
        "g": "20d6d2a97d7b9fa9",
        "name": "Preprocessing",
        "func": "/****************************************************\n * MQTT MSG PREPROCESSOR                            *\n *                                                  *\n * REVD MSG FORMAT GUIDE:                           *\n *                                                  *\n * Topic:   users/$user_name/$client_id/$sub_topic  *\n * Payload: $payload                                *\n *                                                  *\n * PREPROCESSED RESULT:                             *\n * msg.mqtt: {                                      *\n *      topic:      $full_topic,                    *\n *      uname:      $user_name,                     *\n *      cid:        $client_id,                     *\n *      subTopic:   $sub_topic,                     *\n *      payload:    $payload,                       *\n *      timestamp:  current timestamp               *\n * }                                                *\n ****************************************************/\n\n// MQTT MSG Object\nmsg.mqtt = {};\n\n// Full Topic\nmsg.mqtt.topic = escape(msg.topic);\n\nconst parsed = msg.topic.split('/');\n\n// User_ID\nmsg.mqtt.uname = escape(parsed[1]);\n\n// Client_ID\nmsg.mqtt.cid = escape(parsed[2]);\n\n// Sub Topic\nmsg.mqtt.subTopic = escape(parsed[3]);\n\n// Payload\nmsg.mqtt.payload = escape(msg.payload);\n\n// Timestamp\n// get microtime\nlet timestamp = new Date().getTime()/1000;\n// pad it with trailing zeroes\ntimestamp = timestamp.toString() + \"000\";\n// trim to exact length 10 + 1 + 3\nmsg.mqtt.timestamp = timestamp.substring(0, 14);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 200,
        "wires": [
            [
                "b6087fa03967b97d",
                "7a7161d47e31ef97"
            ]
        ]
    },
    {
        "id": "7a7161d47e31ef97",
        "type": "link out",
        "z": "e201e2d1a09b1eed",
        "g": "28196b10195ca582",
        "name": "MQTT MSG Bus Out",
        "mode": "link",
        "links": [
            "6a9beada022e3022"
        ],
        "x": 475,
        "y": 260,
        "wires": []
    },
    {
        "id": "400a9ac35151a339",
        "type": "comment",
        "z": "e201e2d1a09b1eed",
        "g": "28196b10195ca582",
        "name": "MQTT MSG Bus Out",
        "info": "",
        "x": 590,
        "y": 260,
        "wires": []
    },
    {
        "id": "4d892246ad35ef09",
        "type": "comment",
        "z": "e201e2d1a09b1eed",
        "g": "5d6dc5b2b03096cd",
        "name": "DB/INSERT Everything",
        "info": "",
        "x": 560,
        "y": 120,
        "wires": []
    },
    {
        "id": "03dbfc58492a3571",
        "type": "function",
        "z": "471ac2a8a5e8653b",
        "g": "5a1fee37aaaa0e70",
        "name": "SearchRules",
        "func": "msg.topic = \"SELECT * FROM rulesData\" +\n            \" WHERE\" +\n            \" ('\" + msg.mqtt.topic + \"' LIKE topicPattern)\" +\n            \" AND\" +\n            \" ('\" + msg.mqtt.payload + \"' LIKE payloadPattern)\" +\n            \" AND active=0x01\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 160,
        "wires": [
            [
                "febc1d17fe23f57e"
            ]
        ]
    },
    {
        "id": "4375a052d4bc7f87",
        "type": "function",
        "z": "471ac2a8a5e8653b",
        "g": "b172ae4261416e78",
        "name": "CreateRequest",
        "func": "// Call webhook\nif(msg.payload.length !== 0)\n{\n    // Prepare values\n    const topic = encodeURIComponent(msg.mqtt.topic);\n    const uname = encodeURIComponent(msg.mqtt.uname);\n    const cid = encodeURIComponent(msg.mqtt.cid);\n    const subTopic = encodeURIComponent(msg.mqtt.subTopic);\n    const payload = encodeURIComponent(msg.mqtt.payload);\n    const timestamp = encodeURIComponent(msg.mqtt.timestamp);\n    \n    // Send webHook\n    for(var i = 0; i < msg.payload.length; i++)\n    {\n        msg.method = msg.payload[i].method;\n        msg.url = msg.payload[i].webHook\n            .replace(/yytopic/g, topic)\n            .replace(/yyuname/g, uname)\n            .replace(/yycid/g, cid)\n            .replace(/yysubtopic/g, subTopic)\n            .replace(/yypayload/g, payload)\n            .replace(/yytimestamp/g, timestamp);\n        node.send([msg]);\n    }\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 300,
        "wires": [
            [
                "95f7cf496a98ebfa"
            ]
        ]
    },
    {
        "id": "a4c478c62c932d4c",
        "type": "debug",
        "z": "471ac2a8a5e8653b",
        "g": "b172ae4261416e78",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 730,
        "y": 300,
        "wires": []
    },
    {
        "id": "febc1d17fe23f57e",
        "type": "mysql",
        "z": "471ac2a8a5e8653b",
        "g": "5a1fee37aaaa0e70",
        "mydb": "1654a6d7a221376c",
        "name": "",
        "x": 520,
        "y": 160,
        "wires": [
            [
                "4375a052d4bc7f87"
            ]
        ]
    },
    {
        "id": "95f7cf496a98ebfa",
        "type": "http request",
        "z": "471ac2a8a5e8653b",
        "g": "b172ae4261416e78",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "a2a345f1c4a3679a",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 550,
        "y": 300,
        "wires": [
            [
                "a4c478c62c932d4c"
            ]
        ]
    },
    {
        "id": "d26c7431209e10a7",
        "type": "comment",
        "z": "471ac2a8a5e8653b",
        "g": "827443b04cb37fc9",
        "name": "Auto Activation",
        "info": "",
        "x": 120,
        "y": 60,
        "wires": []
    },
    {
        "id": "f9586b52cca5f0f0",
        "type": "http in",
        "z": "471ac2a8a5e8653b",
        "g": "a11b1041e59fd5f1",
        "name": "",
        "url": "/rule/:ruleName",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 1440,
        "y": 100,
        "wires": [
            [
                "e40e1caab814659f"
            ]
        ]
    },
    {
        "id": "e40e1caab814659f",
        "type": "function",
        "z": "471ac2a8a5e8653b",
        "g": "a11b1041e59fd5f1",
        "name": "CreateQuery",
        "func": "// Create query\nvar ruleName = msg.req.params.ruleName;\nvar topicPattern = msg.req.body.topicPattern;\nvar payloadPattern = msg.req.body.payloadPattern;\nvar method = msg.req.body.method;\nvar webHook = msg.req.body.webHook;\n\nmsg.topic = \"INSERT INTO rulesData\" +\n            \" (ruleName, topicPAttern, payloadPattern, method, webHook)\" +\n            \" VALUES\" +\n            \" ('\" + ruleName + \"', '\" + topicPattern + \"', '\" + payloadPattern + \"', '\" + method + \"', '\" + webHook + \"');\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1650,
        "y": 100,
        "wires": [
            [
                "d6338e3b7e3eef29"
            ]
        ]
    },
    {
        "id": "d6338e3b7e3eef29",
        "type": "mysql",
        "z": "471ac2a8a5e8653b",
        "g": "a11b1041e59fd5f1",
        "mydb": "1654a6d7a221376c",
        "name": "",
        "x": 1820,
        "y": 100,
        "wires": [
            [
                "a6d7fe9d63dd96a7"
            ]
        ]
    },
    {
        "id": "a6d7fe9d63dd96a7",
        "type": "function",
        "z": "471ac2a8a5e8653b",
        "g": "a11b1041e59fd5f1",
        "name": "CreateResponse",
        "func": "// Prepare response\nif(msg.payload.affectedRows !== 0) {\n    msg.payload = {\n        \"status\": \"rule added\",\n        \"ruleName\": msg.req.params.rulename,\n        \"ruleId\": msg.payload.insertId\n    };\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2010,
        "y": 100,
        "wires": [
            [
                "ad2439c14b8bd202"
            ]
        ]
    },
    {
        "id": "ad2439c14b8bd202",
        "type": "http response",
        "z": "471ac2a8a5e8653b",
        "g": "a11b1041e59fd5f1",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 2190,
        "y": 100,
        "wires": []
    },
    {
        "id": "e31d80334afaacd7",
        "type": "http in",
        "z": "471ac2a8a5e8653b",
        "g": "2ae0cb5db9c8444c",
        "name": "",
        "url": "/rule/enable/id/:id",
        "method": "patch",
        "upload": false,
        "swaggerDoc": "",
        "x": 1450,
        "y": 240,
        "wires": [
            [
                "a66c1505f81782a9"
            ]
        ]
    },
    {
        "id": "a224124e9cd754de",
        "type": "http in",
        "z": "471ac2a8a5e8653b",
        "g": "2ae0cb5db9c8444c",
        "name": "",
        "url": "/rule/disable/id/:id",
        "method": "patch",
        "upload": false,
        "swaggerDoc": "",
        "x": 1450,
        "y": 320,
        "wires": [
            [
                "ccb1252d70b920ea"
            ]
        ]
    },
    {
        "id": "a66c1505f81782a9",
        "type": "function",
        "z": "471ac2a8a5e8653b",
        "g": "2ae0cb5db9c8444c",
        "name": "CreateQuery",
        "func": "// Create query - /rules/enable/:id\n\nmsg.action = \"enable\";\nmsg.topic = \"UPDATE rulesData\" +\n            \" SET active=1\" +\n            \" WHERE\" +\n            \" id=\" + msg.req.params.id + \";\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1670,
        "y": 240,
        "wires": [
            [
                "9873334e229c9642"
            ]
        ]
    },
    {
        "id": "ccb1252d70b920ea",
        "type": "function",
        "z": "471ac2a8a5e8653b",
        "g": "2ae0cb5db9c8444c",
        "name": "CreateQuery",
        "func": "// Create query - /rule/disable/:id\n\nmsg.action = \"disable\";\nmsg.topic = \"UPDATE rulesData\" +\n            \" SET active=0\" +\n            \" WHERE\" +\n            \" id=\" + msg.req.params.id + \";\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1670,
        "y": 320,
        "wires": [
            [
                "9873334e229c9642"
            ]
        ]
    },
    {
        "id": "9873334e229c9642",
        "type": "mysql",
        "z": "471ac2a8a5e8653b",
        "g": "2ae0cb5db9c8444c",
        "mydb": "1654a6d7a221376c",
        "name": "",
        "x": 1840,
        "y": 280,
        "wires": [
            [
                "a32a8f7480637f10"
            ]
        ]
    },
    {
        "id": "a32a8f7480637f10",
        "type": "function",
        "z": "471ac2a8a5e8653b",
        "g": "2ae0cb5db9c8444c",
        "name": "CreateResponse",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2030,
        "y": 280,
        "wires": [
            [
                "9db4188f93f88743"
            ]
        ]
    },
    {
        "id": "9db4188f93f88743",
        "type": "http response",
        "z": "471ac2a8a5e8653b",
        "g": "2ae0cb5db9c8444c",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 2210,
        "y": 280,
        "wires": []
    },
    {
        "id": "d758d718739eae98",
        "type": "http in",
        "z": "471ac2a8a5e8653b",
        "g": "47469a4b8eaa1d6e",
        "name": "",
        "url": "/rules/enable/all",
        "method": "patch",
        "upload": false,
        "swaggerDoc": "",
        "x": 1440,
        "y": 460,
        "wires": [
            [
                "a3bb54a6c0acd2bd"
            ]
        ]
    },
    {
        "id": "39fa090204e62cf5",
        "type": "http in",
        "z": "471ac2a8a5e8653b",
        "g": "47469a4b8eaa1d6e",
        "name": "",
        "url": "/rules/disable/all",
        "method": "patch",
        "upload": false,
        "swaggerDoc": "",
        "x": 1440,
        "y": 540,
        "wires": [
            [
                "0ba3c69102cd4eba"
            ]
        ]
    },
    {
        "id": "a3bb54a6c0acd2bd",
        "type": "function",
        "z": "471ac2a8a5e8653b",
        "g": "47469a4b8eaa1d6e",
        "name": "CreateQuery",
        "func": "// Create query - rules/enable/all\n\nmsg.action = \"enable all\";\nmsg.topic = \"UPDATE rulesData SET active=1;\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1650,
        "y": 460,
        "wires": [
            [
                "74e3ad1c18600c78"
            ]
        ]
    },
    {
        "id": "0ba3c69102cd4eba",
        "type": "function",
        "z": "471ac2a8a5e8653b",
        "g": "47469a4b8eaa1d6e",
        "name": "CreateQuery",
        "func": "// Create query - rules/disable/all\n\nmsg.action = \"disable all\";\nmsg.topic = \"UPDATE rulesData SET active=0;\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1650,
        "y": 540,
        "wires": [
            [
                "74e3ad1c18600c78"
            ]
        ]
    },
    {
        "id": "74e3ad1c18600c78",
        "type": "mysql",
        "z": "471ac2a8a5e8653b",
        "g": "47469a4b8eaa1d6e",
        "mydb": "1654a6d7a221376c",
        "name": "",
        "x": 1820,
        "y": 500,
        "wires": [
            [
                "2f05d2592534c922"
            ]
        ]
    },
    {
        "id": "2f05d2592534c922",
        "type": "function",
        "z": "471ac2a8a5e8653b",
        "g": "47469a4b8eaa1d6e",
        "name": "CreateResponse",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2010,
        "y": 500,
        "wires": [
            [
                "f576402fd03b60e9"
            ]
        ]
    },
    {
        "id": "f576402fd03b60e9",
        "type": "http response",
        "z": "471ac2a8a5e8653b",
        "g": "47469a4b8eaa1d6e",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 2190,
        "y": 500,
        "wires": []
    },
    {
        "id": "867e840cf38e4f21",
        "type": "comment",
        "z": "471ac2a8a5e8653b",
        "g": "a11b1041e59fd5f1",
        "name": "ReST/POST New Rule",
        "info": "",
        "x": 1440,
        "y": 60,
        "wires": []
    },
    {
        "id": "210576e9a6ad8c2f",
        "type": "comment",
        "z": "471ac2a8a5e8653b",
        "g": "2ae0cb5db9c8444c",
        "name": "ReST/PATCH Enable & Disable Rule by ID",
        "info": "",
        "x": 1500,
        "y": 200,
        "wires": []
    },
    {
        "id": "370a61d88bdfc0c7",
        "type": "comment",
        "z": "471ac2a8a5e8653b",
        "g": "47469a4b8eaa1d6e",
        "name": "ReST/PATCH Enable & Disable All Rules",
        "info": "",
        "x": 1500,
        "y": 420,
        "wires": []
    },
    {
        "id": "59914edffebb6f14",
        "type": "http in",
        "z": "471ac2a8a5e8653b",
        "g": "f2145b5e6ee8c3d0",
        "name": "",
        "url": "/error/:cid/:errormsg",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 480,
        "wires": [
            [
                "8bf7bbaee89bf1bf"
            ]
        ]
    },
    {
        "id": "66e4dfb402d103d6",
        "type": "e-mail",
        "z": "471ac2a8a5e8653b",
        "g": "0409ed639d712c6c",
        "server": "smtp.gmail.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "",
        "dname": "",
        "x": 850,
        "y": 660,
        "wires": []
    },
    {
        "id": "8ce6dd09f395eb1a",
        "type": "http response",
        "z": "471ac2a8a5e8653b",
        "g": "f2145b5e6ee8c3d0",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 710,
        "y": 520,
        "wires": []
    },
    {
        "id": "d842c07a96394264",
        "type": "function",
        "z": "471ac2a8a5e8653b",
        "g": "0409ed639d712c6c",
        "name": "CreateEmail",
        "func": "if(msg.payload[0][\"settings\"][\"email\"]) {\n    const err = decodeURIComponent(msg.req.params.errormsg);\n    msg.to = msg.payload[0][\"settings\"][\"email\"];\n    msg.topic = `[Petification] \"${err}\" Error Notice`\n    msg.payload = `Malfunction Notification\\nDevice: ${msg.payload[0][\"name\"]}\\nError Msg: ${err}`;\n    \n    node.send(msg);\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 660,
        "wires": [
            [
                "66e4dfb402d103d6"
            ]
        ]
    },
    {
        "id": "8bf7bbaee89bf1bf",
        "type": "function",
        "z": "471ac2a8a5e8653b",
        "g": "86e4d607c3185bb9",
        "name": "CreateQuery",
        "func": "msg.topic = \"SELECT userData.settings, deviceData.name\" +\n            \" FROM userData JOIN deviceData\" +\n            \" WHERE cid='\" + msg.req.params.cid + \"'\" +\n            \" AND (userData.notification)\" +\n            \" AND deviceData.status=0;\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 520,
        "wires": [
            [
                "bf4cf524805778f7"
            ]
        ]
    },
    {
        "id": "bf4cf524805778f7",
        "type": "mysql",
        "z": "471ac2a8a5e8653b",
        "g": "86e4d607c3185bb9",
        "mydb": "1654a6d7a221376c",
        "name": "",
        "x": 540,
        "y": 520,
        "wires": [
            [
                "a9338e9508446387",
                "8ce6dd09f395eb1a"
            ]
        ]
    },
    {
        "id": "a9338e9508446387",
        "type": "switch",
        "z": "471ac2a8a5e8653b",
        "g": "f2145b5e6ee8c3d0",
        "name": "QueryValidation",
        "property": "payload.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 380,
        "y": 620,
        "wires": [
            [
                "d842c07a96394264",
                "367fe98274ddc310"
            ],
            [
                "e5a56f43ee52fc15"
            ]
        ]
    },
    {
        "id": "367fe98274ddc310",
        "type": "function",
        "z": "471ac2a8a5e8653b",
        "g": "0409ed639d712c6c",
        "name": "CreateWAMSG",
        "func": "// Call webhook\nconst phonenum = msg.payload[0][\"settings\"][\"wa-phonenum\"];\nconst text = `[PETIFICATION NOTICE]\\nDEVICE: ${msg.payload[0][\"name\"]}\\nERROR: ${decodeURIComponent(msg.req.params.errormsg)}`;\nconst apikey = msg.payload[0][\"settings\"][\"wa-apikey\"];\n\nif(phonenum && apikey) {\n    msg.method = \"GET\";\n    msg.url = \"https://api.callmebot.com/whatsapp.php\" +\n            \"?phone=\" + phonenum +\n            \"&text=\" + encodeURIComponent(text) +\n            \"&apikey=\" + apikey +\n            \"&source=nodered\";\n\n    node.send(msg);\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 700,
        "wires": [
            [
                "40dba8a6c8657ada"
            ]
        ]
    },
    {
        "id": "40dba8a6c8657ada",
        "type": "http request",
        "z": "471ac2a8a5e8653b",
        "g": "0409ed639d712c6c",
        "name": "Send Whatsapp",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "a2a345f1c4a3679a",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 900,
        "y": 700,
        "wires": [
            [
                "7224aa31cde2404b"
            ]
        ]
    },
    {
        "id": "7224aa31cde2404b",
        "type": "debug",
        "z": "471ac2a8a5e8653b",
        "g": "0409ed639d712c6c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1090,
        "y": 700,
        "wires": []
    },
    {
        "id": "a628278c91f48f09",
        "type": "comment",
        "z": "471ac2a8a5e8653b",
        "g": "f2145b5e6ee8c3d0",
        "name": "Error Notify",
        "info": "",
        "x": 110,
        "y": 420,
        "wires": []
    },
    {
        "id": "e5a56f43ee52fc15",
        "type": "debug",
        "z": "471ac2a8a5e8653b",
        "g": "f2145b5e6ee8c3d0",
        "name": "Ignore Error",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "{\t    \"payload\": \"Ignore Error\"\t}",
        "targetType": "jsonata",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 780,
        "wires": []
    },
    {
        "id": "52b058fd5cb5b506",
        "type": "http in",
        "z": "471ac2a8a5e8653b",
        "g": "93563550e5e5b8d9",
        "name": "",
        "url": "/scale/:topic/:payload/:timestamp",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 190,
        "y": 920,
        "wires": [
            [
                "0627c62aedfa7aba"
            ]
        ]
    },
    {
        "id": "0627c62aedfa7aba",
        "type": "function",
        "z": "471ac2a8a5e8653b",
        "g": "dce3be978a1f0dc6",
        "name": "CreateQuery",
        "func": "// build the sql query\nmsg.topic =\n    \"SELECT (payload-\" + escape(msg.req.params.payload) + \") AS diff \" +\n    \"FROM thingsData \" +\n    \"WHERE topic='\" + escape(msg.req.params.topic) + \"' \" +\n    \"AND deleted=0 \" +\n    \"AND timestamp<>'\" + escape(msg.req.params.timestamp) + \"' \" +\n    \"ORDER BY id DESC \" +\n    \"LIMIT 1;\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 980,
        "wires": [
            [
                "734ed70c0979e82a"
            ]
        ]
    },
    {
        "id": "734ed70c0979e82a",
        "type": "mysql",
        "z": "471ac2a8a5e8653b",
        "g": "dce3be978a1f0dc6",
        "mydb": "1654a6d7a221376c",
        "name": "",
        "x": 660,
        "y": 980,
        "wires": [
            [
                "541a182f719b1b1a"
            ]
        ]
    },
    {
        "id": "ac06a2cc3f547450",
        "type": "comment",
        "z": "471ac2a8a5e8653b",
        "g": "93563550e5e5b8d9",
        "name": "StoreDecrease",
        "info": "",
        "x": 120,
        "y": 880,
        "wires": []
    },
    {
        "id": "6a9beada022e3022",
        "type": "link in",
        "z": "471ac2a8a5e8653b",
        "g": "827443b04cb37fc9",
        "name": "MQTT MSG Bus In",
        "links": [
            "7a7161d47e31ef97"
        ],
        "x": 235,
        "y": 120,
        "wires": [
            [
                "03dbfc58492a3571"
            ]
        ]
    },
    {
        "id": "aa4e5a562cf0ea1d",
        "type": "comment",
        "z": "471ac2a8a5e8653b",
        "g": "dce3be978a1f0dc6",
        "name": "DB/SELECT Differences",
        "info": "",
        "x": 520,
        "y": 940,
        "wires": []
    },
    {
        "id": "541a182f719b1b1a",
        "type": "function",
        "z": "471ac2a8a5e8653b",
        "g": "eccdd3341675c67f",
        "name": "CreateQuery",
        "func": "let diff = 0;\n\nif(msg.payload.length == 1 && msg.payload[0][\"diff\"] > 0) {\n    diff = msg.payload[0][\"diff\"];\n}\n\nmsg.topic = \"UPDATE dailyData\" +\n            \" SET total_decr = total_decr + \" + diff +\n            \" WHERE topic = '\" + msg.req.params.topic + \"'\" +\n            \" AND date = CURDATE();\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 1120,
        "wires": [
            [
                "081805a62242bda3"
            ]
        ]
    },
    {
        "id": "081805a62242bda3",
        "type": "mysql",
        "z": "471ac2a8a5e8653b",
        "g": "eccdd3341675c67f",
        "mydb": "1654a6d7a221376c",
        "name": "",
        "x": 660,
        "y": 1120,
        "wires": [
            [
                "d65bb5b65d13d763"
            ]
        ]
    },
    {
        "id": "9574a7e12874334c",
        "type": "comment",
        "z": "471ac2a8a5e8653b",
        "g": "eccdd3341675c67f",
        "name": "DB/UPDATE Daily Decrease",
        "info": "",
        "x": 540,
        "y": 1080,
        "wires": []
    },
    {
        "id": "d65bb5b65d13d763",
        "type": "switch",
        "z": "471ac2a8a5e8653b",
        "g": "2eeb2c101f1b230b",
        "name": "",
        "property": "payload.affectedRows",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 470,
        "y": 1300,
        "wires": [
            [
                "1c9409a84653f09a"
            ],
            [
                "87dbd4b1f03a57b0"
            ]
        ]
    },
    {
        "id": "1c9409a84653f09a",
        "type": "function",
        "z": "471ac2a8a5e8653b",
        "g": "2eeb2c101f1b230b",
        "name": "CreateQuery",
        "func": "msg.topic = \"INSERT INTO dailyData\" +\n            \" (topic, date, total_decr)\" +\n            \" VALUES ('\" + msg.req.params.topic + \"', CURDATE(), 0);\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 1260,
        "wires": [
            [
                "f53906daa33a245d"
            ]
        ]
    },
    {
        "id": "f53906daa33a245d",
        "type": "mysql",
        "z": "471ac2a8a5e8653b",
        "g": "2eeb2c101f1b230b",
        "mydb": "1654a6d7a221376c",
        "name": "",
        "x": 800,
        "y": 1260,
        "wires": [
            [
                "87dbd4b1f03a57b0"
            ]
        ]
    },
    {
        "id": "d00ae14703c5d95b",
        "type": "comment",
        "z": "471ac2a8a5e8653b",
        "g": "2eeb2c101f1b230b",
        "name": "DB/INSERT When Record Not Found",
        "info": "",
        "x": 570,
        "y": 1220,
        "wires": []
    },
    {
        "id": "380f591b24656790",
        "type": "comment",
        "z": "471ac2a8a5e8653b",
        "g": "827443b04cb37fc9",
        "name": "MQTT MSG Bus In",
        "info": "",
        "x": 130,
        "y": 120,
        "wires": []
    },
    {
        "id": "a65d4ec274dcc92b",
        "type": "comment",
        "z": "471ac2a8a5e8653b",
        "g": "86e4d607c3185bb9",
        "name": "DB/SELECT Device Owner",
        "info": "",
        "x": 410,
        "y": 480,
        "wires": []
    },
    {
        "id": "64c53d1b11cf7d48",
        "type": "comment",
        "z": "471ac2a8a5e8653b",
        "g": "0409ed639d712c6c",
        "name": "Notify Error",
        "info": "",
        "x": 690,
        "y": 620,
        "wires": []
    },
    {
        "id": "cc7b98ab4898a4fc",
        "type": "comment",
        "z": "471ac2a8a5e8653b",
        "g": "5a1fee37aaaa0e70",
        "name": "Rule Selection",
        "info": "",
        "x": 350,
        "y": 120,
        "wires": []
    },
    {
        "id": "a295b2a6bd4c6133",
        "type": "comment",
        "z": "471ac2a8a5e8653b",
        "g": "b172ae4261416e78",
        "name": "Send WebHook",
        "info": "",
        "x": 360,
        "y": 260,
        "wires": []
    },
    {
        "id": "87dbd4b1f03a57b0",
        "type": "http response",
        "z": "471ac2a8a5e8653b",
        "g": "2eeb2c101f1b230b",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 790,
        "y": 1320,
        "wires": []
    },
    {
        "id": "6dcf2f1e68129393",
        "type": "http in",
        "z": "1d6a28c3c2b677b5",
        "g": "dd5bd293402b6632",
        "name": "",
        "url": "/device/status/:cid/:stat",
        "method": "patch",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 140,
        "wires": [
            [
                "548e32c979c8746b"
            ]
        ]
    },
    {
        "id": "548e32c979c8746b",
        "type": "function",
        "z": "1d6a28c3c2b677b5",
        "g": "dd5bd293402b6632",
        "name": "CreateQuery",
        "func": "msg.topic = \"UPDATE deviceData\" +\n            \" SET status=\" + msg.req.params.stat +\n            \" WHERE\" +\n            \" cid='\" + msg.req.params.cid + \"';\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 140,
        "wires": [
            [
                "683726f9b811e7ba"
            ]
        ]
    },
    {
        "id": "683726f9b811e7ba",
        "type": "mysql",
        "z": "1d6a28c3c2b677b5",
        "g": "dd5bd293402b6632",
        "mydb": "1654a6d7a221376c",
        "name": "",
        "x": 580,
        "y": 140,
        "wires": [
            [
                "837aa64d37cd15ac",
                "5656d3bc8f820a96"
            ]
        ]
    },
    {
        "id": "837aa64d37cd15ac",
        "type": "http response",
        "z": "1d6a28c3c2b677b5",
        "g": "dd5bd293402b6632",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 730,
        "y": 180,
        "wires": []
    },
    {
        "id": "5656d3bc8f820a96",
        "type": "switch",
        "z": "1d6a28c3c2b677b5",
        "g": "dd5bd293402b6632",
        "name": "IsChanged",
        "property": "payload[\"changedRows\"]",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 750,
        "y": 100,
        "wires": [
            [
                "caae02f4db574a13"
            ],
            [
                "c7ef3c6652780e66"
            ]
        ]
    },
    {
        "id": "c7ef3c6652780e66",
        "type": "debug",
        "z": "1d6a28c3c2b677b5",
        "g": "dd5bd293402b6632",
        "name": "Status Changed",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "{\t    \"payload\": \"Device Status Changed\"\t}",
        "targetType": "jsonata",
        "statusVal": "",
        "statusType": "auto",
        "x": 940,
        "y": 120,
        "wires": []
    },
    {
        "id": "caae02f4db574a13",
        "type": "debug",
        "z": "1d6a28c3c2b677b5",
        "g": "dd5bd293402b6632",
        "name": "Status Not Changed",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "{\t    \"payload\": \"Status Not Changed\"\t}",
        "targetType": "jsonata",
        "statusVal": "",
        "statusType": "auto",
        "x": 960,
        "y": 80,
        "wires": []
    },
    {
        "id": "13f884a120958926",
        "type": "comment",
        "z": "1d6a28c3c2b677b5",
        "g": "dd5bd293402b6632",
        "name": "ReST/PATCH Device Status",
        "info": "",
        "x": 160,
        "y": 60,
        "wires": []
    },
    {
        "id": "343fc966dcf2740b",
        "type": "comment",
        "z": "1d6a28c3c2b677b5",
        "g": "78810c964d16f3b6",
        "name": "REST/GET UUID (Deprecated)",
        "info": "",
        "x": 1280,
        "y": 60,
        "wires": []
    },
    {
        "id": "869efd42aae3079a",
        "type": "http in",
        "z": "1d6a28c3c2b677b5",
        "g": "78810c964d16f3b6",
        "name": "",
        "url": "/uuid",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 1220,
        "y": 120,
        "wires": [
            [
                "3ce598360cdb14a1"
            ]
        ]
    },
    {
        "id": "b1a94f49e2c4f63b",
        "type": "function",
        "z": "1d6a28c3c2b677b5",
        "g": "78810c964d16f3b6",
        "name": "PrepareResponse",
        "func": "// Prepare response\nmsg.payload = {\n    uuid: msg.payload\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1590,
        "y": 120,
        "wires": [
            [
                "cf7c5fb09faeaaaa"
            ]
        ]
    },
    {
        "id": "cf7c5fb09faeaaaa",
        "type": "http response",
        "z": "1d6a28c3c2b677b5",
        "g": "78810c964d16f3b6",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1790,
        "y": 120,
        "wires": []
    },
    {
        "id": "3ce598360cdb14a1",
        "type": "uuid",
        "z": "1d6a28c3c2b677b5",
        "g": "78810c964d16f3b6",
        "uuidVersion": "v4",
        "namespaceType": "",
        "namespace": "",
        "namespaceCustom": "",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "x": 1390,
        "y": 120,
        "wires": [
            [
                "b1a94f49e2c4f63b"
            ]
        ]
    },
    {
        "id": "9007b4d286d5cc08",
        "type": "comment",
        "z": "1d6a28c3c2b677b5",
        "g": "39d56ac3bdfcb912",
        "name": "ReST/POST New Device",
        "info": "",
        "x": 150,
        "y": 280,
        "wires": []
    },
    {
        "id": "95730b6fc66fb065",
        "type": "http in",
        "z": "1d6a28c3c2b677b5",
        "g": "39d56ac3bdfcb912",
        "name": "",
        "url": "/device/:uid/:name/:type/",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 340,
        "wires": [
            [
                "59e6782306d73259"
            ]
        ]
    },
    {
        "id": "fb9f5e0234f29769",
        "type": "function",
        "z": "1d6a28c3c2b677b5",
        "g": "42080da9808971e0",
        "name": "PrepareResponse",
        "func": "// Prepare response\nmsg.payload = {\n    uuid: msg.payload\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 380,
        "wires": [
            [
                "b77a5593eddb7e33"
            ]
        ]
    },
    {
        "id": "b77a5593eddb7e33",
        "type": "http response",
        "z": "1d6a28c3c2b677b5",
        "g": "42080da9808971e0",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 790,
        "y": 380,
        "wires": []
    },
    {
        "id": "59e6782306d73259",
        "type": "uuid",
        "z": "1d6a28c3c2b677b5",
        "g": "39d56ac3bdfcb912",
        "uuidVersion": "v4",
        "namespaceType": "",
        "namespace": "",
        "namespaceCustom": "",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "x": 390,
        "y": 340,
        "wires": [
            [
                "fb9f5e0234f29769",
                "4b24a488d40bee10"
            ]
        ]
    },
    {
        "id": "7fc8e7a46b665229",
        "type": "comment",
        "z": "1d6a28c3c2b677b5",
        "g": "42080da9808971e0",
        "name": "Response Client ID (UUID)",
        "info": "",
        "x": 610,
        "y": 340,
        "wires": []
    },
    {
        "id": "4b24a488d40bee10",
        "type": "function",
        "z": "1d6a28c3c2b677b5",
        "g": "f45d589dd0982571",
        "name": "CreateQuery",
        "func": "// Create query\nconst cid = msg.payload;\nconst name = msg.req.params.name;\nconst type = msg.req.params.type;\nconst uid = msg.req.params.uid;\n\nmsg.topic = \"INSERT INTO deviceData\" +\n            \" (cid, name, type, uid)\" +\n            \" VALUES\" +\n            \" ('\" + cid + \"', '\" + name + \"', '\" + type + \"', '\" + uid + \"');\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 520,
        "wires": [
            [
                "ea30452d1007877b"
            ]
        ]
    },
    {
        "id": "ea30452d1007877b",
        "type": "mysql",
        "z": "1d6a28c3c2b677b5",
        "g": "f45d589dd0982571",
        "mydb": "1654a6d7a221376c",
        "name": "",
        "x": 740,
        "y": 520,
        "wires": [
            [
                "92f4f5ff4c1aa6ff"
            ]
        ]
    },
    {
        "id": "92f4f5ff4c1aa6ff",
        "type": "debug",
        "z": "1d6a28c3c2b677b5",
        "g": "f45d589dd0982571",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 520,
        "wires": []
    },
    {
        "id": "a3658b821c559c70",
        "type": "comment",
        "z": "1d6a28c3c2b677b5",
        "g": "f45d589dd0982571",
        "name": "DB/INSERT Device",
        "info": "",
        "x": 590,
        "y": 480,
        "wires": []
    },
    {
        "id": "d32cb6e3d0f4368b",
        "type": "comment",
        "z": "1d6a28c3c2b677b5",
        "g": "93bbf3532a16dd26",
        "name": "ReST/DELETE Device",
        "info": "",
        "x": 140,
        "y": 660,
        "wires": []
    },
    {
        "id": "e44abfc1c2e2ec0a",
        "type": "http in",
        "z": "1d6a28c3c2b677b5",
        "g": "93bbf3532a16dd26",
        "name": "",
        "url": "/device/:cid",
        "method": "delete",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 720,
        "wires": [
            [
                "e4c31b976d4277fb"
            ]
        ]
    },
    {
        "id": "e4c31b976d4277fb",
        "type": "function",
        "z": "1d6a28c3c2b677b5",
        "g": "93bbf3532a16dd26",
        "name": "CreateQuery",
        "func": "msg.topic = \"DELETE FROM deviceData\" +\n            \" WHERE cid = '\" + msg.req.params.cid + \"';\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 720,
        "wires": [
            [
                "54cb067b38be771e"
            ]
        ]
    },
    {
        "id": "54cb067b38be771e",
        "type": "mysql",
        "z": "1d6a28c3c2b677b5",
        "g": "93bbf3532a16dd26",
        "mydb": "1654a6d7a221376c",
        "name": "",
        "x": 500,
        "y": 720,
        "wires": [
            [
                "863e490f3b70d122"
            ]
        ]
    },
    {
        "id": "863e490f3b70d122",
        "type": "debug",
        "z": "1d6a28c3c2b677b5",
        "g": "93bbf3532a16dd26",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 720,
        "wires": []
    },
    {
        "id": "e4aaa6bd29ea318e",
        "type": "comment",
        "z": "de4cf0a89bfc7b01",
        "g": "707def8204711e94",
        "name": "Notification On / Off",
        "info": "",
        "x": 130,
        "y": 160,
        "wires": []
    },
    {
        "id": "496ee6e2867044a2",
        "type": "comment",
        "z": "de4cf0a89bfc7b01",
        "g": "707def8204711e94",
        "name": "Set E-Mail Address",
        "info": "",
        "x": 130,
        "y": 200,
        "wires": []
    },
    {
        "id": "4c6db570c360190d",
        "type": "comment",
        "z": "de4cf0a89bfc7b01",
        "g": "707def8204711e94",
        "name": "Set Whatsapp API-KEY & Phone Number",
        "info": "",
        "x": 200,
        "y": 240,
        "wires": []
    },
    {
        "id": "41fd5d2f442075b7",
        "type": "comment",
        "z": "de4cf0a89bfc7b01",
        "g": "707def8204711e94",
        "name": "Set Name",
        "info": "",
        "x": 100,
        "y": 120,
        "wires": []
    },
    {
        "id": "6158adba59b15584",
        "type": "comment",
        "z": "de4cf0a89bfc7b01",
        "g": "707def8204711e94",
        "name": "Show ID",
        "info": "",
        "x": 100,
        "y": 280,
        "wires": []
    },
    {
        "id": "563a4537d95742d1",
        "type": "comment",
        "z": "de4cf0a89bfc7b01",
        "g": "707def8204711e94",
        "name": "Show API Token",
        "info": "",
        "x": 120,
        "y": 320,
        "wires": []
    },
    {
        "id": "65d65853a43abedb",
        "type": "comment",
        "z": "de4cf0a89bfc7b01",
        "g": "7afd9131bb01f472",
        "name": "Show Water Remaining",
        "info": "",
        "x": 540,
        "y": 120,
        "wires": []
    },
    {
        "id": "52d707234a0ef984",
        "type": "comment",
        "z": "de4cf0a89bfc7b01",
        "g": "7afd9131bb01f472",
        "name": "Show Water Consumption",
        "info": "",
        "x": 550,
        "y": 160,
        "wires": []
    },
    {
        "id": "f855d8dc8cbdec90",
        "type": "comment",
        "z": "de4cf0a89bfc7b01",
        "g": "7afd9131bb01f472",
        "name": "Show Water Consumption (Daily)",
        "info": "",
        "x": 570,
        "y": 200,
        "wires": []
    },
    {
        "id": "7ddbb441f79cf458",
        "type": "comment",
        "z": "de4cf0a89bfc7b01",
        "g": "125992f372147313",
        "name": "Show Food Remaining (Container)",
        "info": "",
        "x": 920,
        "y": 120,
        "wires": []
    },
    {
        "id": "980db0748f8a9189",
        "type": "comment",
        "z": "de4cf0a89bfc7b01",
        "g": "125992f372147313",
        "name": "Show Food Remaining (Bowl)",
        "info": "",
        "x": 900,
        "y": 160,
        "wires": []
    },
    {
        "id": "1a92952a16c291c7",
        "type": "comment",
        "z": "de4cf0a89bfc7b01",
        "g": "125992f372147313",
        "name": "Show Food Consumption",
        "info": "",
        "x": 890,
        "y": 200,
        "wires": []
    },
    {
        "id": "13bd3501b247cb8a",
        "type": "comment",
        "z": "de4cf0a89bfc7b01",
        "g": "125992f372147313",
        "name": "Show Food Consumption (Daily)",
        "info": "",
        "x": 910,
        "y": 240,
        "wires": []
    },
    {
        "id": "f1b91460db574379",
        "type": "comment",
        "z": "de4cf0a89bfc7b01",
        "g": "125992f372147313",
        "name": "Serve Food (By Button)",
        "info": "",
        "x": 880,
        "y": 280,
        "wires": []
    },
    {
        "id": "0881e86bb8f247dc",
        "type": "comment",
        "z": "de4cf0a89bfc7b01",
        "g": "125992f372147313",
        "name": "Set Food Serve Schedule",
        "info": "",
        "x": 890,
        "y": 320,
        "wires": []
    },
    {
        "id": "7048e413a3b7452c",
        "type": "comment",
        "z": "de4cf0a89bfc7b01",
        "g": "7afd9131bb01f472",
        "name": "Show Water-Dispenser Status",
        "info": "",
        "x": 560,
        "y": 240,
        "wires": []
    },
    {
        "id": "9cda233f1f5c5cee",
        "type": "comment",
        "z": "de4cf0a89bfc7b01",
        "g": "125992f372147313",
        "name": "Show Food-Feeder Status",
        "info": "",
        "x": 890,
        "y": 360,
        "wires": []
    },
    {
        "id": "5cf26914d910f5d5",
        "type": "comment",
        "z": "de4cf0a89bfc7b01",
        "g": "707def8204711e94",
        "name": "<Settings>",
        "info": "",
        "x": 200,
        "y": 60,
        "wires": []
    },
    {
        "id": "7d979c489cd8f986",
        "type": "comment",
        "z": "de4cf0a89bfc7b01",
        "g": "7afd9131bb01f472",
        "name": "<Water-Dispenser>",
        "info": "",
        "x": 570,
        "y": 60,
        "wires": []
    },
    {
        "id": "fc6f0656d97eaf7b",
        "type": "comment",
        "z": "de4cf0a89bfc7b01",
        "g": "125992f372147313",
        "name": "<Food-Feeder>",
        "info": "",
        "x": 920,
        "y": 60,
        "wires": []
    },
    {
        "id": "3bd254d2b6aa1289",
        "type": "inject",
        "z": "cfdddf09d7102807",
        "g": "2a453a7e3ac8b7d5",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 160,
        "wires": [
            [
                "7890e0bbca4fb21c",
                "ef4312c31a094311"
            ]
        ]
    },
    {
        "id": "7890e0bbca4fb21c",
        "type": "mqtt out",
        "z": "cfdddf09d7102807",
        "g": "2a453a7e3ac8b7d5",
        "name": "",
        "topic": "timestamp",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "f2f86710f80408e7",
        "x": 350,
        "y": 120,
        "wires": []
    },
    {
        "id": "d7e12f357b37ad4a",
        "type": "comment",
        "z": "cfdddf09d7102807",
        "g": "2a453a7e3ac8b7d5",
        "name": "Publish Periodic Timestamp",
        "info": "",
        "x": 160,
        "y": 60,
        "wires": []
    },
    {
        "id": "ef4312c31a094311",
        "type": "function",
        "z": "cfdddf09d7102807",
        "g": "91c825ea46b2a62d",
        "name": "CreateQuery",
        "func": "const twoDigit = (num) => (num < 10 ? \"0\" + num : \"\" + num);\nconst dateObj = new Date(msg.payload);\nconst minute = twoDigit(dateObj.getMinutes());\nconst hour = twoDigit(dateObj.getHours());\n\nmsg.topic = \"SELECT topic, payload\" +\n            \" FROM scheduleData\" +\n            \" WHERE time = '\" + hour + \":\" + minute + \"'\" +\n            \" AND (scheduleData.activate);\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 240,
        "wires": [
            [
                "c79ce7257e70319f"
            ]
        ]
    },
    {
        "id": "c79ce7257e70319f",
        "type": "mysql",
        "z": "cfdddf09d7102807",
        "g": "91c825ea46b2a62d",
        "mydb": "1654a6d7a221376c",
        "name": "",
        "x": 540,
        "y": 240,
        "wires": [
            [
                "aebb19a76eb11b08"
            ]
        ]
    },
    {
        "id": "aebb19a76eb11b08",
        "type": "function",
        "z": "cfdddf09d7102807",
        "g": "26c6221db2264c7e",
        "name": "Publish",
        "func": "const msgObjs = msg.payload;\n\nfor(let msgObj of msgObjs) {\n    msg.topic = msgObj.topic;\n    msg.payload = msgObj.payload;\n    node.send(msg);\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 240,
        "wires": [
            [
                "929aa2379c7299fd"
            ]
        ]
    },
    {
        "id": "929aa2379c7299fd",
        "type": "mqtt out",
        "z": "cfdddf09d7102807",
        "g": "26c6221db2264c7e",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "f2f86710f80408e7",
        "x": 890,
        "y": 240,
        "wires": []
    },
    {
        "id": "03b0e0d04d47db70",
        "type": "comment",
        "z": "cfdddf09d7102807",
        "g": "91c825ea46b2a62d",
        "name": "DB/SELECT Schedule",
        "info": "",
        "x": 400,
        "y": 200,
        "wires": []
    },
    {
        "id": "4c2abee3bd26a5b8",
        "type": "comment",
        "z": "cfdddf09d7102807",
        "g": "26c6221db2264c7e",
        "name": "Publish Action",
        "info": "",
        "x": 750,
        "y": 200,
        "wires": []
    },
    {
        "id": "1439383756119db6",
        "type": "http in",
        "z": "cfdddf09d7102807",
        "name": "",
        "url": "/schedule/:time/:topic/:payload",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 190,
        "y": 440,
        "wires": [
            [
                "3af1f3c3d2212b45"
            ]
        ]
    },
    {
        "id": "61dea24261b4569d",
        "type": "http response",
        "z": "cfdddf09d7102807",
        "name": "403: Forbidden",
        "statusCode": "403",
        "headers": {},
        "x": 560,
        "y": 480,
        "wires": []
    },
    {
        "id": "37abfd26ee635870",
        "type": "function",
        "z": "cfdddf09d7102807",
        "name": "CreateQuery",
        "func": "msg.topic = \"SELECT settings\" +\n            \" FROM userData\" +\n            \" WHERE token = '\" + msg.req.userToken + \"';\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 420,
        "wires": [
            [
                "7cd01bde8cbddc0b"
            ]
        ]
    },
    {
        "id": "3af1f3c3d2212b45",
        "type": "switch",
        "z": "cfdddf09d7102807",
        "name": "CheckAuth",
        "property": "req.auth",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 450,
        "y": 440,
        "wires": [
            [
                "37abfd26ee635870",
                "180406767c3c668d"
            ],
            [
                "61dea24261b4569d"
            ]
        ]
    },
    {
        "id": "180406767c3c668d",
        "type": "http response",
        "z": "cfdddf09d7102807",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 610,
        "y": 360,
        "wires": []
    },
    {
        "id": "7cd01bde8cbddc0b",
        "type": "mysql",
        "z": "cfdddf09d7102807",
        "mydb": "1654a6d7a221376c",
        "name": "",
        "x": 820,
        "y": 420,
        "wires": [
            [
                "07cd26173b29320d"
            ]
        ]
    },
    {
        "id": "07cd26173b29320d",
        "type": "function",
        "z": "cfdddf09d7102807",
        "name": "",
        "func": "const twoDigit = (num) => (num < 10 ? \"0\" + num : \"\" + num);\n\nconst time = msg.req.params.time;\nconst timezone = msg.payload[0].settings.timezone;\nconst local = new Date(`1970-01-01T00:${time}.000${timezone}`);\nconst utc = new Date(local.toLocaleString('en-US', { timeZone: 'Universal' }));\nconst minute = twoDigit(utc.getMinutes());\nconst hour = twoDigit(utc.getHours());\nconst insertTime = `${hour}:${minute}`;\n\nconst topic = msg.req.params.topic;\nconst payload = msg.req.params.payload;\n\n//tommorow\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "4ef2f9d461607592",
        "type": "comment",
        "z": "5136785d38f71e48",
        "g": "ed8b5377f33374f1",
        "name": "REST/GET one or more records from DB",
        "info": "",
        "x": 200,
        "y": 60,
        "wires": []
    },
    {
        "id": "bf0497842136d6fe",
        "type": "http in",
        "z": "5136785d38f71e48",
        "g": "ed8b5377f33374f1",
        "name": "",
        "url": "/record/:topic",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 100,
        "wires": [
            [
                "c6e8c4cb3188a32b"
            ]
        ]
    },
    {
        "id": "a1cef4fb8a5fcb51",
        "type": "http in",
        "z": "5136785d38f71e48",
        "g": "ed8b5377f33374f1",
        "name": "",
        "url": "/records/:topic/last/:count",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 180,
        "wires": [
            [
                "c6e8c4cb3188a32b"
            ]
        ]
    },
    {
        "id": "c6e8c4cb3188a32b",
        "type": "function",
        "z": "5136785d38f71e48",
        "g": "ed8b5377f33374f1",
        "name": "CreateQuery",
        "func": "// Create query\n\n// if no authentication filter defined or available\n// set the default value as 0\nif(!msg.req.authFilter)\n    msg.req.authFilter = 1;\n\n// if required record count is not specified\n// set default to 1\nif(!msg.req.params.count) {\n    msg.req.params.count = 1;\n}\n\n// build the sql query\nmsg.topic =\n    \"SELECT id,topic,payload,timestamp \" +\n    \"FROM thingsData \" +\n    \"WHERE topic='\" + escape(msg.req.params.topic) + \"' \" +\n    \"AND deleted=0 \" +\n    \"AND (\" + msg.req.authFilter + \") \" +\n    \"ORDER BY id DESC \" +\n    \"LIMIT \" + msg.req.params.count + \";\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 140,
        "wires": [
            [
                "69fd65e799173d30"
            ]
        ]
    },
    {
        "id": "d42d5b33466f8589",
        "type": "function",
        "z": "5136785d38f71e48",
        "g": "ed8b5377f33374f1",
        "name": "CreateResponse",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 140,
        "wires": [
            [
                "b3a51c03435b44e1"
            ]
        ]
    },
    {
        "id": "b3a51c03435b44e1",
        "type": "http response",
        "z": "5136785d38f71e48",
        "g": "ed8b5377f33374f1",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 930,
        "y": 140,
        "wires": []
    },
    {
        "id": "69fd65e799173d30",
        "type": "mysql",
        "z": "5136785d38f71e48",
        "g": "ed8b5377f33374f1",
        "mydb": "1654a6d7a221376c",
        "name": "",
        "x": 580,
        "y": 140,
        "wires": [
            [
                "d42d5b33466f8589"
            ]
        ]
    },
    {
        "id": "06aa5ee664b7d487",
        "type": "http in",
        "z": "5136785d38f71e48",
        "g": "7457db638135fbdb",
        "name": "",
        "url": "/records/topic-like/:topic/payload-like/:payload/last/:count",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 270,
        "y": 320,
        "wires": [
            [
                "81050b48ca38a079"
            ]
        ]
    },
    {
        "id": "81050b48ca38a079",
        "type": "function",
        "z": "5136785d38f71e48",
        "g": "7457db638135fbdb",
        "name": "CreateSELECT",
        "func": "// Create query\n\n// if no authentication filter defined or available\n// set the default value as 0\nif(!msg.req.authFilter)\n    msg.req.authFilter = 0;\n\n// wildcard used for API query is * and this needs to be converted into SQL wildcard character %\nmsg.topic = \"SELECT id,topic,payload,timestamp\" +\n            \" FROM thingsData WHERE\" +\n            \" topic LIKE '\" + msg.req.params.topic.\n            replace(/\\*/g, \"%\") + \"'\" +\n            \" AND\" +\n            \" payload LIKE '\" + msg.req.params.payload.\n            replace(/\\*/g, \"%\") + \"'\" +\n            \" AND deleted=0\" +\n            \" AND (\" + msg.req.authFilter + \")\" +\n            \" ORDER BY ID DESC\" +\n            \" LIMIT \" + msg.req.params.count + \";\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 320,
        "wires": [
            [
                "edcb6c70dd6d14e2"
            ]
        ]
    },
    {
        "id": "70a3925943c1bb85",
        "type": "function",
        "z": "5136785d38f71e48",
        "g": "7457db638135fbdb",
        "name": "CreateResponse",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 320,
        "wires": [
            [
                "53021f46cb83d817"
            ]
        ]
    },
    {
        "id": "53021f46cb83d817",
        "type": "http response",
        "z": "5136785d38f71e48",
        "g": "7457db638135fbdb",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1170,
        "y": 320,
        "wires": []
    },
    {
        "id": "d8f75eb592a51fa4",
        "type": "comment",
        "z": "5136785d38f71e48",
        "g": "7457db638135fbdb",
        "name": "REST/GET records based on condition",
        "info": "",
        "x": 190,
        "y": 280,
        "wires": []
    },
    {
        "id": "edcb6c70dd6d14e2",
        "type": "mysql",
        "z": "5136785d38f71e48",
        "g": "7457db638135fbdb",
        "mydb": "1654a6d7a221376c",
        "name": "",
        "x": 800,
        "y": 320,
        "wires": [
            [
                "70a3925943c1bb85"
            ]
        ]
    },
    {
        "id": "9a663ef956e5fb19",
        "type": "http in",
        "z": "5136785d38f71e48",
        "g": "617bb68c7b2284cf",
        "name": "",
        "url": "/records/:topic/after/:time/last/:count",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 200,
        "y": 460,
        "wires": [
            [
                "a6b218af98a297d3"
            ]
        ]
    },
    {
        "id": "469e6ab343dfda6b",
        "type": "http in",
        "z": "5136785d38f71e48",
        "g": "617bb68c7b2284cf",
        "name": "",
        "url": "/records/:topic/before/:time/last/:count",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 210,
        "y": 520,
        "wires": [
            [
                "9090baec9ebee909"
            ]
        ]
    },
    {
        "id": "e0c5e577413cb530",
        "type": "http in",
        "z": "5136785d38f71e48",
        "g": "617bb68c7b2284cf",
        "name": "",
        "url": "/records/:topic/duration/:start/:end/last/:count",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 230,
        "y": 580,
        "wires": [
            [
                "d9d9b248f540098f"
            ]
        ]
    },
    {
        "id": "a6b218af98a297d3",
        "type": "function",
        "z": "5136785d38f71e48",
        "g": "617bb68c7b2284cf",
        "name": "CreateAFTERQuery",
        "func": "// Create 'AFTER' query\n\n// if no authentication filter defined or available\n// set the default value as 1\nif(!msg.req.authFilter)\n    msg.req.authFilter = 0;\n\n// wildcard used for API query is * and this needs to be converted into SQL wildcard character %\nmsg.topic =\n    \"SELECT id,topic,payload,timestamp\" +\n    \" FROM thingsData WHERE\" +\n    \" topic LIKE '\" + msg.req.params.topic. replace(/\\*/g, \"%\") + \"'\" +\n    \" AND\" +\n    \" timestamp >= '\" + msg.req.params.time + \"'\" + \" AND deleted=0\" +\n    \" AND (\" + msg.req.authFilter + \")\" +\n    \" ORDER BY ID DESC\" +\n    \" LIMIT \" + msg.req.params.count + \";\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 460,
        "wires": [
            [
                "29544c1af11d03dc"
            ]
        ]
    },
    {
        "id": "9090baec9ebee909",
        "type": "function",
        "z": "5136785d38f71e48",
        "g": "617bb68c7b2284cf",
        "name": "CreateBEFOREQuery",
        "func": "// Create 'BEFORE' query\n\n// if no authentication filter defined or available\n// set the default value as 1\nif(!msg.req.authFilter)\n    msg.req.authFilter = 0;\n\n// wildcard used for API query is * and this needs to be converted into SQL wildcard character %\nmsg.topic = \"SELECT id,topic,payload,timestamp\" +\n    \" FROM thingsData WHERE\" +\n    \" topic LIKE '\" + msg.req.params.topic. replace(/\\*/g, \"%\") + \"'\" +\n    \" AND\" +\n    \" timestamp <= '\" + msg.req.params.time + \"'\" + \" AND deleted=0\" +\n    \" AND (\" + msg.req.authFilter + \")\" +\n    \" ORDER BY ID DESC\" +\n    \" LIMIT \" + msg.req.params.count + \";\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 520,
        "wires": [
            [
                "29544c1af11d03dc"
            ]
        ]
    },
    {
        "id": "d9d9b248f540098f",
        "type": "function",
        "z": "5136785d38f71e48",
        "g": "617bb68c7b2284cf",
        "name": "CreateDURATIONQuery",
        "func": "// Create 'DURING' query\n\n// if no authentication filter defined or available\n// set the default value as 1\nif(!msg.req.authFilter)\n    msg.req.authFilter = 0;\n\n// wildcard used for API query is * and this needs to be converted into SQL wildcard character %\nmsg.topic =\n    \"SELECT id,topic,payload,timestamp\" +\n    \" FROM thingsData WHERE\" +\n    \" topic LIKE '\" + msg.req.params.topic.replace(/\\*/g, \"%\") + \"'\" +\n    \" AND\" +\n    \" timestamp >= '\" + msg.req.params.start + \"'\" + \" AND\" +\n    \" timestamp <='\" + msg.req.params.end + \"'\" +\n    \" AND deleted=0\" +\n    \" AND (\" + msg.req.authFilter + \")\" +\n    \" ORDER BY ID DESC\" +\n    \" LIMIT \" + msg.req.params.count + \";\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 580,
        "wires": [
            [
                "29544c1af11d03dc"
            ]
        ]
    },
    {
        "id": "7859c36ac49760a1",
        "type": "function",
        "z": "5136785d38f71e48",
        "g": "617bb68c7b2284cf",
        "name": "CreateResponse",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 520,
        "wires": [
            [
                "55491d7a1871f5b9"
            ]
        ]
    },
    {
        "id": "55491d7a1871f5b9",
        "type": "http response",
        "z": "5136785d38f71e48",
        "g": "617bb68c7b2284cf",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1190,
        "y": 520,
        "wires": []
    },
    {
        "id": "4a0c36d98b93a985",
        "type": "comment",
        "z": "5136785d38f71e48",
        "g": "617bb68c7b2284cf",
        "name": "REST/GET records based on time period",
        "info": "",
        "x": 200,
        "y": 420,
        "wires": []
    },
    {
        "id": "29544c1af11d03dc",
        "type": "mysql",
        "z": "5136785d38f71e48",
        "g": "617bb68c7b2284cf",
        "mydb": "1654a6d7a221376c",
        "name": "",
        "x": 820,
        "y": 520,
        "wires": [
            [
                "7859c36ac49760a1"
            ]
        ]
    },
    {
        "id": "6112add4d31eafc5",
        "type": "http in",
        "z": "5136785d38f71e48",
        "g": "778ff3b8764df908",
        "name": "",
        "url": "/record/:topic/id/:id",
        "method": "patch",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 720,
        "wires": [
            [
                "281376abb8f58d6c"
            ]
        ]
    },
    {
        "id": "baee9952c2ae31be",
        "type": "http in",
        "z": "5136785d38f71e48",
        "g": "778ff3b8764df908",
        "name": "",
        "url": "/records/:topic",
        "method": "patch",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 780,
        "wires": [
            [
                "4d176f4e358ad420"
            ]
        ]
    },
    {
        "id": "2337f5a514cb602a",
        "type": "http in",
        "z": "5136785d38f71e48",
        "g": "778ff3b8764df908",
        "name": "",
        "url": "/records/:topic/first/:count",
        "method": "patch",
        "upload": false,
        "swaggerDoc": "",
        "x": 180,
        "y": 840,
        "wires": [
            [
                "a4aee1972fe7f78f"
            ]
        ]
    },
    {
        "id": "fbbee3f451f3badc",
        "type": "http in",
        "z": "5136785d38f71e48",
        "g": "778ff3b8764df908",
        "name": "",
        "url": "/records/:topic/last/:count",
        "method": "patch",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 900,
        "wires": [
            [
                "7df444c1898f40eb"
            ]
        ]
    },
    {
        "id": "281376abb8f58d6c",
        "type": "function",
        "z": "5136785d38f71e48",
        "g": "778ff3b8764df908",
        "name": "CreateUPDATEQueryByID",
        "func": "// if no authentication filter defined or available\n// set the default value as 1\nif(!msg.req.authFilter)\n    msg.req.authFilter = 0;\n\nmsg.topic =\n    \"UPDATE thingsData\" + \" SET deleted=1\" +\n    \" WHERE\" +\n    \" topic='\" + msg.req.params.topic + \"'\" +\n    \" AND (\" + msg.req.authFilter + \")\" +\n    \" AND id=\" + msg.req.params.id + \";\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 720,
        "wires": [
            [
                "388d2936128df466"
            ]
        ]
    },
    {
        "id": "4d176f4e358ad420",
        "type": "function",
        "z": "5136785d38f71e48",
        "g": "778ff3b8764df908",
        "name": "CreateUPDATEQueryByTopic",
        "func": "// if no authentication filter defined or available\n// set the default value as 1\nif(!msg.req.authFilter)\n    msg.req.authFilter = 0;\n\nmsg.topic =\n    \"UPDATE thingsData\" +\n    \" SET deleted=1 \" +\n    \" WHERE\" +\n    \" topic='\" + msg.req.params.topic + \"'\" +\n    \" AND (\" + msg.req.authFilter + \");\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 780,
        "wires": [
            [
                "388d2936128df466"
            ]
        ]
    },
    {
        "id": "a4aee1972fe7f78f",
        "type": "function",
        "z": "5136785d38f71e48",
        "g": "778ff3b8764df908",
        "name": "CreateUPDATEfromFirstQuery",
        "func": "// if required record count is not specified\n// set default to 1\nif(!msg.req.params.count)\n    msg.req.params.count = 1;\n\n// if no authentication filter defined or available\n// set the default value as 1\nif(!msg.req.authFilter)\n    msg.req.authFilter = 0;\n    \nmsg.topic =\n    \"UPDATE thingsData\" +\n    \" SET deleted=1 \" +\n    \" WHERE\" +\n    \" topic='\" + msg.req.params.topic + \"'\" +\n    \" AND (\" + msg.req.authFilter + \")\" +\n    \" ORDER BY id ASC\" +\n    \" LIMIT \" + msg.req.params.count + \";\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 840,
        "wires": [
            [
                "388d2936128df466"
            ]
        ]
    },
    {
        "id": "7df444c1898f40eb",
        "type": "function",
        "z": "5136785d38f71e48",
        "g": "778ff3b8764df908",
        "name": "CreateUPDATEfromLastQuery",
        "func": "// if required record count is not specified\n// set default to 1\nif(!msg.req.params.count)\n    msg.req.params.count = 1;\n\n// if no authentication filter defined or available\n// set the default value as 1\nif(!msg.req.authFilter)\n    msg.req.authFilter = 0;\n    \nmsg.topic =\n    \"UPDATE thingsData\" +\n    \" SET deleted=1 \" +\n    \" WHERE\" +\n    \" topic='\" + msg.req.params.topic + \"'\" +\n    \" AND (\" + msg.req.authFilter + \")\" +\n    \" ORDER BY id DESC\" +\n    \" LIMIT \" + msg.req.params.count + \";\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 900,
        "wires": [
            [
                "388d2936128df466"
            ]
        ]
    },
    {
        "id": "f21752adbe6c1f1c",
        "type": "function",
        "z": "5136785d38f71e48",
        "g": "778ff3b8764df908",
        "name": "CreateResponse",
        "func": "// Prepare response\nmsg.payload = {\n    \"found\": msg.payload.affectedRows,\n    \"changed\": msg.payload.changedRows,\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 800,
        "wires": [
            [
                "29528837a21f678f"
            ]
        ]
    },
    {
        "id": "29528837a21f678f",
        "type": "http response",
        "z": "5136785d38f71e48",
        "g": "778ff3b8764df908",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1170,
        "y": 800,
        "wires": []
    },
    {
        "id": "0f4cc6ac5817a644",
        "type": "comment",
        "z": "5136785d38f71e48",
        "g": "778ff3b8764df908",
        "name": "REST/PATCH records to deleted based on condition",
        "info": "",
        "x": 230,
        "y": 680,
        "wires": []
    },
    {
        "id": "388d2936128df466",
        "type": "mysql",
        "z": "5136785d38f71e48",
        "g": "778ff3b8764df908",
        "mydb": "1654a6d7a221376c",
        "name": "",
        "x": 800,
        "y": 800,
        "wires": [
            [
                "f21752adbe6c1f1c"
            ]
        ]
    },
    {
        "id": "a9141c1706a40ab5",
        "type": "function",
        "z": "5136785d38f71e48",
        "g": "08368f4a4f432e34",
        "name": "CreateDELETEQueryByTopic",
        "func": "// if no authentication filter defined or available\n// set the default value as 1\nif(!msg.req.authFilter)\n    msg.req.authFilter = 0;\n\nmsg.topic =\n    \"DELETE FROM thingsData\" +\n    \" WHERE deleted=1\" +\n    \" AND topic='\" + msg.req.params.topic + \"'\" +\n    \" AND (\" + msg.req.authFilter + \");\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 1100,
        "wires": [
            [
                "7a1158daf4dae513"
            ]
        ]
    },
    {
        "id": "61340a460ebd6e30",
        "type": "function",
        "z": "5136785d38f71e48",
        "g": "08368f4a4f432e34",
        "name": "CreateDELETEfromFirstQuery",
        "func": "// Purge first few records\n\n// if required record count is not specified\n// set default to 1\nif(!msg.req.params.count)\n    msg.req.params.count = 1;\n\n// if no authentication filter defined or available\n// set the default value as 1\nif(!msg.req.authFilter)\n    msg.req.authFilter = 0;\n\nmsg.topic =\n    \"DELETE FROM thingsData\" +\n    \" WHERE deleted=1\" +\n    \" AND topic='\" + msg.req.params.topic + \"'\" +\n    \" AND (\" + msg.req.authFilter + \")\" +\n    \" ORDER BY id ASC\" +\n    \" LIMIT \" + msg.req.params.count + \";\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 1160,
        "wires": [
            [
                "7a1158daf4dae513"
            ]
        ]
    },
    {
        "id": "2dc06f1c3dd37890",
        "type": "function",
        "z": "5136785d38f71e48",
        "g": "08368f4a4f432e34",
        "name": "CreateDELETEfromLastQuery",
        "func": "// if required record count is not specified\n// set default to 1\nif(!msg.req.params.count)\n    msg.req.params.count = 1;\n\n// if no authentication filter defined or available\n// set the default value as 1\nif(!msg.req.authFilter)\n    msg.req.authFilter = 0;\n    \nmsg.topic =\n    \"DELETE FROM thingsData\" +\n    \" WHERE deleted=1\" +\n    \" AND topic='\" + msg.req.params.topic + \"'\" +\n    \" AND (\" + msg.req.authFilter + \")\" +\n    \" ORDER BY id DESC\" +\n    \" LIMIT \" + msg.req.params.count + \";\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 1220,
        "wires": [
            [
                "7a1158daf4dae513"
            ]
        ]
    },
    {
        "id": "85d62b126d5ac07b",
        "type": "function",
        "z": "5136785d38f71e48",
        "g": "08368f4a4f432e34",
        "name": "CreateResponse",
        "func": "// Prepare response\nmsg.payload = {\n    \"found\": msg.payload.affectedRows,\n    \"changed\": msg.payload.changedRows,\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 1120,
        "wires": [
            [
                "188ef26fe77e73f6"
            ]
        ]
    },
    {
        "id": "188ef26fe77e73f6",
        "type": "http response",
        "z": "5136785d38f71e48",
        "g": "08368f4a4f432e34",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1170,
        "y": 1120,
        "wires": []
    },
    {
        "id": "5d8ab9d77ee88813",
        "type": "function",
        "z": "5136785d38f71e48",
        "g": "08368f4a4f432e34",
        "name": "CreateDELETEQueryByID",
        "func": "// if no authentication filter defined or available\n// set the default value as 1\nif(!msg.req.authFilter)\n    msg.req.authFilter = 0;\n\nmsg.topic =\n    \"DELETE FROM thingsData\" +\n    \" WHERE deleted=1\" +\n    \" AND topic='\" + msg.req.params.topic + \"'\" +\n    \" AND (\" + msg.req.authFilter + \")\" +\n    \" AND id=\" + msg.req.params.id + \";\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 1040,
        "wires": [
            [
                "7a1158daf4dae513"
            ]
        ]
    },
    {
        "id": "0415dcf149cfef6d",
        "type": "http in",
        "z": "5136785d38f71e48",
        "g": "08368f4a4f432e34",
        "name": "",
        "url": "/record/:topic/id/:id",
        "method": "delete",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 1040,
        "wires": [
            [
                "5d8ab9d77ee88813"
            ]
        ]
    },
    {
        "id": "babe1176b387d4c1",
        "type": "http in",
        "z": "5136785d38f71e48",
        "g": "08368f4a4f432e34",
        "name": "",
        "url": "/records/:topic",
        "method": "delete",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 1100,
        "wires": [
            [
                "a9141c1706a40ab5"
            ]
        ]
    },
    {
        "id": "e1a08731fe7dc59f",
        "type": "http in",
        "z": "5136785d38f71e48",
        "g": "08368f4a4f432e34",
        "name": "",
        "url": "/records/:topic/first/:count",
        "method": "delete",
        "upload": false,
        "swaggerDoc": "",
        "x": 180,
        "y": 1160,
        "wires": [
            [
                "61340a460ebd6e30"
            ]
        ]
    },
    {
        "id": "4d46bbc216bdc43a",
        "type": "http in",
        "z": "5136785d38f71e48",
        "g": "08368f4a4f432e34",
        "name": "",
        "url": "/records/:topic/last/:count",
        "method": "delete",
        "upload": false,
        "swaggerDoc": "",
        "x": 180,
        "y": 1220,
        "wires": [
            [
                "2dc06f1c3dd37890"
            ]
        ]
    },
    {
        "id": "a7901b4b61099963",
        "type": "comment",
        "z": "5136785d38f71e48",
        "g": "08368f4a4f432e34",
        "name": "REST/DELETE records based on condition",
        "info": "",
        "x": 200,
        "y": 1000,
        "wires": []
    },
    {
        "id": "7a1158daf4dae513",
        "type": "mysql",
        "z": "5136785d38f71e48",
        "g": "08368f4a4f432e34",
        "mydb": "1654a6d7a221376c",
        "name": "",
        "x": 800,
        "y": 1120,
        "wires": [
            [
                "85d62b126d5ac07b"
            ]
        ]
    },
    {
        "id": "30c14daec4a1f749",
        "type": "comment",
        "z": "5136785d38f71e48",
        "g": "9ea8eb5fbd9fba9b",
        "name": "REST/GET Random Code",
        "info": "",
        "x": 150,
        "y": 1480,
        "wires": []
    },
    {
        "id": "77e67a3f4cfd0f70",
        "type": "http in",
        "z": "5136785d38f71e48",
        "g": "9ea8eb5fbd9fba9b",
        "name": "",
        "url": "/randomcode/:len",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 1540,
        "wires": [
            [
                "b235197fa65b1d61"
            ]
        ]
    },
    {
        "id": "b235197fa65b1d61",
        "type": "function",
        "z": "5136785d38f71e48",
        "g": "9ea8eb5fbd9fba9b",
        "name": "PrepareRandomCode",
        "func": "var randomString = function(length) {\n    var text = \"\";\n    var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n    for(var i = 0; i < length; i++) {\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n    return text;\n}\n\nmsg.payload = {\n    code: randomString(msg.req.params.len)\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 1540,
        "wires": [
            [
                "cb62d5174fdbc2dc"
            ]
        ]
    },
    {
        "id": "cb62d5174fdbc2dc",
        "type": "http response",
        "z": "5136785d38f71e48",
        "g": "9ea8eb5fbd9fba9b",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 610,
        "y": 1540,
        "wires": []
    },
    {
        "id": "f43917740733c55e",
        "type": "http in",
        "z": "5136785d38f71e48",
        "g": "a429ddf13a770b14",
        "name": "",
        "url": "/timestamp",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 1380,
        "wires": [
            [
                "e4740575f27080e7"
            ]
        ]
    },
    {
        "id": "e4740575f27080e7",
        "type": "function",
        "z": "5136785d38f71e48",
        "g": "a429ddf13a770b14",
        "name": "PrepareTimestamp",
        "func": "msg.payload = {\n    timestamp: (new Date()).getTime().toString()\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 1380,
        "wires": [
            [
                "0ed1c226b2a3efec"
            ]
        ]
    },
    {
        "id": "0ed1c226b2a3efec",
        "type": "http response",
        "z": "5136785d38f71e48",
        "g": "a429ddf13a770b14",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 550,
        "y": 1380,
        "wires": []
    },
    {
        "id": "d3c7fdd2bdc2106c",
        "type": "comment",
        "z": "5136785d38f71e48",
        "g": "a429ddf13a770b14",
        "name": "REST/GET current timestamp",
        "info": "",
        "x": 160,
        "y": 1320,
        "wires": []
    },
    {
        "id": "5e14e9da9dbc6d0a",
        "type": "inject",
        "z": "6247d9d13f3d1415",
        "g": "c5351c5c421b358c",
        "name": "TC0",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "payload"
            },
            {
                "p": "qos",
                "v": "1",
                "vt": "str"
            },
            {
                "p": "retain",
                "v": "false",
                "vt": "bool"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "users/petification/water-dispenser/error",
        "payload": "Water Empty",
        "payloadType": "str",
        "x": 130,
        "y": 100,
        "wires": [
            [
                "a8950ea79b50ebd1"
            ]
        ]
    },
    {
        "id": "a8950ea79b50ebd1",
        "type": "mqtt out",
        "z": "6247d9d13f3d1415",
        "g": "c5351c5c421b358c",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "f2f86710f80408e7",
        "x": 270,
        "y": 100,
        "wires": []
    },
    {
        "id": "247061156250feef",
        "type": "comment",
        "z": "6247d9d13f3d1415",
        "g": "c5351c5c421b358c",
        "name": "TC0: Publish Error \"Water Empty\"",
        "info": "",
        "x": 200,
        "y": 60,
        "wires": []
    },
    {
        "id": "ed6c73a2793ca5a9",
        "type": "inject",
        "z": "6247d9d13f3d1415",
        "g": "47625275f7240e2a",
        "name": "TC1",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "payload"
            },
            {
                "p": "qos",
                "v": "1",
                "vt": "str"
            },
            {
                "p": "retain",
                "v": "false",
                "vt": "bool"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "users/petification/food-feeder/error",
        "payload": "Food Container Empty",
        "payloadType": "str",
        "x": 130,
        "y": 240,
        "wires": [
            [
                "84d20db841946262"
            ]
        ]
    },
    {
        "id": "84d20db841946262",
        "type": "mqtt out",
        "z": "6247d9d13f3d1415",
        "g": "47625275f7240e2a",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "f2f86710f80408e7",
        "x": 270,
        "y": 240,
        "wires": []
    },
    {
        "id": "3ea44f65a91ee26c",
        "type": "comment",
        "z": "6247d9d13f3d1415",
        "g": "47625275f7240e2a",
        "name": "TC1: Publish Error \"Food Container Empty\"",
        "info": "",
        "x": 230,
        "y": 200,
        "wires": []
    },
    {
        "id": "d9b0e5a3250a2956",
        "type": "inject",
        "z": "6247d9d13f3d1415",
        "g": "2e8c563c95931cf4",
        "name": "TC2",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "payload"
            },
            {
                "p": "qos",
                "v": "1",
                "vt": "str"
            },
            {
                "p": "retain",
                "v": "false",
                "vt": "bool"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "users/petification/food-feeder/error",
        "payload": "Food Container Stuck",
        "payloadType": "str",
        "x": 130,
        "y": 380,
        "wires": [
            [
                "a7474bdc7022a0a6"
            ]
        ]
    },
    {
        "id": "a7474bdc7022a0a6",
        "type": "mqtt out",
        "z": "6247d9d13f3d1415",
        "g": "2e8c563c95931cf4",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "f2f86710f80408e7",
        "x": 270,
        "y": 380,
        "wires": []
    },
    {
        "id": "556876be6c6ceeff",
        "type": "comment",
        "z": "6247d9d13f3d1415",
        "g": "2e8c563c95931cf4",
        "name": "TC2: Publish Error \"Food Container Stuck\"",
        "info": "",
        "x": 220,
        "y": 340,
        "wires": []
    },
    {
        "id": "2445293428e63a7d",
        "type": "inject",
        "z": "6247d9d13f3d1415",
        "g": "e4ec5a08b48d755b",
        "name": "TC3",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "payload"
            },
            {
                "p": "qos",
                "v": "1",
                "vt": "str"
            },
            {
                "p": "retain",
                "v": "false",
                "vt": "bool"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "users/petification/water-dispenser/scale/water",
        "payload": "97",
        "payloadType": "str",
        "x": 610,
        "y": 100,
        "wires": [
            [
                "091eee3ad29c7346"
            ]
        ]
    },
    {
        "id": "091eee3ad29c7346",
        "type": "mqtt out",
        "z": "6247d9d13f3d1415",
        "g": "e4ec5a08b48d755b",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "f2f86710f80408e7",
        "x": 750,
        "y": 100,
        "wires": []
    },
    {
        "id": "0d5b1751af6329c2",
        "type": "comment",
        "z": "6247d9d13f3d1415",
        "g": "e4ec5a08b48d755b",
        "name": "TC3: Publish Data \"Water Scale\"",
        "info": "",
        "x": 670,
        "y": 60,
        "wires": []
    },
    {
        "id": "38c5aa798e539ecd",
        "type": "inject",
        "z": "6247d9d13f3d1415",
        "g": "37e07ac837df916b",
        "name": "TC4",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "payload"
            },
            {
                "p": "qos",
                "v": "1",
                "vt": "str"
            },
            {
                "p": "retain",
                "v": "false",
                "vt": "bool"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "users/petification/food-feeder/scale/container",
        "payload": "100",
        "payloadType": "str",
        "x": 610,
        "y": 240,
        "wires": [
            [
                "9eddf0e384471a2d"
            ]
        ]
    },
    {
        "id": "9eddf0e384471a2d",
        "type": "mqtt out",
        "z": "6247d9d13f3d1415",
        "g": "37e07ac837df916b",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "f2f86710f80408e7",
        "x": 750,
        "y": 240,
        "wires": []
    },
    {
        "id": "d31aab6cc8c7ec1c",
        "type": "comment",
        "z": "6247d9d13f3d1415",
        "g": "37e07ac837df916b",
        "name": "TC4: Publish Data \"Food Container Scale\"",
        "info": "",
        "x": 700,
        "y": 200,
        "wires": []
    },
    {
        "id": "d2657c82c2750414",
        "type": "inject",
        "z": "6247d9d13f3d1415",
        "g": "ac8de8dddde18929",
        "name": "TC5",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "payload"
            },
            {
                "p": "qos",
                "v": "1",
                "vt": "str"
            },
            {
                "p": "retain",
                "v": "false",
                "vt": "bool"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "users/petification/food-feeder/scale/bowl",
        "payload": "100",
        "payloadType": "str",
        "x": 610,
        "y": 380,
        "wires": [
            [
                "4769f71730b7e6f7"
            ]
        ]
    },
    {
        "id": "4769f71730b7e6f7",
        "type": "mqtt out",
        "z": "6247d9d13f3d1415",
        "g": "ac8de8dddde18929",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "f2f86710f80408e7",
        "x": 750,
        "y": 380,
        "wires": []
    },
    {
        "id": "2a4d9107a01bafb6",
        "type": "comment",
        "z": "6247d9d13f3d1415",
        "g": "ac8de8dddde18929",
        "name": "TC5: Publish Data \"Food Bowl Scale\"",
        "info": "",
        "x": 690,
        "y": 340,
        "wires": []
    },
    {
        "id": "47845954465f4599",
        "type": "trigger",
        "z": "6247d9d13f3d1415",
        "g": "2f09dd3159695cd2",
        "name": "",
        "op1": "50",
        "op2": "30",
        "op1type": "num",
        "op2type": "num",
        "duration": "2",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 280,
        "y": 520,
        "wires": [
            [
                "2ad7a4106513b10c"
            ]
        ]
    },
    {
        "id": "b0a4393da5e855b7",
        "type": "inject",
        "z": "6247d9d13f3d1415",
        "g": "2f09dd3159695cd2",
        "name": "TC6",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 520,
        "wires": [
            [
                "47845954465f4599"
            ]
        ]
    },
    {
        "id": "2a16b548da7aa63e",
        "type": "comment",
        "z": "6247d9d13f3d1415",
        "g": "2f09dd3159695cd2",
        "name": "TC6: Sequential Publication (Water)",
        "info": "",
        "x": 200,
        "y": 480,
        "wires": []
    },
    {
        "id": "2ad7a4106513b10c",
        "type": "function",
        "z": "6247d9d13f3d1415",
        "g": "2f09dd3159695cd2",
        "name": "CreateMSG",
        "func": "msg.topic = \"users/petification/water-dispenser/scale/water\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 520,
        "wires": [
            [
                "0d68f82b9254cd4a"
            ]
        ]
    },
    {
        "id": "0d68f82b9254cd4a",
        "type": "mqtt out",
        "z": "6247d9d13f3d1415",
        "g": "2f09dd3159695cd2",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "f2f86710f80408e7",
        "x": 610,
        "y": 520,
        "wires": []
    },
    {
        "id": "b1737a348329c768",
        "type": "trigger",
        "z": "6247d9d13f3d1415",
        "g": "836b236884538e1e",
        "name": "",
        "op1": "50",
        "op2": "30",
        "op1type": "num",
        "op2type": "num",
        "duration": "2",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 280,
        "y": 660,
        "wires": [
            [
                "d91e3aa3f2331d75"
            ]
        ]
    },
    {
        "id": "6b5a38a871a45254",
        "type": "inject",
        "z": "6247d9d13f3d1415",
        "g": "836b236884538e1e",
        "name": "TC6",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 660,
        "wires": [
            [
                "b1737a348329c768"
            ]
        ]
    },
    {
        "id": "38b373e128509916",
        "type": "comment",
        "z": "6247d9d13f3d1415",
        "g": "836b236884538e1e",
        "name": "TC7: Sequential Publication (Food Bowl)",
        "info": "",
        "x": 220,
        "y": 620,
        "wires": []
    },
    {
        "id": "d91e3aa3f2331d75",
        "type": "function",
        "z": "6247d9d13f3d1415",
        "g": "836b236884538e1e",
        "name": "CreateMSG",
        "func": "msg.topic = \"users/petification/food-feeder/scale/container\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 660,
        "wires": [
            [
                "075beec50ea49c1f"
            ]
        ]
    },
    {
        "id": "075beec50ea49c1f",
        "type": "mqtt out",
        "z": "6247d9d13f3d1415",
        "g": "836b236884538e1e",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "f2f86710f80408e7",
        "x": 610,
        "y": 660,
        "wires": []
    },
    {
        "id": "ae72da33cce2364f",
        "type": "trigger",
        "z": "6247d9d13f3d1415",
        "g": "dc25248d8126293c",
        "name": "",
        "op1": "50",
        "op2": "30",
        "op1type": "num",
        "op2type": "num",
        "duration": "2",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 280,
        "y": 800,
        "wires": [
            [
                "b538d59b36fc6b28"
            ]
        ]
    },
    {
        "id": "fd631fb9895f012a",
        "type": "inject",
        "z": "6247d9d13f3d1415",
        "g": "dc25248d8126293c",
        "name": "TC6",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 800,
        "wires": [
            [
                "ae72da33cce2364f"
            ]
        ]
    },
    {
        "id": "92660a09deb2b171",
        "type": "comment",
        "z": "6247d9d13f3d1415",
        "g": "dc25248d8126293c",
        "name": "TC8: Sequential Publication (Food Container)",
        "info": "",
        "x": 230,
        "y": 760,
        "wires": []
    },
    {
        "id": "b538d59b36fc6b28",
        "type": "function",
        "z": "6247d9d13f3d1415",
        "g": "dc25248d8126293c",
        "name": "CreateMSG",
        "func": "msg.topic = \"users/petification/food-feeder/scale/bowl\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 800,
        "wires": [
            [
                "35a0818c8e8895c8"
            ]
        ]
    },
    {
        "id": "35a0818c8e8895c8",
        "type": "mqtt out",
        "z": "6247d9d13f3d1415",
        "g": "dc25248d8126293c",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "f2f86710f80408e7",
        "x": 610,
        "y": 800,
        "wires": []
    }
]