[
    {
        "id": "e201e2d1a09b1eed",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "33021474e1559309",
        "type": "group",
        "z": "e201e2d1a09b1eed",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "86dc12794c7b4f01",
            "01fd6a7c72a71eb2",
            "cb6fe3d3bb753a48",
            "b4c26fa8fa10f79f"
        ],
        "x": 14,
        "y": 39,
        "w": 552,
        "h": 202
    },
    {
        "id": "ac50b82aeb5b47b4",
        "type": "group",
        "z": "e201e2d1a09b1eed",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "a7e8b3be49437ef9",
            "1a86d1fd43bfe41b",
            "4e3ac4fb41476ece",
            "e4963a3a546c7ea3",
            "96da0d4eb6e955d5",
            "f0b69ba145578723"
        ],
        "x": 594,
        "y": 39,
        "w": 832,
        "h": 142
    },
    {
        "id": "5f402c5112d69c8c",
        "type": "group",
        "z": "e201e2d1a09b1eed",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "efd3389ba939d57f",
            "bdc10140ffe8560d",
            "b6087fa03967b97d",
            "f2d1b4ad256117db",
            "4526f408031793c9",
            "fcdc26fccc7a39e2",
            "07b44ec7aa98beb6",
            "51ac77f1ebf7ae2d",
            "b81d025b4f9d9d99",
            "786b8e9e2ed4b6fb",
            "75b0e3d4e03b89ef",
            "9e114eb01fd8d6d2"
        ],
        "x": 14,
        "y": 259,
        "w": 1152,
        "h": 262
    },
    {
        "id": "1ec0358bd5b716b8",
        "type": "group",
        "z": "e201e2d1a09b1eed",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "3c204c1a847c86f3",
            "f8c2f3630add207c",
            "6a290db97485689b",
            "2a41a513faa8be60",
            "a61648f5611c8aac",
            "f34f97c2fe93999b",
            "eb7d2b0b0549af74"
        ],
        "x": 14,
        "y": 539,
        "w": 992,
        "h": 202
    },
    {
        "id": "249f39951436abc3",
        "type": "group",
        "z": "e201e2d1a09b1eed",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "e3f3439ed27cedfe",
            "dd8db97a152fa406",
            "3bd7c73e7968e3d0",
            "7a32bcd69221e0df",
            "dbcc21030ae087e7",
            "6bf685824b366e48",
            "09b03c934a4ab3c0",
            "ce8d85bdc51e87f5",
            "b6aafe9d80f5a9ba",
            "0d6911bc8a74c563",
            "72f4f13cb6f1ce1e",
            "fbe5a9792fc8e727",
            "90c2bf04ebac52af",
            "de1ba5605cb30496",
            "3b96c03dc72ceed0",
            "95dca23f54c3d7db",
            "26ab1dd3bfb5541a",
            "6136e6773ea491eb",
            "a4ef403cfe69e993",
            "7d1f9d08ac3fa7fa"
        ],
        "x": 14,
        "y": 1799,
        "w": 1192,
        "h": 462
    },
    {
        "id": "a469498692e84f80",
        "type": "group",
        "z": "e201e2d1a09b1eed",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "a83c826883847961",
            "f9e304ec2842bbc3",
            "6385bfef8ffff8af",
            "642633dd20877894",
            "4ec70007e3be566f",
            "df36b606976f16fd",
            "729784eab2482326",
            "f88a1ba7cc64d21f",
            "e5e3ed7c912c8e55",
            "6b8ea2a582608dab",
            "e4b99d993691f9ce",
            "aa11be6ab8f9e2c0"
        ],
        "x": 14,
        "y": 1479,
        "w": 1232,
        "h": 302
    },
    {
        "id": "de1964eb876ce865",
        "type": "group",
        "z": "e201e2d1a09b1eed",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "d7f6e1e80bc8097b",
            "1d1802bb96bd4201",
            "64b268990da487ee",
            "a94f17f666b5c890",
            "13d334d81b4dd461",
            "084112defca34cab",
            "f0a1b196374bcc74",
            "59cb4de1123efdc0",
            "6b74cf91f8131b65",
            "5e3e0ad7378df449",
            "7d5d24f4dbd87bf1",
            "39855734a16de5e2"
        ],
        "x": 14,
        "y": 1159,
        "w": 1232,
        "h": 302
    },
    {
        "id": "64725e7983c024e3",
        "type": "group",
        "z": "e201e2d1a09b1eed",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "bf31849111e2a50b",
            "a1a2bc7fd55158fa",
            "5d5f1f59cf946387",
            "f82e9369d1d1ee7b",
            "1ce457464e48edc9",
            "16b88589dfc23738",
            "67f2438515c6f8a1",
            "b9376b70539eb71c",
            "6cbd6f9e9912d232",
            "4f2ed712ef0bf6e2"
        ],
        "x": 14,
        "y": 899,
        "w": 1252,
        "h": 242
    },
    {
        "id": "390d699e93233c5f",
        "type": "group",
        "z": "e201e2d1a09b1eed",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "d38c3feb01d610d2",
            "9618f972cad8e616",
            "e7327554ac29495c",
            "caba589dba41f0c7",
            "c484b79b88fc37df",
            "f72c93e78b9ad4dc"
        ],
        "x": 14,
        "y": 759,
        "w": 1232,
        "h": 122
    },
    {
        "id": "9aea9324d5ac451d",
        "type": "group",
        "z": "e201e2d1a09b1eed",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "66fe01abf6fe7266",
            "9452a8a32bbc6bc3",
            "aad6ef1bb2073790",
            "e02a03ae88bd28b5",
            "5b4aa7bf2c540460",
            "dd6a4ab68140c995",
            "3c8220faa4d80124",
            "3536b83ee3937a04"
        ],
        "x": 14,
        "y": 2299,
        "w": 972,
        "h": 202
    },
    {
        "id": "ffff053900bb63ca",
        "type": "group",
        "z": "e201e2d1a09b1eed",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "9619a5cf30052fea",
            "aa6596d2526e659b",
            "3e07cc69cbb8ea96",
            "f0a2fec2ef68ac63",
            "ddfba6492c27e12b",
            "354271f841ef0663"
        ],
        "x": 14,
        "y": 2739,
        "w": 972,
        "h": 122
    },
    {
        "id": "6bc1d82a48ceadb0",
        "type": "group",
        "z": "e201e2d1a09b1eed",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "bd0a924ca05b5d11",
            "84a7c674586bc7dd",
            "bd52e6c83bc0d652",
            "9b44092adc823348",
            "effafe1b29e91ed8",
            "64ae96c2314cc417",
            "c0b2b2c48ff0c65b",
            "0d81cc62a3607b9f"
        ],
        "x": 14,
        "y": 2519,
        "w": 972,
        "h": 202
    },
    {
        "id": "f2f86710f80408e7",
        "type": "mqtt-broker",
        "name": "",
        "broker": "localhost",
        "port": "1883",
        "clientid": "node-red",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "1654a6d7a221376c",
        "type": "MySQLdatabase",
        "name": "",
        "host": "127.0.0.1",
        "port": "3306",
        "db": "tSeriesDB",
        "tz": "",
        "charset": "UTF8"
    },
    {
        "id": "a2a345f1c4a3679a",
        "type": "tls-config",
        "name": "",
        "cert": "/etc/letsencrypt/live/petificationblue.ddns.net/cert.pem",
        "key": "/etc/letsencrypt/live/petificationblue.ddns.net/privkey.pem",
        "ca": "/etc/letsencrypt/live/petificationblue.ddns.net/chain.pem",
        "certname": "",
        "keyname": "",
        "caname": "",
        "servername": "",
        "verifyservercert": false,
        "alpnprotocol": ""
    },
    {
        "id": "86dc12794c7b4f01",
        "type": "inject",
        "z": "e201e2d1a09b1eed",
        "g": "33021474e1559309",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "15",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 140,
        "wires": [
            [
                "01fd6a7c72a71eb2",
                "cb6fe3d3bb753a48"
            ]
        ]
    },
    {
        "id": "01fd6a7c72a71eb2",
        "type": "debug",
        "z": "e201e2d1a09b1eed",
        "g": "33021474e1559309",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 450,
        "y": 100,
        "wires": []
    },
    {
        "id": "cb6fe3d3bb753a48",
        "type": "mqtt out",
        "z": "e201e2d1a09b1eed",
        "g": "33021474e1559309",
        "name": "",
        "topic": "timestamp",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "f2f86710f80408e7",
        "x": 450,
        "y": 200,
        "wires": []
    },
    {
        "id": "a7e8b3be49437ef9",
        "type": "http in",
        "z": "e201e2d1a09b1eed",
        "g": "ac50b82aeb5b47b4",
        "name": "",
        "url": "/pub/:topic/:payload",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 730,
        "y": 140,
        "wires": [
            [
                "4e3ac4fb41476ece"
            ]
        ]
    },
    {
        "id": "1a86d1fd43bfe41b",
        "type": "mqtt out",
        "z": "e201e2d1a09b1eed",
        "g": "ac50b82aeb5b47b4",
        "name": "MQTT",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "f2f86710f80408e7",
        "x": 1130,
        "y": 80,
        "wires": []
    },
    {
        "id": "4e3ac4fb41476ece",
        "type": "function",
        "z": "e201e2d1a09b1eed",
        "g": "ac50b82aeb5b47b4",
        "name": "CreateMessage",
        "func": "msg.topic = msg.req.params.topic.toString();\nmsg.payload = msg.req.params.payload.toString();\nmsg.qos = 2;\nmsg.retain = false;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 140,
        "wires": [
            [
                "e4963a3a546c7ea3",
                "1a86d1fd43bfe41b"
            ]
        ]
    },
    {
        "id": "e4963a3a546c7ea3",
        "type": "function",
        "z": "e201e2d1a09b1eed",
        "g": "ac50b82aeb5b47b4",
        "name": "CreateResponse",
        "func": "msg.payload = {\n    success: true,\n    message:\"published: \" +\n            msg.req.params.topic + \n            \"/\" + \n            msg.req.params.payload\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 140,
        "wires": [
            [
                "96da0d4eb6e955d5"
            ]
        ]
    },
    {
        "id": "96da0d4eb6e955d5",
        "type": "http response",
        "z": "e201e2d1a09b1eed",
        "g": "ac50b82aeb5b47b4",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1350,
        "y": 140,
        "wires": []
    },
    {
        "id": "efd3389ba939d57f",
        "type": "mqtt in",
        "z": "e201e2d1a09b1eed",
        "g": "5f402c5112d69c8c",
        "name": "ListenEverything",
        "topic": "#",
        "qos": "2",
        "datatype": "auto",
        "broker": "f2f86710f80408e7",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 120,
        "y": 400,
        "wires": [
            [
                "b6087fa03967b97d",
                "4526f408031793c9"
            ]
        ]
    },
    {
        "id": "bdc10140ffe8560d",
        "type": "debug",
        "z": "e201e2d1a09b1eed",
        "g": "5f402c5112d69c8c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 380,
        "wires": []
    },
    {
        "id": "b6087fa03967b97d",
        "type": "function",
        "z": "e201e2d1a09b1eed",
        "g": "5f402c5112d69c8c",
        "name": "MakeSQLQuery",
        "func": "// Create query\n// get microtime\nvar timestamp = new Date().getTime()/1000;\n// pad it with trailing zeroes\ntimestamp = timestamp.toString() + \"000\";\n// trim to exact length 10 + 1 + 3\ntimestamp = timestamp.substring(0, 14);\n\nvar strQuery =  \"INSERT INTO thingsData (topic, payload, timestamp, deleted)\" +\n                \"VALUES ('\" + escape(msg.topic) + \"','\" + escape(msg.payload) + \"','\" + timestamp + \"', 0);\";\nmsg.topic = strQuery;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 380,
        "wires": [
            [
                "51ac77f1ebf7ae2d"
            ]
        ]
    },
    {
        "id": "b4c26fa8fa10f79f",
        "type": "comment",
        "z": "e201e2d1a09b1eed",
        "g": "33021474e1559309",
        "name": "Publish Periodic Timestamp",
        "info": "",
        "x": 160,
        "y": 80,
        "wires": []
    },
    {
        "id": "f0b69ba145578723",
        "type": "comment",
        "z": "e201e2d1a09b1eed",
        "g": "ac50b82aeb5b47b4",
        "name": "Publish by REST/POST",
        "info": "",
        "x": 720,
        "y": 80,
        "wires": []
    },
    {
        "id": "f2d1b4ad256117db",
        "type": "comment",
        "z": "e201e2d1a09b1eed",
        "g": "5f402c5112d69c8c",
        "name": "DB/INSERT Everything",
        "info": "",
        "x": 340,
        "y": 340,
        "wires": []
    },
    {
        "id": "3c204c1a847c86f3",
        "type": "comment",
        "z": "e201e2d1a09b1eed",
        "g": "1ec0358bd5b716b8",
        "name": "REST/GET one or more records from DB",
        "info": "",
        "x": 200,
        "y": 580,
        "wires": []
    },
    {
        "id": "f8c2f3630add207c",
        "type": "http in",
        "z": "e201e2d1a09b1eed",
        "g": "1ec0358bd5b716b8",
        "name": "",
        "url": "/record/:topic",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 620,
        "wires": [
            [
                "2a41a513faa8be60"
            ]
        ]
    },
    {
        "id": "6a290db97485689b",
        "type": "http in",
        "z": "e201e2d1a09b1eed",
        "g": "1ec0358bd5b716b8",
        "name": "",
        "url": "/records/:topic/last/:count",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 700,
        "wires": [
            [
                "2a41a513faa8be60"
            ]
        ]
    },
    {
        "id": "2a41a513faa8be60",
        "type": "function",
        "z": "e201e2d1a09b1eed",
        "g": "1ec0358bd5b716b8",
        "name": "CreateQuery",
        "func": "// Create query\n\n// if required record count is not specified\n// set default to 1\nif(!msg.req.params.count) {\n    msg.req.params.count = 1;\n}\n\n// build the sql query\nmsg.topic =\n    \"SELECT id,topic,payload,timestamp \" +\n    \"FROM thingsData \" +\n    \"WHERE topic='\" + escape(msg.req.params.topic) + \"' \" +\n    \"AND deleted=0 \" +\n    \"ORDER BY id DESC \" +\n    \"LIMIT \" + msg.req.params.count + \";\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 660,
        "wires": [
            [
                "eb7d2b0b0549af74"
            ]
        ]
    },
    {
        "id": "a61648f5611c8aac",
        "type": "function",
        "z": "e201e2d1a09b1eed",
        "g": "1ec0358bd5b716b8",
        "name": "CreateResponse",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 660,
        "wires": [
            [
                "f34f97c2fe93999b"
            ]
        ]
    },
    {
        "id": "f34f97c2fe93999b",
        "type": "http response",
        "z": "e201e2d1a09b1eed",
        "g": "1ec0358bd5b716b8",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 930,
        "y": 660,
        "wires": []
    },
    {
        "id": "d38c3feb01d610d2",
        "type": "http in",
        "z": "e201e2d1a09b1eed",
        "g": "390d699e93233c5f",
        "name": "",
        "url": "/records/topic-like/:topic/payload-like/:payload/last/:count",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 270,
        "y": 840,
        "wires": [
            [
                "9618f972cad8e616"
            ]
        ]
    },
    {
        "id": "9618f972cad8e616",
        "type": "function",
        "z": "e201e2d1a09b1eed",
        "g": "390d699e93233c5f",
        "name": "CreateSELECT",
        "func": "// Create query\n\n// if no authentication filter defined or available\n// set the default value as 1\nif(!msg.req.authFilter)\n    msg.req.authFilter = 1;\n\n// wildcard used for API query is * and this needs to be converted into SQL wildcard character %\nmsg.topic = \"SELECT id,topic,payload,timestamp\" +\n            \" FROM thingsData WHERE\" +\n            \" topic LIKE '\" + msg.req.params.topic.\n            replace(/\\*/g, \"%\") + \"'\" +\n            \" AND\" +\n            \" payload LIKE '\" + msg.req.params.payload.\n            replace(/\\*/g, \"%\") + \"'\" +\n            \" AND deleted=0\" +\n            \" AND (\" + msg.req.authFilter + \")\" +\n            \" ORDER BY ID DESC\" +\n            \" LIMIT \" + msg.req.params.count + \";\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 840,
        "wires": [
            [
                "f72c93e78b9ad4dc"
            ]
        ]
    },
    {
        "id": "e7327554ac29495c",
        "type": "function",
        "z": "e201e2d1a09b1eed",
        "g": "390d699e93233c5f",
        "name": "CreateResponse",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 840,
        "wires": [
            [
                "caba589dba41f0c7"
            ]
        ]
    },
    {
        "id": "caba589dba41f0c7",
        "type": "http response",
        "z": "e201e2d1a09b1eed",
        "g": "390d699e93233c5f",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1170,
        "y": 840,
        "wires": []
    },
    {
        "id": "c484b79b88fc37df",
        "type": "comment",
        "z": "e201e2d1a09b1eed",
        "g": "390d699e93233c5f",
        "name": "REST/GET records based on condition",
        "info": "",
        "x": 190,
        "y": 800,
        "wires": []
    },
    {
        "id": "bf31849111e2a50b",
        "type": "http in",
        "z": "e201e2d1a09b1eed",
        "g": "64725e7983c024e3",
        "name": "",
        "url": "/records/:topic/after/:time/last/:count",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 200,
        "y": 980,
        "wires": [
            [
                "f82e9369d1d1ee7b"
            ]
        ]
    },
    {
        "id": "a1a2bc7fd55158fa",
        "type": "http in",
        "z": "e201e2d1a09b1eed",
        "g": "64725e7983c024e3",
        "name": "",
        "url": "/records/:topic/before/:time/last/:count",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 210,
        "y": 1040,
        "wires": [
            [
                "1ce457464e48edc9"
            ]
        ]
    },
    {
        "id": "5d5f1f59cf946387",
        "type": "http in",
        "z": "e201e2d1a09b1eed",
        "g": "64725e7983c024e3",
        "name": "",
        "url": "/records/:topic/duration/:start/:end/last/:count",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 230,
        "y": 1100,
        "wires": [
            [
                "16b88589dfc23738"
            ]
        ]
    },
    {
        "id": "f82e9369d1d1ee7b",
        "type": "function",
        "z": "e201e2d1a09b1eed",
        "g": "64725e7983c024e3",
        "name": "CreateAFTERQuery",
        "func": "// Create 'AFTER' query\n\n// if no authentication filter defined or available\n// set the default value as 1\nif(!msg.req.authFilter)\n    msg.req.authFilter = 1;\n\n// wildcard used for API query is * and this needs to be converted into SQL wildcard character %\nmsg.topic =\n    \"SELECT id,topic,payload,timestamp\" +\n    \" FROM thingsData WHERE\" +\n    \" topic LIKE '\" + msg.req.params.topic. replace(/\\*/g, \"%\") + \"'\" +\n    \" AND\" +\n    \" timestamp >= '\" + msg.req.params.time + \"'\" + \" AND deleted=0\" +\n    \" AND (\" + msg.req.authFilter + \")\" +\n    \" ORDER BY ID DESC\" +\n    \" LIMIT \" + msg.req.params.count + \";\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 980,
        "wires": [
            [
                "4f2ed712ef0bf6e2"
            ]
        ]
    },
    {
        "id": "1ce457464e48edc9",
        "type": "function",
        "z": "e201e2d1a09b1eed",
        "g": "64725e7983c024e3",
        "name": "CreateBEFOREQuery",
        "func": "// Create 'BEFORE' query\n\n// if no authentication filter defined or available\n// set the default value as 1\nif(!msg.req.authFilter)\n    msg.req.authFilter = 1;\n\n// wildcard used for API query is * and this needs to be converted into SQL wildcard character %\nmsg.topic = \"SELECT id,topic,payload,timestamp\" +\n    \" FROM thingsData WHERE\" +\n    \" topic LIKE '\" + msg.req.params.topic. replace(/\\*/g, \"%\") + \"'\" +\n    \" AND\" +\n    \" timestamp <= '\" + msg.req.params.time + \"'\" + \" AND deleted=0\" +\n    \" AND (\" + msg.req.authFilter + \")\" +\n    \" ORDER BY ID DESC\" +\n    \" LIMIT \" + msg.req.params.count + \";\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 1040,
        "wires": [
            [
                "4f2ed712ef0bf6e2"
            ]
        ]
    },
    {
        "id": "16b88589dfc23738",
        "type": "function",
        "z": "e201e2d1a09b1eed",
        "g": "64725e7983c024e3",
        "name": "CreateDURATIONQuery",
        "func": "// Create 'DURING' query\n\n// if no authentication filter defined or available\n// set the default value as 1\nif(!msg.req.authFilter)\n    msg.req.authFilter = 1;\n\n// wildcard used for API query is * and this needs to be converted into SQL wildcard character %\nmsg.topic =\n    \"SELECT id,topic,payload,timestamp\" +\n    \" FROM thingsData WHERE\" +\n    \" topic LIKE '\" + msg.req.params.topic.replace(/\\*/g, \"%\") + \"'\" +\n    \" AND\" +\n    \" timestamp >= '\" + msg.req.params.start + \"'\" + \" AND\" +\n    \" timestamp <='\" + msg.req.params.end + \"'\" +\n    \" AND deleted=0\" +\n    \" AND (\" + msg.req.authFilter + \")\" +\n    \" ORDER BY ID DESC\" +\n    \" LIMIT \" + msg.req.params.count + \";\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 1100,
        "wires": [
            [
                "4f2ed712ef0bf6e2"
            ]
        ]
    },
    {
        "id": "67f2438515c6f8a1",
        "type": "function",
        "z": "e201e2d1a09b1eed",
        "g": "64725e7983c024e3",
        "name": "CreateResponse",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 1040,
        "wires": [
            [
                "b9376b70539eb71c"
            ]
        ]
    },
    {
        "id": "b9376b70539eb71c",
        "type": "http response",
        "z": "e201e2d1a09b1eed",
        "g": "64725e7983c024e3",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1190,
        "y": 1040,
        "wires": []
    },
    {
        "id": "6cbd6f9e9912d232",
        "type": "comment",
        "z": "e201e2d1a09b1eed",
        "g": "64725e7983c024e3",
        "name": "REST/GET records based on time period",
        "info": "",
        "x": 200,
        "y": 940,
        "wires": []
    },
    {
        "id": "d7f6e1e80bc8097b",
        "type": "http in",
        "z": "e201e2d1a09b1eed",
        "g": "de1964eb876ce865",
        "name": "",
        "url": "/record/:topic/id/:id",
        "method": "patch",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 1240,
        "wires": [
            [
                "13d334d81b4dd461"
            ]
        ]
    },
    {
        "id": "1d1802bb96bd4201",
        "type": "http in",
        "z": "e201e2d1a09b1eed",
        "g": "de1964eb876ce865",
        "name": "",
        "url": "/records/:topic",
        "method": "patch",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 1300,
        "wires": [
            [
                "084112defca34cab"
            ]
        ]
    },
    {
        "id": "64b268990da487ee",
        "type": "http in",
        "z": "e201e2d1a09b1eed",
        "g": "de1964eb876ce865",
        "name": "",
        "url": "/records/:topic/first/:count",
        "method": "patch",
        "upload": false,
        "swaggerDoc": "",
        "x": 180,
        "y": 1360,
        "wires": [
            [
                "f0a1b196374bcc74"
            ]
        ]
    },
    {
        "id": "a94f17f666b5c890",
        "type": "http in",
        "z": "e201e2d1a09b1eed",
        "g": "de1964eb876ce865",
        "name": "",
        "url": "/records/:topic/last/:count",
        "method": "patch",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 1420,
        "wires": [
            [
                "59cb4de1123efdc0"
            ]
        ]
    },
    {
        "id": "13d334d81b4dd461",
        "type": "function",
        "z": "e201e2d1a09b1eed",
        "g": "de1964eb876ce865",
        "name": "CreateUPDATEQueryByID",
        "func": "// if no authentication filter defined or available\n// set the default value as 1\nif(!msg.req.authFilter)\n    msg.req.authFilter = 1;\n\nmsg.topic =\n    \"UPDATE thingsData\" + \" SET deleted=1\" +\n    \" WHERE\" +\n    \" topic='\" + msg.req.params.topic + \"'\" +\n    \" AND (\" + msg.req.authFilter + \")\" +\n    \" AND id=\" + msg.req.params.id + \";\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 1240,
        "wires": [
            [
                "39855734a16de5e2"
            ]
        ]
    },
    {
        "id": "084112defca34cab",
        "type": "function",
        "z": "e201e2d1a09b1eed",
        "g": "de1964eb876ce865",
        "name": "CreateUPDATEQueryByTopic",
        "func": "// if no authentication filter defined or available\n// set the default value as 1\nif(!msg.req.authFilter)\n    msg.req.authFilter = 1;\n\nmsg.topic =\n    \"UPDATE thingsData\" +\n    \" SET deleted=1 \" +\n    \" WHERE\" +\n    \" topic='\" + msg.req.params.topic + \"'\" +\n    \" AND (\" + msg.req.authFilter + \");\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 1300,
        "wires": [
            [
                "39855734a16de5e2"
            ]
        ]
    },
    {
        "id": "f0a1b196374bcc74",
        "type": "function",
        "z": "e201e2d1a09b1eed",
        "g": "de1964eb876ce865",
        "name": "CreateUPDATEfromFirstQuery",
        "func": "// if required record count is not specified\n// set default to 1\nif(!msg.req.params.count)\n    msg.req.params.count = 1;\n\n// if no authentication filter defined or available\n// set the default value as 1\nif(!msg.req.authFilter)\n    msg.req.authFilter = 1;\n    \nmsg.topic =\n    \"UPDATE thingsData\" +\n    \" SET deleted=1 \" +\n    \" WHERE\" +\n    \" topic='\" + msg.req.params.topic + \"'\" +\n    \" AND (\" + msg.req.authFilter + \")\" +\n    \" ORDER BY id ASC\" +\n    \" LIMIT \" + msg.req.params.count + \";\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 1360,
        "wires": [
            [
                "39855734a16de5e2"
            ]
        ]
    },
    {
        "id": "59cb4de1123efdc0",
        "type": "function",
        "z": "e201e2d1a09b1eed",
        "g": "de1964eb876ce865",
        "name": "CreateUPDATEfromLastQuery",
        "func": "// if required record count is not specified\n// set default to 1\nif(!msg.req.params.count)\n    msg.req.params.count = 1;\n\n// if no authentication filter defined or available\n// set the default value as 1\nif(!msg.req.authFilter)\n    msg.req.authFilter = 1;\n    \nmsg.topic =\n    \"UPDATE thingsData\" +\n    \" SET deleted=1 \" +\n    \" WHERE\" +\n    \" topic='\" + msg.req.params.topic + \"'\" +\n    \" AND (\" + msg.req.authFilter + \")\" +\n    \" ORDER BY id DESC\" +\n    \" LIMIT \" + msg.req.params.count + \";\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 1420,
        "wires": [
            [
                "39855734a16de5e2"
            ]
        ]
    },
    {
        "id": "6b74cf91f8131b65",
        "type": "function",
        "z": "e201e2d1a09b1eed",
        "g": "de1964eb876ce865",
        "name": "CreateResponse",
        "func": "// Prepare response\nmsg.payload = {\n    \"found\": msg.payload.affectedRows,\n    \"changed\": msg.payload.changedRows,\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 1320,
        "wires": [
            [
                "5e3e0ad7378df449"
            ]
        ]
    },
    {
        "id": "5e3e0ad7378df449",
        "type": "http response",
        "z": "e201e2d1a09b1eed",
        "g": "de1964eb876ce865",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1170,
        "y": 1320,
        "wires": []
    },
    {
        "id": "7d5d24f4dbd87bf1",
        "type": "comment",
        "z": "e201e2d1a09b1eed",
        "g": "de1964eb876ce865",
        "name": "REST/PATCH records to deleted based on condition",
        "info": "",
        "x": 230,
        "y": 1200,
        "wires": []
    },
    {
        "id": "a83c826883847961",
        "type": "function",
        "z": "e201e2d1a09b1eed",
        "g": "a469498692e84f80",
        "name": "CreateDELETEQueryByTopic",
        "func": "// if no authentication filter defined or available\n// set the default value as 1\nif(!msg.req.authFilter)\n    msg.req.authFilter = 1;\n\nmsg.topic =\n    \"DELETE FROM thingsData\" +\n    \" WHERE deleted=1\" +\n    \" AND topic='\" + msg.req.params.topic + \"'\" +\n    \" AND (\" + msg.req.authFilter + \");\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 1620,
        "wires": [
            [
                "aa11be6ab8f9e2c0"
            ]
        ]
    },
    {
        "id": "f9e304ec2842bbc3",
        "type": "function",
        "z": "e201e2d1a09b1eed",
        "g": "a469498692e84f80",
        "name": "CreateDELETEfromFirstQuery",
        "func": "// Purge first few records\n\n// if required record count is not specified\n// set default to 1\nif(!msg.req.params.count)\n    msg.req.params.count = 1;\n\n// if no authentication filter defined or available\n// set the default value as 1\nif(!msg.req.authFilter)\n    msg.req.authFilter = 1;\n\nmsg.topic =\n    \"DELETE FROM thingsData\" +\n    \" WHERE deleted=1\" +\n    \" AND topic='\" + msg.req.params.topic + \"'\" +\n    \" AND (\" + msg.req.authFilter + \")\" +\n    \" ORDER BY id ASC\" +\n    \" LIMIT \" + msg.req.params.count + \";\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 1680,
        "wires": [
            [
                "aa11be6ab8f9e2c0"
            ]
        ]
    },
    {
        "id": "6385bfef8ffff8af",
        "type": "function",
        "z": "e201e2d1a09b1eed",
        "g": "a469498692e84f80",
        "name": "CreateDELETEfromLastQuery",
        "func": "// if required record count is not specified\n// set default to 1\nif(!msg.req.params.count)\n    msg.req.params.count = 1;\n\n// if no authentication filter defined or available\n// set the default value as 1\nif(!msg.req.authFilter)\n    msg.req.authFilter = 1;\n    \nmsg.topic =\n    \"DELETE FROM thingsData\" +\n    \" WHERE deleted=1\" +\n    \" AND topic='\" + msg.req.params.topic + \"'\" +\n    \" AND (\" + msg.req.authFilter + \")\" +\n    \" ORDER BY id DESC\" +\n    \" LIMIT \" + msg.req.params.count + \";\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 1740,
        "wires": [
            [
                "aa11be6ab8f9e2c0"
            ]
        ]
    },
    {
        "id": "642633dd20877894",
        "type": "function",
        "z": "e201e2d1a09b1eed",
        "g": "a469498692e84f80",
        "name": "CreateResponse",
        "func": "// Prepare response\nmsg.payload = {\n    \"found\": msg.payload.affectedRows,\n    \"changed\": msg.payload.changedRows,\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 1640,
        "wires": [
            [
                "4ec70007e3be566f"
            ]
        ]
    },
    {
        "id": "4ec70007e3be566f",
        "type": "http response",
        "z": "e201e2d1a09b1eed",
        "g": "a469498692e84f80",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1170,
        "y": 1640,
        "wires": []
    },
    {
        "id": "df36b606976f16fd",
        "type": "function",
        "z": "e201e2d1a09b1eed",
        "g": "a469498692e84f80",
        "name": "CreateDELETEQueryByID",
        "func": "// if no authentication filter defined or available\n// set the default value as 1\nif(!msg.req.authFilter)\n    msg.req.authFilter = 1;\n\nmsg.topic =\n    \"DELETE FROM thingsData\" +\n    \" WHERE deleted=1\" +\n    \" AND topic='\" + msg.req.params.topic + \"'\" +\n    \" AND (\" + msg.req.authFilter + \")\" +\n    \" AND id=\" + msg.req.params.id + \";\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 1560,
        "wires": [
            [
                "aa11be6ab8f9e2c0"
            ]
        ]
    },
    {
        "id": "729784eab2482326",
        "type": "http in",
        "z": "e201e2d1a09b1eed",
        "g": "a469498692e84f80",
        "name": "",
        "url": "/record/:topic/id/:id",
        "method": "delete",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 1560,
        "wires": [
            [
                "df36b606976f16fd"
            ]
        ]
    },
    {
        "id": "f88a1ba7cc64d21f",
        "type": "http in",
        "z": "e201e2d1a09b1eed",
        "g": "a469498692e84f80",
        "name": "",
        "url": "/records/:topic",
        "method": "delete",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 1620,
        "wires": [
            [
                "a83c826883847961"
            ]
        ]
    },
    {
        "id": "e5e3ed7c912c8e55",
        "type": "http in",
        "z": "e201e2d1a09b1eed",
        "g": "a469498692e84f80",
        "name": "",
        "url": "/records/:topic/first/:count",
        "method": "delete",
        "upload": false,
        "swaggerDoc": "",
        "x": 180,
        "y": 1680,
        "wires": [
            [
                "f9e304ec2842bbc3"
            ]
        ]
    },
    {
        "id": "6b8ea2a582608dab",
        "type": "http in",
        "z": "e201e2d1a09b1eed",
        "g": "a469498692e84f80",
        "name": "",
        "url": "/records/:topic/last/:count",
        "method": "delete",
        "upload": false,
        "swaggerDoc": "",
        "x": 180,
        "y": 1740,
        "wires": [
            [
                "6385bfef8ffff8af"
            ]
        ]
    },
    {
        "id": "e4b99d993691f9ce",
        "type": "comment",
        "z": "e201e2d1a09b1eed",
        "g": "a469498692e84f80",
        "name": "REST/DELETE records based on condition",
        "info": "",
        "x": 200,
        "y": 1520,
        "wires": []
    },
    {
        "id": "e3f3439ed27cedfe",
        "type": "http in",
        "z": "e201e2d1a09b1eed",
        "g": "249f39951436abc3",
        "name": "",
        "url": "/timestamp",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 420,
        "y": 1900,
        "wires": [
            [
                "dd8db97a152fa406"
            ]
        ]
    },
    {
        "id": "dd8db97a152fa406",
        "type": "function",
        "z": "e201e2d1a09b1eed",
        "g": "249f39951436abc3",
        "name": "PrepareTimestamp",
        "func": "msg.payload = {\n    timestamp: (new Date()).getTime().toString()\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 1900,
        "wires": [
            [
                "3bd7c73e7968e3d0"
            ]
        ]
    },
    {
        "id": "3bd7c73e7968e3d0",
        "type": "http response",
        "z": "e201e2d1a09b1eed",
        "g": "249f39951436abc3",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 850,
        "y": 1900,
        "wires": []
    },
    {
        "id": "7a32bcd69221e0df",
        "type": "comment",
        "z": "e201e2d1a09b1eed",
        "g": "249f39951436abc3",
        "name": "REST/GET current timestamp",
        "info": "",
        "x": 160,
        "y": 1900,
        "wires": []
    },
    {
        "id": "dbcc21030ae087e7",
        "type": "comment",
        "z": "e201e2d1a09b1eed",
        "g": "249f39951436abc3",
        "name": "Microservice Utilities",
        "info": "",
        "x": 130,
        "y": 1840,
        "wires": []
    },
    {
        "id": "6bf685824b366e48",
        "type": "comment",
        "z": "e201e2d1a09b1eed",
        "g": "249f39951436abc3",
        "name": "REST/GET Random Code",
        "info": "",
        "x": 150,
        "y": 1980,
        "wires": []
    },
    {
        "id": "09b03c934a4ab3c0",
        "type": "http in",
        "z": "e201e2d1a09b1eed",
        "g": "249f39951436abc3",
        "name": "",
        "url": "/randomcode/:len",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 420,
        "y": 1980,
        "wires": [
            [
                "ce8d85bdc51e87f5"
            ]
        ]
    },
    {
        "id": "ce8d85bdc51e87f5",
        "type": "function",
        "z": "e201e2d1a09b1eed",
        "g": "249f39951436abc3",
        "name": "PrepareRandomCode",
        "func": "var randomString = function(length) {\n    var text = \"\";\n    var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n    for(var i = 0; i < length; i++) {\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n    return text;\n}\n\nmsg.payload = {\n    code: randomString(msg.req.params.len)\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 1980,
        "wires": [
            [
                "b6aafe9d80f5a9ba"
            ]
        ]
    },
    {
        "id": "b6aafe9d80f5a9ba",
        "type": "http response",
        "z": "e201e2d1a09b1eed",
        "g": "249f39951436abc3",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 890,
        "y": 1980,
        "wires": []
    },
    {
        "id": "0d6911bc8a74c563",
        "type": "comment",
        "z": "e201e2d1a09b1eed",
        "g": "249f39951436abc3",
        "name": "REST/GET UUID",
        "info": "",
        "x": 120,
        "y": 2060,
        "wires": []
    },
    {
        "id": "72f4f13cb6f1ce1e",
        "type": "http in",
        "z": "e201e2d1a09b1eed",
        "g": "249f39951436abc3",
        "name": "",
        "url": "/uuid",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 320,
        "y": 2060,
        "wires": [
            [
                "a4ef403cfe69e993"
            ]
        ]
    },
    {
        "id": "fbe5a9792fc8e727",
        "type": "function",
        "z": "e201e2d1a09b1eed",
        "g": "249f39951436abc3",
        "name": "PrepareResponse",
        "func": "// Prepare response\nmsg.payload = {\n    uuid: msg.payload\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 2060,
        "wires": [
            [
                "90c2bf04ebac52af"
            ]
        ]
    },
    {
        "id": "90c2bf04ebac52af",
        "type": "http response",
        "z": "e201e2d1a09b1eed",
        "g": "249f39951436abc3",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 890,
        "y": 2060,
        "wires": []
    },
    {
        "id": "de1ba5605cb30496",
        "type": "http in",
        "z": "e201e2d1a09b1eed",
        "g": "249f39951436abc3",
        "name": "",
        "url": "/email/to/:to/subject/:subject/message/:message",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 440,
        "y": 2180,
        "wires": [
            [
                "3b96c03dc72ceed0"
            ]
        ]
    },
    {
        "id": "3b96c03dc72ceed0",
        "type": "function",
        "z": "e201e2d1a09b1eed",
        "g": "249f39951436abc3",
        "name": "PrepareEmail",
        "func": "// Prepare email\nmsg.from = \"<ewqdsacxz2345@gmail.com>\";\nmsg.to = msg.req.params.to;\n\n// msg.cc = \"cc_address@example.com\";\n// msg.bcc = \"bcc_address@example.com\";\n\nmsg.topic = msg.req.params.subject;\nmsg.payload = msg.req.params.message;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 2180,
        "wires": [
            [
                "95dca23f54c3d7db",
                "7d1f9d08ac3fa7fa"
            ]
        ]
    },
    {
        "id": "95dca23f54c3d7db",
        "type": "function",
        "z": "e201e2d1a09b1eed",
        "g": "249f39951436abc3",
        "name": "PrepareResponse",
        "func": "// Prepare response\nmsg.payload = {\n    \"to\": msg.to,\n    \"status\": \"email queued\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 2140,
        "wires": [
            [
                "26ab1dd3bfb5541a"
            ]
        ]
    },
    {
        "id": "26ab1dd3bfb5541a",
        "type": "http response",
        "z": "e201e2d1a09b1eed",
        "g": "249f39951436abc3",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1130,
        "y": 2140,
        "wires": []
    },
    {
        "id": "6136e6773ea491eb",
        "type": "comment",
        "z": "e201e2d1a09b1eed",
        "g": "249f39951436abc3",
        "name": "Email Service",
        "info": "",
        "x": 110,
        "y": 2180,
        "wires": []
    },
    {
        "id": "4526f408031793c9",
        "type": "function",
        "z": "e201e2d1a09b1eed",
        "g": "5f402c5112d69c8c",
        "name": "SearchRules",
        "func": "// Search rules\nmsg.topic = \"SELECT * FROM rulesData\" +\n            \" WHERE\" +\n            \" ('\" + msg.topic + \"' LIKE topicPattern)\" +\n            \" AND\" +\n            \" ('\" + msg.payload + \"' LIKE payloadPattern)\" +\n            \" AND active=1\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 480,
        "wires": [
            [
                "b81d025b4f9d9d99"
            ]
        ]
    },
    {
        "id": "fcdc26fccc7a39e2",
        "type": "function",
        "z": "e201e2d1a09b1eed",
        "g": "5f402c5112d69c8c",
        "name": "CreateRequest",
        "func": "// Call webhook\nif(msg.payload.length !== 0)\n{\n    for(var i = 0; i < msg.payload.length; i++)\n    {\n        msg.method = msg.payload[i].method;\n        msg.url = msg.payload[i].webHook;\n        node.send([msg]);\n    }\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 480,
        "wires": [
            [
                "786b8e9e2ed4b6fb"
            ]
        ]
    },
    {
        "id": "07b44ec7aa98beb6",
        "type": "debug",
        "z": "e201e2d1a09b1eed",
        "g": "5f402c5112d69c8c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1050,
        "y": 480,
        "wires": []
    },
    {
        "id": "51ac77f1ebf7ae2d",
        "type": "mysql",
        "z": "e201e2d1a09b1eed",
        "g": "5f402c5112d69c8c",
        "mydb": "1654a6d7a221376c",
        "name": "",
        "x": 500,
        "y": 380,
        "wires": [
            [
                "bdc10140ffe8560d"
            ]
        ]
    },
    {
        "id": "eb7d2b0b0549af74",
        "type": "mysql",
        "z": "e201e2d1a09b1eed",
        "g": "1ec0358bd5b716b8",
        "mydb": "1654a6d7a221376c",
        "name": "",
        "x": 580,
        "y": 660,
        "wires": [
            [
                "a61648f5611c8aac"
            ]
        ]
    },
    {
        "id": "f72c93e78b9ad4dc",
        "type": "mysql",
        "z": "e201e2d1a09b1eed",
        "g": "390d699e93233c5f",
        "mydb": "1654a6d7a221376c",
        "name": "",
        "x": 800,
        "y": 840,
        "wires": [
            [
                "e7327554ac29495c"
            ]
        ]
    },
    {
        "id": "4f2ed712ef0bf6e2",
        "type": "mysql",
        "z": "e201e2d1a09b1eed",
        "g": "64725e7983c024e3",
        "mydb": "1654a6d7a221376c",
        "name": "",
        "x": 820,
        "y": 1040,
        "wires": [
            [
                "67f2438515c6f8a1"
            ]
        ]
    },
    {
        "id": "39855734a16de5e2",
        "type": "mysql",
        "z": "e201e2d1a09b1eed",
        "g": "de1964eb876ce865",
        "mydb": "1654a6d7a221376c",
        "name": "",
        "x": 800,
        "y": 1320,
        "wires": [
            [
                "6b74cf91f8131b65"
            ]
        ]
    },
    {
        "id": "aa11be6ab8f9e2c0",
        "type": "mysql",
        "z": "e201e2d1a09b1eed",
        "g": "a469498692e84f80",
        "mydb": "1654a6d7a221376c",
        "name": "",
        "x": 800,
        "y": 1640,
        "wires": [
            [
                "642633dd20877894"
            ]
        ]
    },
    {
        "id": "b81d025b4f9d9d99",
        "type": "mysql",
        "z": "e201e2d1a09b1eed",
        "g": "5f402c5112d69c8c",
        "mydb": "1654a6d7a221376c",
        "name": "",
        "x": 500,
        "y": 480,
        "wires": [
            [
                "fcdc26fccc7a39e2"
            ]
        ]
    },
    {
        "id": "a4ef403cfe69e993",
        "type": "uuid",
        "z": "e201e2d1a09b1eed",
        "g": "249f39951436abc3",
        "uuidVersion": "v4",
        "namespaceType": "",
        "namespace": "",
        "namespaceCustom": "",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "x": 490,
        "y": 2060,
        "wires": [
            [
                "fbe5a9792fc8e727"
            ]
        ]
    },
    {
        "id": "7d1f9d08ac3fa7fa",
        "type": "sendgrid",
        "z": "e201e2d1a09b1eed",
        "g": "249f39951436abc3",
        "from": "ewqdsacxz2345@gmail.com",
        "multiple": false,
        "to": "",
        "name": "",
        "content": "text",
        "templateId": "",
        "templateData": "",
        "x": 920,
        "y": 2220,
        "wires": []
    },
    {
        "id": "786b8e9e2ed4b6fb",
        "type": "http request",
        "z": "e201e2d1a09b1eed",
        "g": "5f402c5112d69c8c",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "a2a345f1c4a3679a",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 870,
        "y": 480,
        "wires": [
            [
                "07b44ec7aa98beb6"
            ]
        ]
    },
    {
        "id": "75b0e3d4e03b89ef",
        "type": "comment",
        "z": "e201e2d1a09b1eed",
        "g": "5f402c5112d69c8c",
        "name": "ListenEverything",
        "info": "",
        "x": 120,
        "y": 300,
        "wires": []
    },
    {
        "id": "9e114eb01fd8d6d2",
        "type": "comment",
        "z": "e201e2d1a09b1eed",
        "g": "5f402c5112d69c8c",
        "name": "Rule Engine",
        "info": "",
        "x": 310,
        "y": 440,
        "wires": []
    },
    {
        "id": "66fe01abf6fe7266",
        "type": "http in",
        "z": "e201e2d1a09b1eed",
        "g": "9aea9324d5ac451d",
        "name": "",
        "url": "/rules/enable/id/:id",
        "method": "patch",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 2380,
        "wires": [
            [
                "aad6ef1bb2073790"
            ]
        ]
    },
    {
        "id": "9452a8a32bbc6bc3",
        "type": "http in",
        "z": "e201e2d1a09b1eed",
        "g": "9aea9324d5ac451d",
        "name": "",
        "url": "/rules/disable/id/:id",
        "method": "patch",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 2460,
        "wires": [
            [
                "e02a03ae88bd28b5"
            ]
        ]
    },
    {
        "id": "aad6ef1bb2073790",
        "type": "function",
        "z": "e201e2d1a09b1eed",
        "g": "9aea9324d5ac451d",
        "name": "CreateQuery",
        "func": "// Create query for enabling\n\nmsg.action = \"enable\";\n\nmsg.topic =\n    \"UPDATE rulesData\" +\n    \" SET active=1\" +\n    \" WHERE\" +\n    \" id=\" + msg.req.params.id + \";\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 2380,
        "wires": [
            [
                "5b4aa7bf2c540460"
            ]
        ]
    },
    {
        "id": "e02a03ae88bd28b5",
        "type": "function",
        "z": "e201e2d1a09b1eed",
        "g": "9aea9324d5ac451d",
        "name": "CreateQuery",
        "func": "// Create query for disabling\n\nmsg.action = \"disable\";\n\nmsg.topic =\n    \"UPDATE rulesData\" +\n    \" SET active=0\" +\n    \" WHERE\" +\n    \" id=\" + msg.req.params.id + \";\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 2460,
        "wires": [
            [
                "5b4aa7bf2c540460"
            ]
        ]
    },
    {
        "id": "5b4aa7bf2c540460",
        "type": "mysql",
        "z": "e201e2d1a09b1eed",
        "g": "9aea9324d5ac451d",
        "mydb": "1654a6d7a221376c",
        "name": "",
        "x": 540,
        "y": 2420,
        "wires": [
            [
                "dd6a4ab68140c995"
            ]
        ]
    },
    {
        "id": "dd6a4ab68140c995",
        "type": "function",
        "z": "e201e2d1a09b1eed",
        "g": "9aea9324d5ac451d",
        "name": "PrepareResponse",
        "func": "// Prepare response\n\nmsg.payload = {\n    \"status\": msg.action + \" success\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 2420,
        "wires": [
            [
                "3c8220faa4d80124"
            ]
        ]
    },
    {
        "id": "3c8220faa4d80124",
        "type": "http response",
        "z": "e201e2d1a09b1eed",
        "g": "9aea9324d5ac451d",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 910,
        "y": 2420,
        "wires": []
    },
    {
        "id": "3536b83ee3937a04",
        "type": "comment",
        "z": "e201e2d1a09b1eed",
        "g": "9aea9324d5ac451d",
        "name": "Enable/Disable Rule by ID",
        "info": "",
        "x": 150,
        "y": 2340,
        "wires": []
    },
    {
        "id": "bd0a924ca05b5d11",
        "type": "http in",
        "z": "e201e2d1a09b1eed",
        "g": "6bc1d82a48ceadb0",
        "name": "",
        "url": "/rules/enable/all",
        "method": "patch",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 2600,
        "wires": [
            [
                "bd52e6c83bc0d652"
            ]
        ]
    },
    {
        "id": "84a7c674586bc7dd",
        "type": "http in",
        "z": "e201e2d1a09b1eed",
        "g": "6bc1d82a48ceadb0",
        "name": "",
        "url": "/rules/disable/all",
        "method": "patch",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 2680,
        "wires": [
            [
                "9b44092adc823348"
            ]
        ]
    },
    {
        "id": "bd52e6c83bc0d652",
        "type": "function",
        "z": "e201e2d1a09b1eed",
        "g": "6bc1d82a48ceadb0",
        "name": "CreateQuery",
        "func": "// Create query for enabling all\n\nmsg.action = \"enable all\";\nmsg.topic = \"UPDATE rulesData SET active=1;\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 2600,
        "wires": [
            [
                "effafe1b29e91ed8"
            ]
        ]
    },
    {
        "id": "9b44092adc823348",
        "type": "function",
        "z": "e201e2d1a09b1eed",
        "g": "6bc1d82a48ceadb0",
        "name": "CreateQuery",
        "func": "// Create query for disabling all\n\nmsg.action = \"disable all\";\nmsg.topic = \"UPDATE rulesData SET active=0;\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 2680,
        "wires": [
            [
                "effafe1b29e91ed8"
            ]
        ]
    },
    {
        "id": "effafe1b29e91ed8",
        "type": "mysql",
        "z": "e201e2d1a09b1eed",
        "g": "6bc1d82a48ceadb0",
        "mydb": "1654a6d7a221376c",
        "name": "",
        "x": 540,
        "y": 2640,
        "wires": [
            [
                "64ae96c2314cc417"
            ]
        ]
    },
    {
        "id": "64ae96c2314cc417",
        "type": "function",
        "z": "e201e2d1a09b1eed",
        "g": "6bc1d82a48ceadb0",
        "name": "PrepareResponse",
        "func": "// Prepare response\n\nmsg.payload = {\n    \"status\": msg.action + \" success\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 2640,
        "wires": [
            [
                "c0b2b2c48ff0c65b"
            ]
        ]
    },
    {
        "id": "c0b2b2c48ff0c65b",
        "type": "http response",
        "z": "e201e2d1a09b1eed",
        "g": "6bc1d82a48ceadb0",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 910,
        "y": 2640,
        "wires": []
    },
    {
        "id": "9619a5cf30052fea",
        "type": "http in",
        "z": "e201e2d1a09b1eed",
        "g": "ffff053900bb63ca",
        "name": "",
        "url": "/rules/:rulename",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 2820,
        "wires": [
            [
                "aa6596d2526e659b"
            ]
        ]
    },
    {
        "id": "0d81cc62a3607b9f",
        "type": "comment",
        "z": "e201e2d1a09b1eed",
        "g": "6bc1d82a48ceadb0",
        "name": "Enable/Disable All Rules",
        "info": "",
        "x": 150,
        "y": 2560,
        "wires": []
    },
    {
        "id": "aa6596d2526e659b",
        "type": "function",
        "z": "e201e2d1a09b1eed",
        "g": "ffff053900bb63ca",
        "name": "CreateQuery",
        "func": "// Create query\nvar ruleName = msg.req.params.rulename;\nvar topicPattern = msg.req.body.topicPattern;\nvar payloadPattern = msg.req.body.payloadPattern;\nvar method = msg.req.body.method;\nvar webHook = msg.req.body.webHook;\n\nmsg.topic =\n\"INSERT INTO rulesData (ruleName, topicPAttern, payloadPattern, method, webHook)\" +\n\" VALUES ('\" + ruleName + \"', '\" + topicPattern + \"', '\" + payloadPattern + \"', '\" + method + \"', '\" + webHook + \"');\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 2820,
        "wires": [
            [
                "3e07cc69cbb8ea96"
            ]
        ]
    },
    {
        "id": "3e07cc69cbb8ea96",
        "type": "mysql",
        "z": "e201e2d1a09b1eed",
        "g": "ffff053900bb63ca",
        "mydb": "1654a6d7a221376c",
        "name": "",
        "x": 540,
        "y": 2820,
        "wires": [
            [
                "f0a2fec2ef68ac63"
            ]
        ]
    },
    {
        "id": "f0a2fec2ef68ac63",
        "type": "function",
        "z": "e201e2d1a09b1eed",
        "g": "ffff053900bb63ca",
        "name": "PrepareResponse",
        "func": "// Prepare response\n\nif(msg.payload.affectedRows !== 0) {\n    msg.payload = {\n        \"status\": \"rule added\",\n        \"ruleName\": msg.req.params.rulename,\n        \"ruleId\": msg.payload.insertId\n    };\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 2820,
        "wires": [
            [
                "ddfba6492c27e12b"
            ]
        ]
    },
    {
        "id": "ddfba6492c27e12b",
        "type": "http response",
        "z": "e201e2d1a09b1eed",
        "g": "ffff053900bb63ca",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 910,
        "y": 2820,
        "wires": []
    },
    {
        "id": "354271f841ef0663",
        "type": "comment",
        "z": "e201e2d1a09b1eed",
        "g": "ffff053900bb63ca",
        "name": "Create Rule",
        "info": "",
        "x": 110,
        "y": 2780,
        "wires": []
    }
]