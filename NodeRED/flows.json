[
    {
        "id": "e201e2d1a09b1eed",
        "type": "tab",
        "label": "MQTT Contoller",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "471ac2a8a5e8653b",
        "type": "tab",
        "label": "Rule Engine",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "644bccdac689256f",
        "type": "tab",
        "label": "Utilities",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "5136785d38f71e48",
        "type": "tab",
        "label": "DB ReST API",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "9aea9324d5ac451d",
        "type": "group",
        "z": "e201e2d1a09b1eed",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "66fe01abf6fe7266",
            "9452a8a32bbc6bc3",
            "aad6ef1bb2073790",
            "e02a03ae88bd28b5",
            "5b4aa7bf2c540460",
            "dd6a4ab68140c995",
            "3c8220faa4d80124",
            "3536b83ee3937a04"
        ],
        "x": 14,
        "y": 2299,
        "w": 972,
        "h": 202
    },
    {
        "id": "ffff053900bb63ca",
        "type": "group",
        "z": "e201e2d1a09b1eed",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "9619a5cf30052fea",
            "aa6596d2526e659b",
            "3e07cc69cbb8ea96",
            "f0a2fec2ef68ac63",
            "ddfba6492c27e12b",
            "354271f841ef0663"
        ],
        "x": 14,
        "y": 2739,
        "w": 972,
        "h": 122
    },
    {
        "id": "6bc1d82a48ceadb0",
        "type": "group",
        "z": "e201e2d1a09b1eed",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "bd0a924ca05b5d11",
            "84a7c674586bc7dd",
            "bd52e6c83bc0d652",
            "9b44092adc823348",
            "effafe1b29e91ed8",
            "64ae96c2314cc417",
            "c0b2b2c48ff0c65b",
            "0d81cc62a3607b9f"
        ],
        "x": 14,
        "y": 2519,
        "w": 972,
        "h": 202
    },
    {
        "id": "0f69789493f7eb67",
        "type": "group",
        "z": "471ac2a8a5e8653b",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "290d3110c921f009",
            "03dbfc58492a3571",
            "4375a052d4bc7f87",
            "a4c478c62c932d4c",
            "febc1d17fe23f57e",
            "95f7cf496a98ebfa",
            "d26c7431209e10a7",
            "3f18dad00a439691",
            "53bf42fd1785ad3f"
        ],
        "x": 14,
        "y": 19,
        "w": 672,
        "h": 442
    },
    {
        "id": "152a7e1856d083de",
        "type": "group",
        "z": "644bccdac689256f",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "9ea877d17bab30c6",
            "3f78cde70e9df008",
            "97f1ed6c67d27e46",
            "b64324774c34298f",
            "786d6160802049b7"
        ],
        "x": 14,
        "y": 559,
        "w": 732,
        "h": 142
    },
    {
        "id": "10568c80269dcce8",
        "type": "group",
        "z": "644bccdac689256f",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "f744725d58d96e39",
            "61fb47c190aa6997",
            "cec6558885044a83",
            "d10ffc5018975a2c"
        ],
        "x": 14,
        "y": 399,
        "w": 672,
        "h": 142
    },
    {
        "id": "6704523d31813e77",
        "type": "group",
        "z": "644bccdac689256f",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "68a3f370ae0caa1f",
            "73b52990811fc633",
            "4c8456156ed0d48d",
            "6a0e034d071e10bb"
        ],
        "x": 14,
        "y": 239,
        "w": 612,
        "h": 142
    },
    {
        "id": "73af34b2e9f445fa",
        "type": "group",
        "z": "644bccdac689256f",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "38949a4110fb0a92",
            "6b04066642578638",
            "5dc469d862c3aa6c",
            "1cd3c91e65ec2636"
        ],
        "x": 14,
        "y": 19,
        "w": 552,
        "h": 202
    },
    {
        "id": "ed8b5377f33374f1",
        "type": "group",
        "z": "5136785d38f71e48",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "4ef2f9d461607592",
            "bf0497842136d6fe",
            "a1cef4fb8a5fcb51",
            "c6e8c4cb3188a32b",
            "d42d5b33466f8589",
            "b3a51c03435b44e1",
            "69fd65e799173d30"
        ],
        "x": 14,
        "y": 19,
        "w": 992,
        "h": 202
    },
    {
        "id": "7457db638135fbdb",
        "type": "group",
        "z": "5136785d38f71e48",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "06aa5ee664b7d487",
            "81050b48ca38a079",
            "70a3925943c1bb85",
            "53021f46cb83d817",
            "d8f75eb592a51fa4",
            "edcb6c70dd6d14e2"
        ],
        "x": 14,
        "y": 239,
        "w": 1232,
        "h": 122
    },
    {
        "id": "617bb68c7b2284cf",
        "type": "group",
        "z": "5136785d38f71e48",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "9a663ef956e5fb19",
            "469e6ab343dfda6b",
            "e0c5e577413cb530",
            "a6b218af98a297d3",
            "9090baec9ebee909",
            "d9d9b248f540098f",
            "7859c36ac49760a1",
            "55491d7a1871f5b9",
            "4a0c36d98b93a985",
            "29544c1af11d03dc"
        ],
        "x": 14,
        "y": 379,
        "w": 1252,
        "h": 242
    },
    {
        "id": "778ff3b8764df908",
        "type": "group",
        "z": "5136785d38f71e48",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "6112add4d31eafc5",
            "baee9952c2ae31be",
            "2337f5a514cb602a",
            "fbbee3f451f3badc",
            "281376abb8f58d6c",
            "4d176f4e358ad420",
            "a4aee1972fe7f78f",
            "7df444c1898f40eb",
            "f21752adbe6c1f1c",
            "29528837a21f678f",
            "0f4cc6ac5817a644",
            "388d2936128df466"
        ],
        "x": 14,
        "y": 639,
        "w": 1232,
        "h": 302
    },
    {
        "id": "08368f4a4f432e34",
        "type": "group",
        "z": "5136785d38f71e48",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "a9141c1706a40ab5",
            "61340a460ebd6e30",
            "2dc06f1c3dd37890",
            "85d62b126d5ac07b",
            "188ef26fe77e73f6",
            "5d8ab9d77ee88813",
            "0415dcf149cfef6d",
            "babe1176b387d4c1",
            "e1a08731fe7dc59f",
            "4d46bbc216bdc43a",
            "a7901b4b61099963",
            "7a1158daf4dae513"
        ],
        "x": 14,
        "y": 959,
        "w": 1232,
        "h": 302
    },
    {
        "id": "6b8ed2b5cf9e174b",
        "type": "group",
        "z": "e201e2d1a09b1eed",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "efd3389ba939d57f",
            "bdc10140ffe8560d",
            "b6087fa03967b97d",
            "f2d1b4ad256117db",
            "51ac77f1ebf7ae2d",
            "0fd8624766b2dc3b",
            "8753cc2ef930903b"
        ],
        "x": 14,
        "y": 19,
        "w": 832,
        "h": 242
    },
    {
        "id": "2dac822f9fa8fa31",
        "type": "group",
        "z": "e201e2d1a09b1eed",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "684980074095d89a",
            "07f68243e1d1abb9",
            "8d82db435247b0de",
            "bbf8fda66520b4fb",
            "3bfda25f5858bb7c",
            "c58f1a558f26bfe6"
        ],
        "x": 14,
        "y": 279,
        "w": 832,
        "h": 142
    },
    {
        "id": "f92513d76378bf3c",
        "type": "group",
        "z": "e201e2d1a09b1eed",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "20f4f41054ab6fbb",
            "4b225b27884db1e4",
            "7ce853131aab1b80"
        ],
        "x": 24,
        "y": 439,
        "w": 412,
        "h": 122
    },
    {
        "id": "e9106a6dd33d76ad",
        "type": "group",
        "z": "471ac2a8a5e8653b",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "b3bab409f6dd92ed",
            "ee43c92062b30b51",
            "2c3ac744afb64db9"
        ],
        "x": 14,
        "y": 479,
        "w": 432,
        "h": 122
    },
    {
        "id": "51c42e34ce7286d6",
        "type": "group",
        "z": "471ac2a8a5e8653b",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "9b666f3e.797cb",
            "e68896f392d7777b",
            "2d744cd47dc1a51b",
            "079e7b149184c275",
            "5c5428893a551428"
        ],
        "x": 14,
        "y": 619,
        "w": 772,
        "h": 122
    },
    {
        "id": "f2f86710f80408e7",
        "type": "mqtt-broker",
        "name": "",
        "broker": "localhost",
        "port": "1883",
        "clientid": "node-red",
        "autoConnect": false,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "1654a6d7a221376c",
        "type": "MySQLdatabase",
        "name": "",
        "host": "127.0.0.1",
        "port": "3306",
        "db": "tSeriesDB",
        "tz": "",
        "charset": "UTF8"
    },
    {
        "id": "a2a345f1c4a3679a",
        "type": "tls-config",
        "name": "",
        "cert": "/etc/letsencrypt/live/petificationblue.ddns.net/cert.pem",
        "key": "/etc/letsencrypt/live/petificationblue.ddns.net/privkey.pem",
        "ca": "/etc/letsencrypt/live/petificationblue.ddns.net/chain.pem",
        "certname": "",
        "keyname": "",
        "caname": "",
        "servername": "",
        "verifyservercert": false,
        "alpnprotocol": ""
    },
    {
        "id": "6a166e4c79a4bcbb",
        "type": "node-red-contrib-whatsapp-cmb-account",
        "name": ""
    },
    {
        "id": "efd3389ba939d57f",
        "type": "mqtt in",
        "z": "e201e2d1a09b1eed",
        "g": "6b8ed2b5cf9e174b",
        "name": "ListenEverything (QoS 0)",
        "topic": "#",
        "qos": "0",
        "datatype": "auto",
        "broker": "f2f86710f80408e7",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 150,
        "y": 100,
        "wires": [
            [
                "b6087fa03967b97d"
            ]
        ]
    },
    {
        "id": "bdc10140ffe8560d",
        "type": "debug",
        "z": "e201e2d1a09b1eed",
        "g": "6b8ed2b5cf9e174b",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 730,
        "y": 160,
        "wires": []
    },
    {
        "id": "b6087fa03967b97d",
        "type": "function",
        "z": "e201e2d1a09b1eed",
        "g": "6b8ed2b5cf9e174b",
        "name": "MakeSQLQuery",
        "func": "// Create query\n// get microtime\nvar timestamp = new Date().getTime()/1000;\n// pad it with trailing zeroes\ntimestamp = timestamp.toString() + \"000\";\n// trim to exact length 10 + 1 + 3\ntimestamp = timestamp.substring(0, 14);\n\nvar strQuery =  \"INSERT INTO thingsData (topic, payload, timestamp, deleted)\" +\n                \"VALUES ('\" + escape(msg.topic) + \"','\" + escape(msg.payload) + \"','\" + timestamp + \"', 0);\";\nmsg.topic = strQuery;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 160,
        "wires": [
            [
                "51ac77f1ebf7ae2d"
            ]
        ]
    },
    {
        "id": "f2d1b4ad256117db",
        "type": "comment",
        "z": "e201e2d1a09b1eed",
        "g": "6b8ed2b5cf9e174b",
        "name": "DB/INSERT Published MSG",
        "info": "",
        "x": 160,
        "y": 60,
        "wires": []
    },
    {
        "id": "51ac77f1ebf7ae2d",
        "type": "mysql",
        "z": "e201e2d1a09b1eed",
        "g": "6b8ed2b5cf9e174b",
        "mydb": "1654a6d7a221376c",
        "name": "",
        "x": 560,
        "y": 160,
        "wires": [
            [
                "bdc10140ffe8560d"
            ]
        ]
    },
    {
        "id": "66fe01abf6fe7266",
        "type": "http in",
        "z": "e201e2d1a09b1eed",
        "g": "9aea9324d5ac451d",
        "name": "",
        "url": "/rules/enable/id/:id",
        "method": "patch",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 2380,
        "wires": [
            [
                "aad6ef1bb2073790"
            ]
        ]
    },
    {
        "id": "9452a8a32bbc6bc3",
        "type": "http in",
        "z": "e201e2d1a09b1eed",
        "g": "9aea9324d5ac451d",
        "name": "",
        "url": "/rules/disable/id/:id",
        "method": "patch",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 2460,
        "wires": [
            [
                "e02a03ae88bd28b5"
            ]
        ]
    },
    {
        "id": "aad6ef1bb2073790",
        "type": "function",
        "z": "e201e2d1a09b1eed",
        "g": "9aea9324d5ac451d",
        "name": "CreateQuery",
        "func": "// Create query for enabling\n\nmsg.action = \"enable\";\n\nmsg.topic =\n    \"UPDATE rulesData\" +\n    \" SET active=1\" +\n    \" WHERE\" +\n    \" id=\" + msg.req.params.id + \";\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 2380,
        "wires": [
            [
                "5b4aa7bf2c540460"
            ]
        ]
    },
    {
        "id": "e02a03ae88bd28b5",
        "type": "function",
        "z": "e201e2d1a09b1eed",
        "g": "9aea9324d5ac451d",
        "name": "CreateQuery",
        "func": "// Create query for disabling\n\nmsg.action = \"disable\";\n\nmsg.topic =\n    \"UPDATE rulesData\" +\n    \" SET active=0\" +\n    \" WHERE\" +\n    \" id=\" + msg.req.params.id + \";\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 2460,
        "wires": [
            [
                "5b4aa7bf2c540460"
            ]
        ]
    },
    {
        "id": "5b4aa7bf2c540460",
        "type": "mysql",
        "z": "e201e2d1a09b1eed",
        "g": "9aea9324d5ac451d",
        "mydb": "1654a6d7a221376c",
        "name": "",
        "x": 540,
        "y": 2420,
        "wires": [
            [
                "dd6a4ab68140c995"
            ]
        ]
    },
    {
        "id": "dd6a4ab68140c995",
        "type": "function",
        "z": "e201e2d1a09b1eed",
        "g": "9aea9324d5ac451d",
        "name": "PrepareResponse",
        "func": "// Prepare response\n\nmsg.payload = {\n    \"status\": msg.action + \" success\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 2420,
        "wires": [
            [
                "3c8220faa4d80124"
            ]
        ]
    },
    {
        "id": "3c8220faa4d80124",
        "type": "http response",
        "z": "e201e2d1a09b1eed",
        "g": "9aea9324d5ac451d",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 910,
        "y": 2420,
        "wires": []
    },
    {
        "id": "3536b83ee3937a04",
        "type": "comment",
        "z": "e201e2d1a09b1eed",
        "g": "9aea9324d5ac451d",
        "name": "Enable/Disable Rule by ID",
        "info": "",
        "x": 150,
        "y": 2340,
        "wires": []
    },
    {
        "id": "bd0a924ca05b5d11",
        "type": "http in",
        "z": "e201e2d1a09b1eed",
        "g": "6bc1d82a48ceadb0",
        "name": "",
        "url": "/rules/enable/all",
        "method": "patch",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 2600,
        "wires": [
            [
                "bd52e6c83bc0d652"
            ]
        ]
    },
    {
        "id": "84a7c674586bc7dd",
        "type": "http in",
        "z": "e201e2d1a09b1eed",
        "g": "6bc1d82a48ceadb0",
        "name": "",
        "url": "/rules/disable/all",
        "method": "patch",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 2680,
        "wires": [
            [
                "9b44092adc823348"
            ]
        ]
    },
    {
        "id": "bd52e6c83bc0d652",
        "type": "function",
        "z": "e201e2d1a09b1eed",
        "g": "6bc1d82a48ceadb0",
        "name": "CreateQuery",
        "func": "// Create query for enabling all\n\nmsg.action = \"enable all\";\nmsg.topic = \"UPDATE rulesData SET active=1;\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 2600,
        "wires": [
            [
                "effafe1b29e91ed8"
            ]
        ]
    },
    {
        "id": "9b44092adc823348",
        "type": "function",
        "z": "e201e2d1a09b1eed",
        "g": "6bc1d82a48ceadb0",
        "name": "CreateQuery",
        "func": "// Create query for disabling all\n\nmsg.action = \"disable all\";\nmsg.topic = \"UPDATE rulesData SET active=0;\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 2680,
        "wires": [
            [
                "effafe1b29e91ed8"
            ]
        ]
    },
    {
        "id": "effafe1b29e91ed8",
        "type": "mysql",
        "z": "e201e2d1a09b1eed",
        "g": "6bc1d82a48ceadb0",
        "mydb": "1654a6d7a221376c",
        "name": "",
        "x": 540,
        "y": 2640,
        "wires": [
            [
                "64ae96c2314cc417"
            ]
        ]
    },
    {
        "id": "64ae96c2314cc417",
        "type": "function",
        "z": "e201e2d1a09b1eed",
        "g": "6bc1d82a48ceadb0",
        "name": "PrepareResponse",
        "func": "// Prepare response\n\nmsg.payload = {\n    \"status\": msg.action + \" success\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 2640,
        "wires": [
            [
                "c0b2b2c48ff0c65b"
            ]
        ]
    },
    {
        "id": "c0b2b2c48ff0c65b",
        "type": "http response",
        "z": "e201e2d1a09b1eed",
        "g": "6bc1d82a48ceadb0",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 910,
        "y": 2640,
        "wires": []
    },
    {
        "id": "9619a5cf30052fea",
        "type": "http in",
        "z": "e201e2d1a09b1eed",
        "g": "ffff053900bb63ca",
        "name": "",
        "url": "/rules/:rulename",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 2820,
        "wires": [
            [
                "aa6596d2526e659b"
            ]
        ]
    },
    {
        "id": "0d81cc62a3607b9f",
        "type": "comment",
        "z": "e201e2d1a09b1eed",
        "g": "6bc1d82a48ceadb0",
        "name": "Enable/Disable All Rules",
        "info": "",
        "x": 150,
        "y": 2560,
        "wires": []
    },
    {
        "id": "aa6596d2526e659b",
        "type": "function",
        "z": "e201e2d1a09b1eed",
        "g": "ffff053900bb63ca",
        "name": "CreateQuery",
        "func": "// Create query\nvar ruleName = msg.req.params.rulename;\nvar topicPattern = msg.req.body.topicPattern;\nvar payloadPattern = msg.req.body.payloadPattern;\nvar method = msg.req.body.method;\nvar webHook = msg.req.body.webHook;\n\nmsg.topic =\n\"INSERT INTO rulesData (ruleName, topicPAttern, payloadPattern, method, webHook)\" +\n\" VALUES ('\" + ruleName + \"', '\" + topicPattern + \"', '\" + payloadPattern + \"', '\" + method + \"', '\" + webHook + \"');\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 2820,
        "wires": [
            [
                "3e07cc69cbb8ea96"
            ]
        ]
    },
    {
        "id": "3e07cc69cbb8ea96",
        "type": "mysql",
        "z": "e201e2d1a09b1eed",
        "g": "ffff053900bb63ca",
        "mydb": "1654a6d7a221376c",
        "name": "",
        "x": 540,
        "y": 2820,
        "wires": [
            [
                "f0a2fec2ef68ac63"
            ]
        ]
    },
    {
        "id": "f0a2fec2ef68ac63",
        "type": "function",
        "z": "e201e2d1a09b1eed",
        "g": "ffff053900bb63ca",
        "name": "PrepareResponse",
        "func": "// Prepare response\n\nif(msg.payload.affectedRows !== 0) {\n    msg.payload = {\n        \"status\": \"rule added\",\n        \"ruleName\": msg.req.params.rulename,\n        \"ruleId\": msg.payload.insertId\n    };\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 2820,
        "wires": [
            [
                "ddfba6492c27e12b"
            ]
        ]
    },
    {
        "id": "ddfba6492c27e12b",
        "type": "http response",
        "z": "e201e2d1a09b1eed",
        "g": "ffff053900bb63ca",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 910,
        "y": 2820,
        "wires": []
    },
    {
        "id": "354271f841ef0663",
        "type": "comment",
        "z": "e201e2d1a09b1eed",
        "g": "ffff053900bb63ca",
        "name": "Create Rule",
        "info": "",
        "x": 110,
        "y": 2780,
        "wires": []
    },
    {
        "id": "0fd8624766b2dc3b",
        "type": "mqtt in",
        "z": "e201e2d1a09b1eed",
        "g": "6b8ed2b5cf9e174b",
        "name": "ListenEverything (QoS 2)",
        "topic": "#",
        "qos": "2",
        "datatype": "auto",
        "broker": "f2f86710f80408e7",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 150,
        "y": 220,
        "wires": [
            [
                "b6087fa03967b97d"
            ]
        ]
    },
    {
        "id": "8753cc2ef930903b",
        "type": "mqtt in",
        "z": "e201e2d1a09b1eed",
        "g": "6b8ed2b5cf9e174b",
        "name": "ListenEverything (QoS 1)",
        "topic": "#",
        "qos": "1",
        "datatype": "auto",
        "broker": "f2f86710f80408e7",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 150,
        "y": 160,
        "wires": [
            [
                "b6087fa03967b97d"
            ]
        ]
    },
    {
        "id": "684980074095d89a",
        "type": "http in",
        "z": "e201e2d1a09b1eed",
        "g": "2dac822f9fa8fa31",
        "name": "",
        "url": "/pub/:topic/:payload",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 380,
        "wires": [
            [
                "8d82db435247b0de"
            ]
        ]
    },
    {
        "id": "07f68243e1d1abb9",
        "type": "mqtt out",
        "z": "e201e2d1a09b1eed",
        "g": "2dac822f9fa8fa31",
        "name": "MQTT",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "f2f86710f80408e7",
        "x": 550,
        "y": 320,
        "wires": []
    },
    {
        "id": "8d82db435247b0de",
        "type": "function",
        "z": "e201e2d1a09b1eed",
        "g": "2dac822f9fa8fa31",
        "name": "CreateMessage",
        "func": "msg.topic = msg.req.params.topic.toString();\nmsg.payload = msg.req.params.payload.toString();\nmsg.qos = 2;\nmsg.retain = false;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 380,
        "wires": [
            [
                "bbf8fda66520b4fb",
                "07f68243e1d1abb9"
            ]
        ]
    },
    {
        "id": "bbf8fda66520b4fb",
        "type": "function",
        "z": "e201e2d1a09b1eed",
        "g": "2dac822f9fa8fa31",
        "name": "CreateResponse",
        "func": "msg.payload = {\n    success: true,\n    message:\"published: \" +\n            msg.req.params.topic + \n            \"/\" + \n            msg.req.params.payload\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 380,
        "wires": [
            [
                "3bfda25f5858bb7c"
            ]
        ]
    },
    {
        "id": "3bfda25f5858bb7c",
        "type": "http response",
        "z": "e201e2d1a09b1eed",
        "g": "2dac822f9fa8fa31",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 770,
        "y": 380,
        "wires": []
    },
    {
        "id": "c58f1a558f26bfe6",
        "type": "comment",
        "z": "e201e2d1a09b1eed",
        "g": "2dac822f9fa8fa31",
        "name": "Publish by REST/POST",
        "info": "",
        "x": 140,
        "y": 320,
        "wires": []
    },
    {
        "id": "20f4f41054ab6fbb",
        "type": "inject",
        "z": "e201e2d1a09b1eed",
        "g": "f92513d76378bf3c",
        "name": "Dynamic Connection",
        "props": [
            {
                "p": "action",
                "v": "connect",
                "vt": "str"
            },
            {
                "p": "broker",
                "v": "{\"broker\":\"localhost\",\"port\":\"1883\",\"clientid\":\"node-red-dyn\",\"force\":true}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 180,
        "y": 520,
        "wires": [
            [
                "4b225b27884db1e4"
            ]
        ]
    },
    {
        "id": "4b225b27884db1e4",
        "type": "mqtt out",
        "z": "e201e2d1a09b1eed",
        "g": "f92513d76378bf3c",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "f2f86710f80408e7",
        "x": 360,
        "y": 520,
        "wires": []
    },
    {
        "id": "7ce853131aab1b80",
        "type": "comment",
        "z": "e201e2d1a09b1eed",
        "g": "f92513d76378bf3c",
        "name": "Connection Configuration",
        "info": "",
        "x": 160,
        "y": 480,
        "wires": []
    },
    {
        "id": "290d3110c921f009",
        "type": "mqtt in",
        "z": "471ac2a8a5e8653b",
        "g": "0f69789493f7eb67",
        "name": "ListenEverything(QoS 0)",
        "topic": "#",
        "qos": "0",
        "datatype": "auto",
        "broker": "f2f86710f80408e7",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 140,
        "y": 100,
        "wires": [
            [
                "03dbfc58492a3571"
            ]
        ]
    },
    {
        "id": "03dbfc58492a3571",
        "type": "function",
        "z": "471ac2a8a5e8653b",
        "g": "0f69789493f7eb67",
        "name": "SearchRules",
        "func": "// Search rules\nmsg.topic = \"SELECT * FROM rulesData\" +\n            \" WHERE\" +\n            \" ('\" + msg.topic + \"' LIKE topicPattern)\" +\n            \" AND\" +\n            \" ('\" + msg.payload + \"' LIKE payloadPattern)\" +\n            \" AND active=1\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 160,
        "wires": [
            [
                "febc1d17fe23f57e"
            ]
        ]
    },
    {
        "id": "4375a052d4bc7f87",
        "type": "function",
        "z": "471ac2a8a5e8653b",
        "g": "0f69789493f7eb67",
        "name": "CreateRequest",
        "func": "// Call webhook\nif(msg.payload.length !== 0)\n{\n    for(var i = 0; i < msg.payload.length; i++)\n    {\n        msg.method = msg.payload[i].method;\n        msg.url = msg.payload[i].webHook;\n        node.send([msg]);\n    }\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 280,
        "wires": [
            [
                "95f7cf496a98ebfa"
            ]
        ]
    },
    {
        "id": "a4c478c62c932d4c",
        "type": "debug",
        "z": "471ac2a8a5e8653b",
        "g": "0f69789493f7eb67",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 420,
        "wires": []
    },
    {
        "id": "febc1d17fe23f57e",
        "type": "mysql",
        "z": "471ac2a8a5e8653b",
        "g": "0f69789493f7eb67",
        "mydb": "1654a6d7a221376c",
        "name": "",
        "x": 400,
        "y": 220,
        "wires": [
            [
                "4375a052d4bc7f87"
            ]
        ]
    },
    {
        "id": "95f7cf496a98ebfa",
        "type": "http request",
        "z": "471ac2a8a5e8653b",
        "g": "0f69789493f7eb67",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "a2a345f1c4a3679a",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 510,
        "y": 360,
        "wires": [
            [
                "a4c478c62c932d4c"
            ]
        ]
    },
    {
        "id": "d26c7431209e10a7",
        "type": "comment",
        "z": "471ac2a8a5e8653b",
        "g": "0f69789493f7eb67",
        "name": "Auto Activation",
        "info": "",
        "x": 120,
        "y": 60,
        "wires": []
    },
    {
        "id": "3f18dad00a439691",
        "type": "mqtt in",
        "z": "471ac2a8a5e8653b",
        "g": "0f69789493f7eb67",
        "name": "ListenEverything(QoS 2)",
        "topic": "#",
        "qos": "2",
        "datatype": "auto",
        "broker": "f2f86710f80408e7",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 140,
        "y": 220,
        "wires": [
            [
                "03dbfc58492a3571"
            ]
        ]
    },
    {
        "id": "53bf42fd1785ad3f",
        "type": "mqtt in",
        "z": "471ac2a8a5e8653b",
        "g": "0f69789493f7eb67",
        "name": "ListenEverything(QoS 1)",
        "topic": "#",
        "qos": "1",
        "datatype": "auto",
        "broker": "f2f86710f80408e7",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 140,
        "y": 160,
        "wires": [
            [
                "03dbfc58492a3571"
            ]
        ]
    },
    {
        "id": "b3bab409f6dd92ed",
        "type": "e-mail",
        "z": "471ac2a8a5e8653b",
        "g": "e9106a6dd33d76ad",
        "server": "smtp.gmail.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "",
        "dname": "",
        "x": 370,
        "y": 560,
        "wires": []
    },
    {
        "id": "ee43c92062b30b51",
        "type": "inject",
        "z": "471ac2a8a5e8653b",
        "g": "e9106a6dd33d76ad",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "to",
                "v": "haeram.kim1@gmail.com",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "test topic",
        "payload": "test payload",
        "payloadType": "str",
        "x": 160,
        "y": 560,
        "wires": [
            [
                "b3bab409f6dd92ed"
            ]
        ]
    },
    {
        "id": "9b666f3e.797cb",
        "type": "inject",
        "z": "471ac2a8a5e8653b",
        "g": "51c42e34ce7286d6",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "apikey",
                "v": "869940",
                "vt": "str"
            },
            {
                "p": "phonenumber",
                "v": "+15622416686",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "fuckoff",
        "payloadType": "str",
        "x": 110,
        "y": 700,
        "wires": [
            [
                "e68896f392d7777b"
            ]
        ]
    },
    {
        "id": "e68896f392d7777b",
        "type": "function",
        "z": "471ac2a8a5e8653b",
        "g": "51c42e34ce7286d6",
        "name": "CreateRequest",
        "func": "const RootLink= \"https://api.callmebot.com/whatsapp.php\";\n\n// Call webhook\nif(msg.payload.length !== 0)\n{\n    msg.method = \"GET\";\n    msg.url = RootLink +\n            \"?phone=\" + msg.phonenumber +\n            \"&text=\" + msg.payload +\n            \"&apikey=\" + msg.apikey +\n            \"&source=nodered\";\n    node.send(msg);\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 700,
        "wires": [
            [
                "2d744cd47dc1a51b"
            ]
        ]
    },
    {
        "id": "2d744cd47dc1a51b",
        "type": "http request",
        "z": "471ac2a8a5e8653b",
        "g": "51c42e34ce7286d6",
        "name": "Send Whatsapp",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "a2a345f1c4a3679a",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 480,
        "y": 700,
        "wires": [
            [
                "079e7b149184c275"
            ]
        ]
    },
    {
        "id": "079e7b149184c275",
        "type": "debug",
        "z": "471ac2a8a5e8653b",
        "g": "51c42e34ce7286d6",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 700,
        "wires": []
    },
    {
        "id": "5c5428893a551428",
        "type": "comment",
        "z": "471ac2a8a5e8653b",
        "g": "51c42e34ce7286d6",
        "name": "Send WhatsApp",
        "info": "",
        "x": 120,
        "y": 660,
        "wires": []
    },
    {
        "id": "2c3ac744afb64db9",
        "type": "comment",
        "z": "471ac2a8a5e8653b",
        "g": "e9106a6dd33d76ad",
        "name": "Send Email",
        "info": "",
        "x": 110,
        "y": 520,
        "wires": []
    },
    {
        "id": "68a3f370ae0caa1f",
        "type": "http in",
        "z": "644bccdac689256f",
        "g": "6704523d31813e77",
        "name": "",
        "url": "/timestamp",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 340,
        "wires": [
            [
                "73b52990811fc633"
            ]
        ]
    },
    {
        "id": "73b52990811fc633",
        "type": "function",
        "z": "644bccdac689256f",
        "g": "6704523d31813e77",
        "name": "PrepareTimestamp",
        "func": "msg.payload = {\n    timestamp: (new Date()).getTime().toString()\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 340,
        "wires": [
            [
                "4c8456156ed0d48d"
            ]
        ]
    },
    {
        "id": "4c8456156ed0d48d",
        "type": "http response",
        "z": "644bccdac689256f",
        "g": "6704523d31813e77",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 550,
        "y": 340,
        "wires": []
    },
    {
        "id": "6a0e034d071e10bb",
        "type": "comment",
        "z": "644bccdac689256f",
        "g": "6704523d31813e77",
        "name": "REST/GET current timestamp",
        "info": "",
        "x": 160,
        "y": 280,
        "wires": []
    },
    {
        "id": "f744725d58d96e39",
        "type": "comment",
        "z": "644bccdac689256f",
        "g": "10568c80269dcce8",
        "name": "REST/GET Random Code",
        "info": "",
        "x": 150,
        "y": 440,
        "wires": []
    },
    {
        "id": "61fb47c190aa6997",
        "type": "http in",
        "z": "644bccdac689256f",
        "g": "10568c80269dcce8",
        "name": "",
        "url": "/randomcode/:len",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 500,
        "wires": [
            [
                "cec6558885044a83"
            ]
        ]
    },
    {
        "id": "cec6558885044a83",
        "type": "function",
        "z": "644bccdac689256f",
        "g": "10568c80269dcce8",
        "name": "PrepareRandomCode",
        "func": "var randomString = function(length) {\n    var text = \"\";\n    var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n    for(var i = 0; i < length; i++) {\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n    return text;\n}\n\nmsg.payload = {\n    code: randomString(msg.req.params.len)\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 500,
        "wires": [
            [
                "d10ffc5018975a2c"
            ]
        ]
    },
    {
        "id": "d10ffc5018975a2c",
        "type": "http response",
        "z": "644bccdac689256f",
        "g": "10568c80269dcce8",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 610,
        "y": 500,
        "wires": []
    },
    {
        "id": "9ea877d17bab30c6",
        "type": "comment",
        "z": "644bccdac689256f",
        "g": "152a7e1856d083de",
        "name": "REST/GET UUID",
        "info": "",
        "x": 120,
        "y": 600,
        "wires": []
    },
    {
        "id": "3f78cde70e9df008",
        "type": "http in",
        "z": "644bccdac689256f",
        "g": "152a7e1856d083de",
        "name": "",
        "url": "/uuid",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 100,
        "y": 660,
        "wires": [
            [
                "786d6160802049b7"
            ]
        ]
    },
    {
        "id": "97f1ed6c67d27e46",
        "type": "function",
        "z": "644bccdac689256f",
        "g": "152a7e1856d083de",
        "name": "PrepareResponse",
        "func": "// Prepare response\nmsg.payload = {\n    uuid: msg.payload\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 660,
        "wires": [
            [
                "b64324774c34298f"
            ]
        ]
    },
    {
        "id": "b64324774c34298f",
        "type": "http response",
        "z": "644bccdac689256f",
        "g": "152a7e1856d083de",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 670,
        "y": 660,
        "wires": []
    },
    {
        "id": "786d6160802049b7",
        "type": "uuid",
        "z": "644bccdac689256f",
        "g": "152a7e1856d083de",
        "uuidVersion": "v4",
        "namespaceType": "",
        "namespace": "",
        "namespaceCustom": "",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "x": 270,
        "y": 660,
        "wires": [
            [
                "97f1ed6c67d27e46"
            ]
        ]
    },
    {
        "id": "38949a4110fb0a92",
        "type": "inject",
        "z": "644bccdac689256f",
        "g": "73af34b2e9f445fa",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1800",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 120,
        "wires": [
            [
                "6b04066642578638",
                "5dc469d862c3aa6c"
            ]
        ]
    },
    {
        "id": "6b04066642578638",
        "type": "debug",
        "z": "644bccdac689256f",
        "g": "73af34b2e9f445fa",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 450,
        "y": 80,
        "wires": []
    },
    {
        "id": "5dc469d862c3aa6c",
        "type": "mqtt out",
        "z": "644bccdac689256f",
        "g": "73af34b2e9f445fa",
        "name": "",
        "topic": "timestamp",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "f2f86710f80408e7",
        "x": 450,
        "y": 180,
        "wires": []
    },
    {
        "id": "1cd3c91e65ec2636",
        "type": "comment",
        "z": "644bccdac689256f",
        "g": "73af34b2e9f445fa",
        "name": "Publish Periodic Timestamp",
        "info": "",
        "x": 160,
        "y": 60,
        "wires": []
    },
    {
        "id": "4ef2f9d461607592",
        "type": "comment",
        "z": "5136785d38f71e48",
        "g": "ed8b5377f33374f1",
        "name": "REST/GET one or more records from DB",
        "info": "",
        "x": 200,
        "y": 60,
        "wires": []
    },
    {
        "id": "bf0497842136d6fe",
        "type": "http in",
        "z": "5136785d38f71e48",
        "g": "ed8b5377f33374f1",
        "name": "",
        "url": "/record/:topic",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 100,
        "wires": [
            [
                "c6e8c4cb3188a32b"
            ]
        ]
    },
    {
        "id": "a1cef4fb8a5fcb51",
        "type": "http in",
        "z": "5136785d38f71e48",
        "g": "ed8b5377f33374f1",
        "name": "",
        "url": "/records/:topic/last/:count",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 180,
        "wires": [
            [
                "c6e8c4cb3188a32b"
            ]
        ]
    },
    {
        "id": "c6e8c4cb3188a32b",
        "type": "function",
        "z": "5136785d38f71e48",
        "g": "ed8b5377f33374f1",
        "name": "CreateQuery",
        "func": "// Create query\n\n// if required record count is not specified\n// set default to 1\nif(!msg.req.params.count) {\n    msg.req.params.count = 1;\n}\n\n// build the sql query\nmsg.topic =\n    \"SELECT id,topic,payload,timestamp \" +\n    \"FROM thingsData \" +\n    \"WHERE topic='\" + escape(msg.req.params.topic) + \"' \" +\n    \"AND deleted=0 \" +\n    \"ORDER BY id DESC \" +\n    \"LIMIT \" + msg.req.params.count + \";\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 140,
        "wires": [
            [
                "69fd65e799173d30"
            ]
        ]
    },
    {
        "id": "d42d5b33466f8589",
        "type": "function",
        "z": "5136785d38f71e48",
        "g": "ed8b5377f33374f1",
        "name": "CreateResponse",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 140,
        "wires": [
            [
                "b3a51c03435b44e1"
            ]
        ]
    },
    {
        "id": "b3a51c03435b44e1",
        "type": "http response",
        "z": "5136785d38f71e48",
        "g": "ed8b5377f33374f1",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 930,
        "y": 140,
        "wires": []
    },
    {
        "id": "69fd65e799173d30",
        "type": "mysql",
        "z": "5136785d38f71e48",
        "g": "ed8b5377f33374f1",
        "mydb": "1654a6d7a221376c",
        "name": "",
        "x": 580,
        "y": 140,
        "wires": [
            [
                "d42d5b33466f8589"
            ]
        ]
    },
    {
        "id": "06aa5ee664b7d487",
        "type": "http in",
        "z": "5136785d38f71e48",
        "g": "7457db638135fbdb",
        "name": "",
        "url": "/records/topic-like/:topic/payload-like/:payload/last/:count",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 270,
        "y": 320,
        "wires": [
            [
                "81050b48ca38a079"
            ]
        ]
    },
    {
        "id": "81050b48ca38a079",
        "type": "function",
        "z": "5136785d38f71e48",
        "g": "7457db638135fbdb",
        "name": "CreateSELECT",
        "func": "// Create query\n\n// if no authentication filter defined or available\n// set the default value as 1\nif(!msg.req.authFilter)\n    msg.req.authFilter = 1;\n\n// wildcard used for API query is * and this needs to be converted into SQL wildcard character %\nmsg.topic = \"SELECT id,topic,payload,timestamp\" +\n            \" FROM thingsData WHERE\" +\n            \" topic LIKE '\" + msg.req.params.topic.\n            replace(/\\*/g, \"%\") + \"'\" +\n            \" AND\" +\n            \" payload LIKE '\" + msg.req.params.payload.\n            replace(/\\*/g, \"%\") + \"'\" +\n            \" AND deleted=0\" +\n            \" AND (\" + msg.req.authFilter + \")\" +\n            \" ORDER BY ID DESC\" +\n            \" LIMIT \" + msg.req.params.count + \";\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 320,
        "wires": [
            [
                "edcb6c70dd6d14e2"
            ]
        ]
    },
    {
        "id": "70a3925943c1bb85",
        "type": "function",
        "z": "5136785d38f71e48",
        "g": "7457db638135fbdb",
        "name": "CreateResponse",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 320,
        "wires": [
            [
                "53021f46cb83d817"
            ]
        ]
    },
    {
        "id": "53021f46cb83d817",
        "type": "http response",
        "z": "5136785d38f71e48",
        "g": "7457db638135fbdb",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1170,
        "y": 320,
        "wires": []
    },
    {
        "id": "d8f75eb592a51fa4",
        "type": "comment",
        "z": "5136785d38f71e48",
        "g": "7457db638135fbdb",
        "name": "REST/GET records based on condition",
        "info": "",
        "x": 190,
        "y": 280,
        "wires": []
    },
    {
        "id": "edcb6c70dd6d14e2",
        "type": "mysql",
        "z": "5136785d38f71e48",
        "g": "7457db638135fbdb",
        "mydb": "1654a6d7a221376c",
        "name": "",
        "x": 800,
        "y": 320,
        "wires": [
            [
                "70a3925943c1bb85"
            ]
        ]
    },
    {
        "id": "9a663ef956e5fb19",
        "type": "http in",
        "z": "5136785d38f71e48",
        "g": "617bb68c7b2284cf",
        "name": "",
        "url": "/records/:topic/after/:time/last/:count",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 200,
        "y": 460,
        "wires": [
            [
                "a6b218af98a297d3"
            ]
        ]
    },
    {
        "id": "469e6ab343dfda6b",
        "type": "http in",
        "z": "5136785d38f71e48",
        "g": "617bb68c7b2284cf",
        "name": "",
        "url": "/records/:topic/before/:time/last/:count",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 210,
        "y": 520,
        "wires": [
            [
                "9090baec9ebee909"
            ]
        ]
    },
    {
        "id": "e0c5e577413cb530",
        "type": "http in",
        "z": "5136785d38f71e48",
        "g": "617bb68c7b2284cf",
        "name": "",
        "url": "/records/:topic/duration/:start/:end/last/:count",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 230,
        "y": 580,
        "wires": [
            [
                "d9d9b248f540098f"
            ]
        ]
    },
    {
        "id": "a6b218af98a297d3",
        "type": "function",
        "z": "5136785d38f71e48",
        "g": "617bb68c7b2284cf",
        "name": "CreateAFTERQuery",
        "func": "// Create 'AFTER' query\n\n// if no authentication filter defined or available\n// set the default value as 1\nif(!msg.req.authFilter)\n    msg.req.authFilter = 1;\n\n// wildcard used for API query is * and this needs to be converted into SQL wildcard character %\nmsg.topic =\n    \"SELECT id,topic,payload,timestamp\" +\n    \" FROM thingsData WHERE\" +\n    \" topic LIKE '\" + msg.req.params.topic. replace(/\\*/g, \"%\") + \"'\" +\n    \" AND\" +\n    \" timestamp >= '\" + msg.req.params.time + \"'\" + \" AND deleted=0\" +\n    \" AND (\" + msg.req.authFilter + \")\" +\n    \" ORDER BY ID DESC\" +\n    \" LIMIT \" + msg.req.params.count + \";\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 460,
        "wires": [
            [
                "29544c1af11d03dc"
            ]
        ]
    },
    {
        "id": "9090baec9ebee909",
        "type": "function",
        "z": "5136785d38f71e48",
        "g": "617bb68c7b2284cf",
        "name": "CreateBEFOREQuery",
        "func": "// Create 'BEFORE' query\n\n// if no authentication filter defined or available\n// set the default value as 1\nif(!msg.req.authFilter)\n    msg.req.authFilter = 1;\n\n// wildcard used for API query is * and this needs to be converted into SQL wildcard character %\nmsg.topic = \"SELECT id,topic,payload,timestamp\" +\n    \" FROM thingsData WHERE\" +\n    \" topic LIKE '\" + msg.req.params.topic. replace(/\\*/g, \"%\") + \"'\" +\n    \" AND\" +\n    \" timestamp <= '\" + msg.req.params.time + \"'\" + \" AND deleted=0\" +\n    \" AND (\" + msg.req.authFilter + \")\" +\n    \" ORDER BY ID DESC\" +\n    \" LIMIT \" + msg.req.params.count + \";\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 520,
        "wires": [
            [
                "29544c1af11d03dc"
            ]
        ]
    },
    {
        "id": "d9d9b248f540098f",
        "type": "function",
        "z": "5136785d38f71e48",
        "g": "617bb68c7b2284cf",
        "name": "CreateDURATIONQuery",
        "func": "// Create 'DURING' query\n\n// if no authentication filter defined or available\n// set the default value as 1\nif(!msg.req.authFilter)\n    msg.req.authFilter = 1;\n\n// wildcard used for API query is * and this needs to be converted into SQL wildcard character %\nmsg.topic =\n    \"SELECT id,topic,payload,timestamp\" +\n    \" FROM thingsData WHERE\" +\n    \" topic LIKE '\" + msg.req.params.topic.replace(/\\*/g, \"%\") + \"'\" +\n    \" AND\" +\n    \" timestamp >= '\" + msg.req.params.start + \"'\" + \" AND\" +\n    \" timestamp <='\" + msg.req.params.end + \"'\" +\n    \" AND deleted=0\" +\n    \" AND (\" + msg.req.authFilter + \")\" +\n    \" ORDER BY ID DESC\" +\n    \" LIMIT \" + msg.req.params.count + \";\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 580,
        "wires": [
            [
                "29544c1af11d03dc"
            ]
        ]
    },
    {
        "id": "7859c36ac49760a1",
        "type": "function",
        "z": "5136785d38f71e48",
        "g": "617bb68c7b2284cf",
        "name": "CreateResponse",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 520,
        "wires": [
            [
                "55491d7a1871f5b9"
            ]
        ]
    },
    {
        "id": "55491d7a1871f5b9",
        "type": "http response",
        "z": "5136785d38f71e48",
        "g": "617bb68c7b2284cf",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1190,
        "y": 520,
        "wires": []
    },
    {
        "id": "4a0c36d98b93a985",
        "type": "comment",
        "z": "5136785d38f71e48",
        "g": "617bb68c7b2284cf",
        "name": "REST/GET records based on time period",
        "info": "",
        "x": 200,
        "y": 420,
        "wires": []
    },
    {
        "id": "29544c1af11d03dc",
        "type": "mysql",
        "z": "5136785d38f71e48",
        "g": "617bb68c7b2284cf",
        "mydb": "1654a6d7a221376c",
        "name": "",
        "x": 820,
        "y": 520,
        "wires": [
            [
                "7859c36ac49760a1"
            ]
        ]
    },
    {
        "id": "6112add4d31eafc5",
        "type": "http in",
        "z": "5136785d38f71e48",
        "g": "778ff3b8764df908",
        "name": "",
        "url": "/record/:topic/id/:id",
        "method": "patch",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 720,
        "wires": [
            [
                "281376abb8f58d6c"
            ]
        ]
    },
    {
        "id": "baee9952c2ae31be",
        "type": "http in",
        "z": "5136785d38f71e48",
        "g": "778ff3b8764df908",
        "name": "",
        "url": "/records/:topic",
        "method": "patch",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 780,
        "wires": [
            [
                "4d176f4e358ad420"
            ]
        ]
    },
    {
        "id": "2337f5a514cb602a",
        "type": "http in",
        "z": "5136785d38f71e48",
        "g": "778ff3b8764df908",
        "name": "",
        "url": "/records/:topic/first/:count",
        "method": "patch",
        "upload": false,
        "swaggerDoc": "",
        "x": 180,
        "y": 840,
        "wires": [
            [
                "a4aee1972fe7f78f"
            ]
        ]
    },
    {
        "id": "fbbee3f451f3badc",
        "type": "http in",
        "z": "5136785d38f71e48",
        "g": "778ff3b8764df908",
        "name": "",
        "url": "/records/:topic/last/:count",
        "method": "patch",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 900,
        "wires": [
            [
                "7df444c1898f40eb"
            ]
        ]
    },
    {
        "id": "281376abb8f58d6c",
        "type": "function",
        "z": "5136785d38f71e48",
        "g": "778ff3b8764df908",
        "name": "CreateUPDATEQueryByID",
        "func": "// if no authentication filter defined or available\n// set the default value as 1\nif(!msg.req.authFilter)\n    msg.req.authFilter = 1;\n\nmsg.topic =\n    \"UPDATE thingsData\" + \" SET deleted=1\" +\n    \" WHERE\" +\n    \" topic='\" + msg.req.params.topic + \"'\" +\n    \" AND (\" + msg.req.authFilter + \")\" +\n    \" AND id=\" + msg.req.params.id + \";\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 720,
        "wires": [
            [
                "388d2936128df466"
            ]
        ]
    },
    {
        "id": "4d176f4e358ad420",
        "type": "function",
        "z": "5136785d38f71e48",
        "g": "778ff3b8764df908",
        "name": "CreateUPDATEQueryByTopic",
        "func": "// if no authentication filter defined or available\n// set the default value as 1\nif(!msg.req.authFilter)\n    msg.req.authFilter = 1;\n\nmsg.topic =\n    \"UPDATE thingsData\" +\n    \" SET deleted=1 \" +\n    \" WHERE\" +\n    \" topic='\" + msg.req.params.topic + \"'\" +\n    \" AND (\" + msg.req.authFilter + \");\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 780,
        "wires": [
            [
                "388d2936128df466"
            ]
        ]
    },
    {
        "id": "a4aee1972fe7f78f",
        "type": "function",
        "z": "5136785d38f71e48",
        "g": "778ff3b8764df908",
        "name": "CreateUPDATEfromFirstQuery",
        "func": "// if required record count is not specified\n// set default to 1\nif(!msg.req.params.count)\n    msg.req.params.count = 1;\n\n// if no authentication filter defined or available\n// set the default value as 1\nif(!msg.req.authFilter)\n    msg.req.authFilter = 1;\n    \nmsg.topic =\n    \"UPDATE thingsData\" +\n    \" SET deleted=1 \" +\n    \" WHERE\" +\n    \" topic='\" + msg.req.params.topic + \"'\" +\n    \" AND (\" + msg.req.authFilter + \")\" +\n    \" ORDER BY id ASC\" +\n    \" LIMIT \" + msg.req.params.count + \";\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 840,
        "wires": [
            [
                "388d2936128df466"
            ]
        ]
    },
    {
        "id": "7df444c1898f40eb",
        "type": "function",
        "z": "5136785d38f71e48",
        "g": "778ff3b8764df908",
        "name": "CreateUPDATEfromLastQuery",
        "func": "// if required record count is not specified\n// set default to 1\nif(!msg.req.params.count)\n    msg.req.params.count = 1;\n\n// if no authentication filter defined or available\n// set the default value as 1\nif(!msg.req.authFilter)\n    msg.req.authFilter = 1;\n    \nmsg.topic =\n    \"UPDATE thingsData\" +\n    \" SET deleted=1 \" +\n    \" WHERE\" +\n    \" topic='\" + msg.req.params.topic + \"'\" +\n    \" AND (\" + msg.req.authFilter + \")\" +\n    \" ORDER BY id DESC\" +\n    \" LIMIT \" + msg.req.params.count + \";\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 900,
        "wires": [
            [
                "388d2936128df466"
            ]
        ]
    },
    {
        "id": "f21752adbe6c1f1c",
        "type": "function",
        "z": "5136785d38f71e48",
        "g": "778ff3b8764df908",
        "name": "CreateResponse",
        "func": "// Prepare response\nmsg.payload = {\n    \"found\": msg.payload.affectedRows,\n    \"changed\": msg.payload.changedRows,\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 800,
        "wires": [
            [
                "29528837a21f678f"
            ]
        ]
    },
    {
        "id": "29528837a21f678f",
        "type": "http response",
        "z": "5136785d38f71e48",
        "g": "778ff3b8764df908",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1170,
        "y": 800,
        "wires": []
    },
    {
        "id": "0f4cc6ac5817a644",
        "type": "comment",
        "z": "5136785d38f71e48",
        "g": "778ff3b8764df908",
        "name": "REST/PATCH records to deleted based on condition",
        "info": "",
        "x": 230,
        "y": 680,
        "wires": []
    },
    {
        "id": "388d2936128df466",
        "type": "mysql",
        "z": "5136785d38f71e48",
        "g": "778ff3b8764df908",
        "mydb": "1654a6d7a221376c",
        "name": "",
        "x": 800,
        "y": 800,
        "wires": [
            [
                "f21752adbe6c1f1c"
            ]
        ]
    },
    {
        "id": "a9141c1706a40ab5",
        "type": "function",
        "z": "5136785d38f71e48",
        "g": "08368f4a4f432e34",
        "name": "CreateDELETEQueryByTopic",
        "func": "// if no authentication filter defined or available\n// set the default value as 1\nif(!msg.req.authFilter)\n    msg.req.authFilter = 1;\n\nmsg.topic =\n    \"DELETE FROM thingsData\" +\n    \" WHERE deleted=1\" +\n    \" AND topic='\" + msg.req.params.topic + \"'\" +\n    \" AND (\" + msg.req.authFilter + \");\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 1100,
        "wires": [
            [
                "7a1158daf4dae513"
            ]
        ]
    },
    {
        "id": "61340a460ebd6e30",
        "type": "function",
        "z": "5136785d38f71e48",
        "g": "08368f4a4f432e34",
        "name": "CreateDELETEfromFirstQuery",
        "func": "// Purge first few records\n\n// if required record count is not specified\n// set default to 1\nif(!msg.req.params.count)\n    msg.req.params.count = 1;\n\n// if no authentication filter defined or available\n// set the default value as 1\nif(!msg.req.authFilter)\n    msg.req.authFilter = 1;\n\nmsg.topic =\n    \"DELETE FROM thingsData\" +\n    \" WHERE deleted=1\" +\n    \" AND topic='\" + msg.req.params.topic + \"'\" +\n    \" AND (\" + msg.req.authFilter + \")\" +\n    \" ORDER BY id ASC\" +\n    \" LIMIT \" + msg.req.params.count + \";\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 1160,
        "wires": [
            [
                "7a1158daf4dae513"
            ]
        ]
    },
    {
        "id": "2dc06f1c3dd37890",
        "type": "function",
        "z": "5136785d38f71e48",
        "g": "08368f4a4f432e34",
        "name": "CreateDELETEfromLastQuery",
        "func": "// if required record count is not specified\n// set default to 1\nif(!msg.req.params.count)\n    msg.req.params.count = 1;\n\n// if no authentication filter defined or available\n// set the default value as 1\nif(!msg.req.authFilter)\n    msg.req.authFilter = 1;\n    \nmsg.topic =\n    \"DELETE FROM thingsData\" +\n    \" WHERE deleted=1\" +\n    \" AND topic='\" + msg.req.params.topic + \"'\" +\n    \" AND (\" + msg.req.authFilter + \")\" +\n    \" ORDER BY id DESC\" +\n    \" LIMIT \" + msg.req.params.count + \";\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 1220,
        "wires": [
            [
                "7a1158daf4dae513"
            ]
        ]
    },
    {
        "id": "85d62b126d5ac07b",
        "type": "function",
        "z": "5136785d38f71e48",
        "g": "08368f4a4f432e34",
        "name": "CreateResponse",
        "func": "// Prepare response\nmsg.payload = {\n    \"found\": msg.payload.affectedRows,\n    \"changed\": msg.payload.changedRows,\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 1120,
        "wires": [
            [
                "188ef26fe77e73f6"
            ]
        ]
    },
    {
        "id": "188ef26fe77e73f6",
        "type": "http response",
        "z": "5136785d38f71e48",
        "g": "08368f4a4f432e34",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1170,
        "y": 1120,
        "wires": []
    },
    {
        "id": "5d8ab9d77ee88813",
        "type": "function",
        "z": "5136785d38f71e48",
        "g": "08368f4a4f432e34",
        "name": "CreateDELETEQueryByID",
        "func": "// if no authentication filter defined or available\n// set the default value as 1\nif(!msg.req.authFilter)\n    msg.req.authFilter = 1;\n\nmsg.topic =\n    \"DELETE FROM thingsData\" +\n    \" WHERE deleted=1\" +\n    \" AND topic='\" + msg.req.params.topic + \"'\" +\n    \" AND (\" + msg.req.authFilter + \")\" +\n    \" AND id=\" + msg.req.params.id + \";\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 1040,
        "wires": [
            [
                "7a1158daf4dae513"
            ]
        ]
    },
    {
        "id": "0415dcf149cfef6d",
        "type": "http in",
        "z": "5136785d38f71e48",
        "g": "08368f4a4f432e34",
        "name": "",
        "url": "/record/:topic/id/:id",
        "method": "delete",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 1040,
        "wires": [
            [
                "5d8ab9d77ee88813"
            ]
        ]
    },
    {
        "id": "babe1176b387d4c1",
        "type": "http in",
        "z": "5136785d38f71e48",
        "g": "08368f4a4f432e34",
        "name": "",
        "url": "/records/:topic",
        "method": "delete",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 1100,
        "wires": [
            [
                "a9141c1706a40ab5"
            ]
        ]
    },
    {
        "id": "e1a08731fe7dc59f",
        "type": "http in",
        "z": "5136785d38f71e48",
        "g": "08368f4a4f432e34",
        "name": "",
        "url": "/records/:topic/first/:count",
        "method": "delete",
        "upload": false,
        "swaggerDoc": "",
        "x": 180,
        "y": 1160,
        "wires": [
            [
                "61340a460ebd6e30"
            ]
        ]
    },
    {
        "id": "4d46bbc216bdc43a",
        "type": "http in",
        "z": "5136785d38f71e48",
        "g": "08368f4a4f432e34",
        "name": "",
        "url": "/records/:topic/last/:count",
        "method": "delete",
        "upload": false,
        "swaggerDoc": "",
        "x": 180,
        "y": 1220,
        "wires": [
            [
                "2dc06f1c3dd37890"
            ]
        ]
    },
    {
        "id": "a7901b4b61099963",
        "type": "comment",
        "z": "5136785d38f71e48",
        "g": "08368f4a4f432e34",
        "name": "REST/DELETE records based on condition",
        "info": "",
        "x": 200,
        "y": 1000,
        "wires": []
    },
    {
        "id": "7a1158daf4dae513",
        "type": "mysql",
        "z": "5136785d38f71e48",
        "g": "08368f4a4f432e34",
        "mydb": "1654a6d7a221376c",
        "name": "",
        "x": 800,
        "y": 1120,
        "wires": [
            [
                "85d62b126d5ac07b"
            ]
        ]
    }
]